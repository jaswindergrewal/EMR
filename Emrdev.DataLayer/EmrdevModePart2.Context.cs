//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Emrdev.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class devbackupEntitiesPart2 : DbContext
    {
        public devbackupEntitiesPart2()
            : base("name=devbackupEntitiesPart2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<XeroLog> XeroLog { get; set; }
        public DbSet<XeroPatients> XeroPatients { get; set; }
        public DbSet<Patients> Patients { get; set; }
        public DbSet<UploadTags> UploadTags { get; set; }
        public DbSet<Upload_tbl> Upload_tbl { get; set; }
        public DbSet<EmailTemplate> EmailTemplate { get; set; }
        public DbSet<CRMWufooLink> CRMWufooLink { get; set; }
        public DbSet<AutoShipEmailTEmplate> AutoShipEmailTEmplate { get; set; }
        public DbSet<IVRTemplate> IVRTemplate { get; set; }
        public DbSet<QB_Invoice1> QB_Invoice1 { get; set; }
        public DbSet<AutoshipProducts> AutoshipProducts { get; set; }
        public DbSet<Admin_ShippingValues> Admin_ShippingValues { get; set; }
        public DbSet<AdminManagementProgramFee> AdminManagementProgramFee { get; set; }
    
        public virtual int ssp_InsertLabReportGroups(string groupName, string groupTitle, Nullable<int> sortOrder, Nullable<bool> showGraph, Nullable<decimal> chartBottom, Nullable<decimal> maleLongevityHigh, Nullable<decimal> maleLongevityLow, Nullable<decimal> femaleLongevityHigh, Nullable<decimal> femaleLongevityLow, Nullable<decimal> maleAcceptableHigh, Nullable<decimal> maleAcceptableLow, Nullable<decimal> femaleAcceptableHigh, Nullable<decimal> femaleAcceptableLow, string description, string maleHighTxt, string maleLowTxt, string maleNormalTxt, string femHighTxt, string femLowTxt, string femNormalTxt, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var groupTitleParameter = groupTitle != null ?
                new ObjectParameter("groupTitle", groupTitle) :
                new ObjectParameter("groupTitle", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(int));
    
            var showGraphParameter = showGraph.HasValue ?
                new ObjectParameter("showGraph", showGraph) :
                new ObjectParameter("showGraph", typeof(bool));
    
            var chartBottomParameter = chartBottom.HasValue ?
                new ObjectParameter("chartBottom", chartBottom) :
                new ObjectParameter("chartBottom", typeof(decimal));
    
            var maleLongevityHighParameter = maleLongevityHigh.HasValue ?
                new ObjectParameter("maleLongevityHigh", maleLongevityHigh) :
                new ObjectParameter("maleLongevityHigh", typeof(decimal));
    
            var maleLongevityLowParameter = maleLongevityLow.HasValue ?
                new ObjectParameter("maleLongevityLow", maleLongevityLow) :
                new ObjectParameter("maleLongevityLow", typeof(decimal));
    
            var femaleLongevityHighParameter = femaleLongevityHigh.HasValue ?
                new ObjectParameter("femaleLongevityHigh", femaleLongevityHigh) :
                new ObjectParameter("femaleLongevityHigh", typeof(decimal));
    
            var femaleLongevityLowParameter = femaleLongevityLow.HasValue ?
                new ObjectParameter("femaleLongevityLow", femaleLongevityLow) :
                new ObjectParameter("femaleLongevityLow", typeof(decimal));
    
            var maleAcceptableHighParameter = maleAcceptableHigh.HasValue ?
                new ObjectParameter("maleAcceptableHigh", maleAcceptableHigh) :
                new ObjectParameter("maleAcceptableHigh", typeof(decimal));
    
            var maleAcceptableLowParameter = maleAcceptableLow.HasValue ?
                new ObjectParameter("maleAcceptableLow", maleAcceptableLow) :
                new ObjectParameter("maleAcceptableLow", typeof(decimal));
    
            var femaleAcceptableHighParameter = femaleAcceptableHigh.HasValue ?
                new ObjectParameter("femaleAcceptableHigh", femaleAcceptableHigh) :
                new ObjectParameter("femaleAcceptableHigh", typeof(decimal));
    
            var femaleAcceptableLowParameter = femaleAcceptableLow.HasValue ?
                new ObjectParameter("femaleAcceptableLow", femaleAcceptableLow) :
                new ObjectParameter("femaleAcceptableLow", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var maleHighTxtParameter = maleHighTxt != null ?
                new ObjectParameter("maleHighTxt", maleHighTxt) :
                new ObjectParameter("maleHighTxt", typeof(string));
    
            var maleLowTxtParameter = maleLowTxt != null ?
                new ObjectParameter("maleLowTxt", maleLowTxt) :
                new ObjectParameter("maleLowTxt", typeof(string));
    
            var maleNormalTxtParameter = maleNormalTxt != null ?
                new ObjectParameter("maleNormalTxt", maleNormalTxt) :
                new ObjectParameter("maleNormalTxt", typeof(string));
    
            var femHighTxtParameter = femHighTxt != null ?
                new ObjectParameter("femHighTxt", femHighTxt) :
                new ObjectParameter("femHighTxt", typeof(string));
    
            var femLowTxtParameter = femLowTxt != null ?
                new ObjectParameter("femLowTxt", femLowTxt) :
                new ObjectParameter("femLowTxt", typeof(string));
    
            var femNormalTxtParameter = femNormalTxt != null ?
                new ObjectParameter("femNormalTxt", femNormalTxt) :
                new ObjectParameter("femNormalTxt", typeof(string));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertLabReportGroups", groupNameParameter, groupTitleParameter, sortOrderParameter, showGraphParameter, chartBottomParameter, maleLongevityHighParameter, maleLongevityLowParameter, femaleLongevityHighParameter, femaleLongevityLowParameter, maleAcceptableHighParameter, maleAcceptableLowParameter, femaleAcceptableHighParameter, femaleAcceptableLowParameter, descriptionParameter, maleHighTxtParameter, maleLowTxtParameter, maleNormalTxtParameter, femHighTxtParameter, femLowTxtParameter, femNormalTxtParameter, panelIDParameter, resultOut);
        }
    
        public virtual int ssp_UpdateGroups(Nullable<int> iD, string groupName, string groupTitle, Nullable<int> sortOrder, Nullable<bool> showGraph, Nullable<decimal> chartBottom, Nullable<decimal> maleLongevityHigh, Nullable<decimal> maleLongevityLow, Nullable<decimal> femaleLongevityHigh, Nullable<decimal> femaleLongevityLow, Nullable<decimal> maleAcceptableHigh, Nullable<decimal> maleAcceptableLow, Nullable<decimal> femaleAcceptableHigh, Nullable<decimal> femaleAcceptableLow, string description, string maleHighTxt, string maleLowTxt, string maleNormalTxt, string femHighTxt, string femLowTxt, string femNormalTxt, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupTitleParameter = groupTitle != null ?
                new ObjectParameter("GroupTitle", groupTitle) :
                new ObjectParameter("GroupTitle", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var showGraphParameter = showGraph.HasValue ?
                new ObjectParameter("ShowGraph", showGraph) :
                new ObjectParameter("ShowGraph", typeof(bool));
    
            var chartBottomParameter = chartBottom.HasValue ?
                new ObjectParameter("ChartBottom", chartBottom) :
                new ObjectParameter("ChartBottom", typeof(decimal));
    
            var maleLongevityHighParameter = maleLongevityHigh.HasValue ?
                new ObjectParameter("MaleLongevityHigh", maleLongevityHigh) :
                new ObjectParameter("MaleLongevityHigh", typeof(decimal));
    
            var maleLongevityLowParameter = maleLongevityLow.HasValue ?
                new ObjectParameter("MaleLongevityLow", maleLongevityLow) :
                new ObjectParameter("MaleLongevityLow", typeof(decimal));
    
            var femaleLongevityHighParameter = femaleLongevityHigh.HasValue ?
                new ObjectParameter("FemaleLongevityHigh", femaleLongevityHigh) :
                new ObjectParameter("FemaleLongevityHigh", typeof(decimal));
    
            var femaleLongevityLowParameter = femaleLongevityLow.HasValue ?
                new ObjectParameter("FemaleLongevityLow", femaleLongevityLow) :
                new ObjectParameter("FemaleLongevityLow", typeof(decimal));
    
            var maleAcceptableHighParameter = maleAcceptableHigh.HasValue ?
                new ObjectParameter("MaleAcceptableHigh", maleAcceptableHigh) :
                new ObjectParameter("MaleAcceptableHigh", typeof(decimal));
    
            var maleAcceptableLowParameter = maleAcceptableLow.HasValue ?
                new ObjectParameter("MaleAcceptableLow", maleAcceptableLow) :
                new ObjectParameter("MaleAcceptableLow", typeof(decimal));
    
            var femaleAcceptableHighParameter = femaleAcceptableHigh.HasValue ?
                new ObjectParameter("FemaleAcceptableHigh", femaleAcceptableHigh) :
                new ObjectParameter("FemaleAcceptableHigh", typeof(decimal));
    
            var femaleAcceptableLowParameter = femaleAcceptableLow.HasValue ?
                new ObjectParameter("FemaleAcceptableLow", femaleAcceptableLow) :
                new ObjectParameter("FemaleAcceptableLow", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var maleHighTxtParameter = maleHighTxt != null ?
                new ObjectParameter("MaleHighTxt", maleHighTxt) :
                new ObjectParameter("MaleHighTxt", typeof(string));
    
            var maleLowTxtParameter = maleLowTxt != null ?
                new ObjectParameter("MaleLowTxt", maleLowTxt) :
                new ObjectParameter("MaleLowTxt", typeof(string));
    
            var maleNormalTxtParameter = maleNormalTxt != null ?
                new ObjectParameter("MaleNormalTxt", maleNormalTxt) :
                new ObjectParameter("MaleNormalTxt", typeof(string));
    
            var femHighTxtParameter = femHighTxt != null ?
                new ObjectParameter("FemHighTxt", femHighTxt) :
                new ObjectParameter("FemHighTxt", typeof(string));
    
            var femLowTxtParameter = femLowTxt != null ?
                new ObjectParameter("FemLowTxt", femLowTxt) :
                new ObjectParameter("FemLowTxt", typeof(string));
    
            var femNormalTxtParameter = femNormalTxt != null ?
                new ObjectParameter("FemNormalTxt", femNormalTxt) :
                new ObjectParameter("FemNormalTxt", typeof(string));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateGroups", iDParameter, groupNameParameter, groupTitleParameter, sortOrderParameter, showGraphParameter, chartBottomParameter, maleLongevityHighParameter, maleLongevityLowParameter, femaleLongevityHighParameter, femaleLongevityLowParameter, maleAcceptableHighParameter, maleAcceptableLowParameter, femaleAcceptableHighParameter, femaleAcceptableLowParameter, descriptionParameter, maleHighTxtParameter, maleLowTxtParameter, maleNormalTxtParameter, femHighTxtParameter, femLowTxtParameter, femNormalTxtParameter, panelIDParameter, resultOut);
        }
    
        public virtual ObjectResult<Orders_GetOrderbystatus_Result> Orders_GetOrderbystatus(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string status, Nullable<int> productId, string productStatus)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productStatusParameter = productStatus != null ?
                new ObjectParameter("productStatus", productStatus) :
                new ObjectParameter("productStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderbystatus_Result>("Orders_GetOrderbystatus", startDateParameter, endDateParameter, statusParameter, productIdParameter, productStatusParameter);
        }
    
        public virtual int ssp_Orders_UpdateStatus(Nullable<int> orderid, string status)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Orders_UpdateStatus", orderidParameter, statusParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderForShipped_Result> Orders_GetOrderForShipped(Nullable<int> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderForShipped_Result>("Orders_GetOrderForShipped", orderidParameter);
        }
    
        public virtual int ssp_UpdatePatientChinapatient(Nullable<int> patientId, Nullable<int> chinaPatientId, string billingCountry, string shippingCountry)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var chinaPatientIdParameter = chinaPatientId.HasValue ?
                new ObjectParameter("ChinaPatientId", chinaPatientId) :
                new ObjectParameter("ChinaPatientId", typeof(int));
    
            var billingCountryParameter = billingCountry != null ?
                new ObjectParameter("BillingCountry", billingCountry) :
                new ObjectParameter("BillingCountry", typeof(string));
    
            var shippingCountryParameter = shippingCountry != null ?
                new ObjectParameter("ShippingCountry", shippingCountry) :
                new ObjectParameter("ShippingCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdatePatientChinapatient", patientIdParameter, chinaPatientIdParameter, billingCountryParameter, shippingCountryParameter);
        }
    
        public virtual ObjectResult<ssp_PatientInfoByPatientId_Result> ssp_PatientInfoByPatientId(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PatientInfoByPatientId_Result>("ssp_PatientInfoByPatientId", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetpatientsnotMatch_Result> ssp_XEROGetpatientsnotMatch(Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetpatientsnotMatch_Result>("ssp_XEROGetpatientsnotMatch", pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_XEROpatientsMatchedSearch_Result> ssp_XEROpatientsMatchedSearch(Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder, string firstName, string lastName)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROpatientsMatchedSearch_Result>("ssp_XEROpatientsMatchedSearch", pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter, firstNameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientDetailById_Result> ssp_GetPatientDetailById(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientDetailById_Result>("ssp_GetPatientDetailById", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetMedNotesDetailsByContactType_Result> ssp_GetMedNotesDetailsByContactType(Nullable<int> patientID, Nullable<int> contactType)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var contactTypeParameter = contactType.HasValue ?
                new ObjectParameter("ContactType", contactType) :
                new ObjectParameter("ContactType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMedNotesDetailsByContactType_Result>("ssp_GetMedNotesDetailsByContactType", patientIDParameter, contactTypeParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientListForAppointmentDate_Result> ssp_GetPatientListForAppointmentDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddata, Nullable<int> apttype, string clinic, Nullable<int> provider)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddataParameter = enddata.HasValue ?
                new ObjectParameter("enddata", enddata) :
                new ObjectParameter("enddata", typeof(System.DateTime));
    
            var apttypeParameter = apttype.HasValue ?
                new ObjectParameter("apttype", apttype) :
                new ObjectParameter("apttype", typeof(int));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("clinic", clinic) :
                new ObjectParameter("clinic", typeof(string));
    
            var providerParameter = provider.HasValue ?
                new ObjectParameter("provider", provider) :
                new ObjectParameter("provider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientListForAppointmentDate_Result>("ssp_GetPatientListForAppointmentDate", startdateParameter, enddataParameter, apttypeParameter, clinicParameter, providerParameter);
        }
    
        public virtual int ssp_DeleteOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrder", orderIdParameter);
        }
    
        public virtual int ssp_DeleteOrderItem(Nullable<int> orderItemId)
        {
            var orderItemIdParameter = orderItemId.HasValue ?
                new ObjectParameter("OrderItemId", orderItemId) :
                new ObjectParameter("OrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrderItem", orderItemIdParameter);
        }
    
        public virtual int ssp_UpdateAutoShipNote(Nullable<int> orderId, string autoShipNote)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var autoShipNoteParameter = autoShipNote != null ?
                new ObjectParameter("AutoShipNote", autoShipNote) :
                new ObjectParameter("AutoShipNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateAutoShipNote", orderIdParameter, autoShipNoteParameter);
        }
    
        public virtual int OrderItem_Update(Nullable<int> orderItemID, Nullable<int> quantity)
        {
            var orderItemIDParameter = orderItemID.HasValue ?
                new ObjectParameter("OrderItemID", orderItemID) :
                new ObjectParameter("OrderItemID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Update", orderItemIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<ssp_GetProductDetailsForOrderitems_Result> ssp_GetProductDetailsForOrderitems(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProductDetailsForOrderitems_Result>("ssp_GetProductDetailsForOrderitems", productIdParameter);
        }
    
        public virtual int ssp_AddNewOrderItem(Nullable<int> orderId, Nullable<int> quantity, Nullable<decimal> price, string weight, Nullable<int> productId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddNewOrderItem", orderIdParameter, quantityParameter, priceParameter, weightParameter, productIdParameter);
        }
    
        public virtual int ssp_Orders_UpdateStatusToggle(Nullable<int> orderid, string status)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Orders_UpdateStatusToggle", orderidParameter, statusParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderbystatusAutoship_Result> Orders_GetOrderbystatusAutoship(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderbystatusAutoship_Result>("Orders_GetOrderbystatusAutoship", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetOrdersbyOrderIDnew_Result> ssp_XEROGetOrdersbyOrderIDnew(string orderIDs)
        {
            var orderIDsParameter = orderIDs != null ?
                new ObjectParameter("OrderIDs", orderIDs) :
                new ObjectParameter("OrderIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetOrdersbyOrderIDnew_Result>("ssp_XEROGetOrdersbyOrderIDnew", orderIDsParameter);
        }
    
        public virtual int ssp_XEROUpdateInvoice(Nullable<int> orderID, Nullable<System.Guid> xeroInvId)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var xeroInvIdParameter = xeroInvId.HasValue ?
                new ObjectParameter("XeroInvId", xeroInvId) :
                new ObjectParameter("XeroInvId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_XEROUpdateInvoice", orderIDParameter, xeroInvIdParameter);
        }
    
        public virtual int ssp_InsertXeroAccounts(string code, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertXeroAccounts", codeParameter, nameParameter);
        }
    
        public virtual ObjectResult<ssp_GetXeroaccounts_Result> ssp_GetXeroaccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetXeroaccounts_Result>("ssp_GetXeroaccounts");
        }
    
        public virtual int ssp_AddBundleProducts(Nullable<int> bundleId, Nullable<int> productId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddBundleProducts", bundleIdParameter, productIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetBundleProducts_Result> ssp_GetBundleProducts(Nullable<int> bundleId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetBundleProducts_Result>("ssp_GetBundleProducts", bundleIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetOrderById_Result> ssp_GetOrderById(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOrderById_Result>("ssp_GetOrderById", orderIdParameter);
        }
    
        public virtual int ssp_XEROUpdateInvoicePaid(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_XEROUpdateInvoicePaid", orderIDParameter);
        }
    
        public virtual int ssp_UpdateOrderNote(Nullable<int> orderId, string note, string shipAddress, string shipCity, string shipState, string shipZip)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var shipAddressParameter = shipAddress != null ?
                new ObjectParameter("ShipAddress", shipAddress) :
                new ObjectParameter("ShipAddress", typeof(string));
    
            var shipCityParameter = shipCity != null ?
                new ObjectParameter("ShipCity", shipCity) :
                new ObjectParameter("ShipCity", typeof(string));
    
            var shipStateParameter = shipState != null ?
                new ObjectParameter("ShipState", shipState) :
                new ObjectParameter("ShipState", typeof(string));
    
            var shipZipParameter = shipZip != null ?
                new ObjectParameter("ShipZip", shipZip) :
                new ObjectParameter("ShipZip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateOrderNote", orderIdParameter, noteParameter, shipAddressParameter, shipCityParameter, shipStateParameter, shipZipParameter);
        }
    
        public virtual ObjectResult<ssp_GetManagementPrograms_Result> ssp_GetManagementPrograms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetManagementPrograms_Result>("ssp_GetManagementPrograms");
        }
    
        public virtual int ssp_SavePatientManagementPrograms(Nullable<int> patientId, Nullable<int> programId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var programIdParameter = programId.HasValue ?
                new ObjectParameter("ProgramId", programId) :
                new ObjectParameter("ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SavePatientManagementPrograms", patientIdParameter, programIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientManagementProgramById_Result> ssp_GetPatientManagementProgramById(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientManagementProgramById_Result>("ssp_GetPatientManagementProgramById", patientIdParameter);
        }
    
        public virtual int ssp_UpdateFreeShipping(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateFreeShipping", orderIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetSalesAccountCode_Result> ssp_GetSalesAccountCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSalesAccountCode_Result>("ssp_GetSalesAccountCode");
        }
    
        public virtual int ssp_SaveSalesAccountCode(Nullable<int> salesAccountCode)
        {
            var salesAccountCodeParameter = salesAccountCode.HasValue ?
                new ObjectParameter("SalesAccountCode", salesAccountCode) :
                new ObjectParameter("SalesAccountCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveSalesAccountCode", salesAccountCodeParameter);
        }
    
        public virtual ObjectResult<ssp_GetMailChimpCampaign_Result> ssp_GetMailChimpCampaign()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMailChimpCampaign_Result>("ssp_GetMailChimpCampaign");
        }
    
        public virtual int ssp_SaveMailChimpCampaign(string mailChimpCampaignId, string mailChimpCampaignName, string mailChimpCampaignListId)
        {
            var mailChimpCampaignIdParameter = mailChimpCampaignId != null ?
                new ObjectParameter("MailChimpCampaignId", mailChimpCampaignId) :
                new ObjectParameter("MailChimpCampaignId", typeof(string));
    
            var mailChimpCampaignNameParameter = mailChimpCampaignName != null ?
                new ObjectParameter("MailChimpCampaignName", mailChimpCampaignName) :
                new ObjectParameter("MailChimpCampaignName", typeof(string));
    
            var mailChimpCampaignListIdParameter = mailChimpCampaignListId != null ?
                new ObjectParameter("MailChimpCampaignListId", mailChimpCampaignListId) :
                new ObjectParameter("MailChimpCampaignListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveMailChimpCampaign", mailChimpCampaignIdParameter, mailChimpCampaignNameParameter, mailChimpCampaignListIdParameter);
        }
    
        public virtual int ssp_DeleteOrderWithReason(Nullable<int> orderId, Nullable<bool> xeroDelete, string deleteReason)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var xeroDeleteParameter = xeroDelete.HasValue ?
                new ObjectParameter("XeroDelete", xeroDelete) :
                new ObjectParameter("XeroDelete", typeof(bool));
    
            var deleteReasonParameter = deleteReason != null ?
                new ObjectParameter("DeleteReason", deleteReason) :
                new ObjectParameter("DeleteReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrderWithReason", orderIdParameter, xeroDeleteParameter, deleteReasonParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetOrderItemsbyOrderID_Result> ssp_XEROGetOrderItemsbyOrderID(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetOrderItemsbyOrderID_Result>("ssp_XEROGetOrderItemsbyOrderID", orderIDParameter);
        }
    }
}
