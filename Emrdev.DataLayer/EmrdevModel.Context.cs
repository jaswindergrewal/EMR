//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Emrdev.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LMC_020505Entities : DbContext
    {
        public LMC_020505Entities()
            : base("name=LMC_020505Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AbnormalFlagDesc> AbnormalFlagDescs { get; set; }
        public DbSet<Admin_ShippingValues> Admin_ShippingValues { get; set; }
        public DbSet<AdminManagementProgramFee> AdminManagementProgramFees { get; set; }
        public DbSet<AppointmentResult> AppointmentResults { get; set; }
        public DbSet<Appointment> Appointments { get; set; }
        public DbSet<AppointmentType> AppointmentTypes { get; set; }
        public DbSet<apt_BloodWork> apt_BloodWork { get; set; }
        public DbSet<apt_diag> apt_diag { get; set; }
        public DbSet<apt_FollowUp_types> apt_FollowUp_types { get; set; }
        public DbSet<apt_FollowUps> apt_FollowUps { get; set; }
        public DbSet<apt_Goals> apt_Goals { get; set; }
        public DbSet<apt_LisfeStyle> apt_LisfeStyle { get; set; }
        public DbSet<apt_Misc> apt_Misc { get; set; }
        public DbSet<apt_plan> apt_plan { get; set; }
        public DbSet<apt_rec> apt_rec { get; set; }
        public DbSet<apt_Symtpoms> apt_Symtpoms { get; set; }
        public DbSet<Autoship_Discounts> Autoship_Discounts { get; set; }
        public DbSet<AutoshipCancelReason> AutoshipCancelReasons { get; set; }
        public DbSet<AutoShipEmailTEmplate> AutoShipEmailTEmplates { get; set; }
        public DbSet<AutoshipProductGroup> AutoshipProductGroups { get; set; }
        public DbSet<AutoshipProduct> AutoshipProducts { get; set; }
        public DbSet<AutoTicket> AutoTickets { get; set; }
        public DbSet<AutoTicketAlert> AutoTicketAlerts { get; set; }
        public DbSet<CallBackQuestion> CallBackQuestions { get; set; }
        public DbSet<CallBackRespons> CallBackResponses { get; set; }
        public DbSet<CallBack> CallBacks { get; set; }
        public DbSet<Callbacks_old> Callbacks_old { get; set; }
        public DbSet<Client_log_tbl> Client_log_tbl { get; set; }
        public DbSet<Clinic> Clinics { get; set; }
        public DbSet<Confirm> Confirms { get; set; }
        public DbSet<Contact_tbl> Contact_tbl { get; set; }
        public DbSet<Contact_tbl_archive> Contact_tbl_archive { get; set; }
        public DbSet<Contact_Type_tbl> Contact_Type_tbl { get; set; }
        public DbSet<CRM_Attendees> CRM_Attendees { get; set; }
        public DbSet<CRM_Campaigns> CRM_Campaigns { get; set; }
        public DbSet<CRM_CampaignType> CRM_CampaignType { get; set; }
        public DbSet<CRM_Events> CRM_Events { get; set; }
        public DbSet<CRM_Log> CRM_Log { get; set; }
        public DbSet<CRM_MarketingActivity> CRM_MarketingActivity { get; set; }
        public DbSet<CRM_MarketingSource_Campaigns> CRM_MarketingSource_Campaigns { get; set; }
        public DbSet<CRM_MarketingSource_Prospects> CRM_MarketingSource_Prospects { get; set; }
        public DbSet<CRM_MarketingSources> CRM_MarketingSources { get; set; }
        public DbSet<CRM_MarketsourceID> CRM_MarketsourceID { get; set; }
        public DbSet<CRM_Prospects> CRM_Prospects { get; set; }
        public DbSet<CRM_Registrants> CRM_Registrants { get; set; }
        public DbSet<CRM_Status> CRM_Status { get; set; }
        public DbSet<CRMWufooLink> CRMWufooLinks { get; set; }
        public DbSet<Department> Departments { get; set; }
        public DbSet<DepartmentStaff> DepartmentStaffs { get; set; }
        public DbSet<Diagnosis_tbl> Diagnosis_tbl { get; set; }
        public DbSet<DiagnosisLab> DiagnosisLabs { get; set; }
        public DbSet<DiagnosisSupplement> DiagnosisSupplements { get; set; }
        public DbSet<Dictation_Diagnosis> Dictation_Diagnosis { get; set; }
        public DbSet<Dictation_Plan> Dictation_Plan { get; set; }
        public DbSet<Dictation_PlanDiagnosis> Dictation_PlanDiagnosis { get; set; }
        public DbSet<Drug> Drugs { get; set; }
        public DbSet<EmailTemplate> EmailTemplates { get; set; }
        public DbSet<EventProspect> EventProspects { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<ExceptionArchive> ExceptionArchives { get; set; }
        public DbSet<Exception> Exceptions { get; set; }
        public DbSet<ExternalLabList> ExternalLabLists { get; set; }
        public DbSet<ExternalLab> ExternalLabs { get; set; }
        public DbSet<ExternalPanel> ExternalPanels { get; set; }
        public DbSet<FollowUp_Cat> FollowUp_Cat { get; set; }
        public DbSet<Frequency> Frequencies { get; set; }
        public DbSet<GoalItem> GoalItems { get; set; }
        public DbSet<GroupRange> GroupRanges { get; set; }
        public DbSet<GroupRangeSupplement> GroupRangeSupplements { get; set; }
        public DbSet<Hospitalization> Hospitalizations { get; set; }
        public DbSet<intake_form_allergies> intake_form_allergies { get; set; }
        public DbSet<intake_form_goals> intake_form_goals { get; set; }
        public DbSet<intake_form_habits> intake_form_habits { get; set; }
        public DbSet<intake_form_hormone_review> intake_form_hormone_review { get; set; }
        public DbSet<intake_form_master_index> intake_form_master_index { get; set; }
        public DbSet<intake_form_medical_history> intake_form_medical_history { get; set; }
        public DbSet<intake_form_personal_info> intake_form_personal_info { get; set; }
        public DbSet<intake_form_prescriptions> intake_form_prescriptions { get; set; }
        public DbSet<intake_form_recent_tests> intake_form_recent_tests { get; set; }
        public DbSet<intake_form_supplements> intake_form_supplements { get; set; }
        public DbSet<intake_form_surgeries> intake_form_surgeries { get; set; }
        public DbSet<intake_form_symptoms> intake_form_symptoms { get; set; }
        public DbSet<IVRTemplate> IVRTemplates { get; set; }
        public DbSet<Journal_Main> Journal_Main { get; set; }
        public DbSet<lab_AcknowledgementSegments> lab_AcknowledgementSegments { get; set; }
        public DbSet<lab_AddressDetails> lab_AddressDetails { get; set; }
        public DbSet<lab_CommonOrderSegments> lab_CommonOrderSegments { get; set; }
        public DbSet<lab_DiagnosisSegments> lab_DiagnosisSegments { get; set; }
        public DbSet<lab_GuarantorSegments> lab_GuarantorSegments { get; set; }
        public DbSet<lab_InsuranceSegments> lab_InsuranceSegments { get; set; }
        public DbSet<lab_Messages> lab_Messages { get; set; }
        public DbSet<lab_NotesAndCommentsSegments> lab_NotesAndCommentsSegments { get; set; }
        public DbSet<lab_ObservationResultDetailSegments> lab_ObservationResultDetailSegments { get; set; }
        public DbSet<lab_OrderSegmentDetails> lab_OrderSegmentDetails { get; set; }
        public DbSet<lab_Patients> lab_Patients { get; set; }
        public DbSet<LabLog> LabLogs { get; set; }
        public DbSet<LabReports_ConditionDetails> LabReports_ConditionDetails { get; set; }
        public DbSet<LabReports_Conditions> LabReports_Conditions { get; set; }
        public DbSet<LabReports_Data> LabReports_Data { get; set; }
        public DbSet<LabReports_Groups> LabReports_Groups { get; set; }
        public DbSet<LabReports_Panels> LabReports_Panels { get; set; }
        public DbSet<LabReports_Tests> LabReports_Tests { get; set; }
        public DbSet<LabReports_Triggers> LabReports_Triggers { get; set; }
        public DbSet<LabReports_TriggersGroups> LabReports_TriggersGroups { get; set; }
        public DbSet<LabRequest_Panels> LabRequest_Panels { get; set; }
        public DbSet<LabRequest_Tests> LabRequest_Tests { get; set; }
        public DbSet<LabRequests_RequestPanels> LabRequests_RequestPanels { get; set; }
        public DbSet<LabRequests_Requests> LabRequests_Requests { get; set; }
        public DbSet<LabRequests_RequestTests> LabRequests_RequestTests { get; set; }
        public DbSet<LabScehdule_Groups> LabScehdule_Groups { get; set; }
        public DbSet<LabSchedule_Tests> LabSchedule_Tests { get; set; }
        public DbSet<LabTicketLog> LabTicketLogs { get; set; }
        public DbSet<ModifiedSupp> ModifiedSupps { get; set; }
        public DbSet<NoMail> NoMails { get; set; }
        public DbSet<OfficeLocations_tbl> OfficeLocations_tbl { get; set; }
        public DbSet<OneTimeSale> OneTimeSales { get; set; }
        public DbSet<OrderItem> OrderItems { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<Patient_GoalItems> Patient_GoalItems { get; set; }
        public DbSet<Patient_GoalItemType> Patient_GoalItemType { get; set; }
        public DbSet<Patient_Goals> Patient_Goals { get; set; }
        public DbSet<Patient_Vitals> Patient_Vitals { get; set; }
        public DbSet<PatientPackage> PatientPackages { get; set; }
        public DbSet<PatientQuestionAnwerSurvey> PatientQuestionAnwerSurveys { get; set; }
        public DbSet<Patient> Patients { get; set; }
        public DbSet<Patients_CriticalTasks> Patients_CriticalTasks { get; set; }
        public DbSet<Patients_CriticalTaskType> Patients_CriticalTaskType { get; set; }
        public DbSet<PatientsurveyQuestion> PatientsurveyQuestions { get; set; }
        public DbSet<Potential> Potentials { get; set; }
        public DbSet<Prescription> Prescriptions { get; set; }
        public DbSet<PresscriptionSupp> PresscriptionSupps { get; set; }
        public DbSet<Problem_Diagnosis_Appointment> Problem_Diagnosis_Appointment { get; set; }
        public DbSet<Problem_Diagnosis_join> Problem_Diagnosis_join { get; set; }
        public DbSet<Problem_MiscDiagnosis_join> Problem_MiscDiagnosis_join { get; set; }
        public DbSet<Problem_Symptom_join> Problem_Symptom_join { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProfileException> ProfileExceptions { get; set; }
        public DbSet<ProfileItem> ProfileItems { get; set; }
        public DbSet<Prospect> Prospects { get; set; }
        public DbSet<Protocol> Protocols { get; set; }
        public DbSet<Protocols_diagn_join> Protocols_diagn_join { get; set; }
        public DbSet<Protocols_sympt_join> Protocols_sympt_join { get; set; }
        public DbSet<Provider> Providers { get; set; }
        public DbSet<QB_CreditMemoLine> QB_CreditMemoLine { get; set; }
        public DbSet<QB_Customers> QB_Customers { get; set; }
        public DbSet<QB_Invoices> QB_Invoices { get; set; }
        public DbSet<QB_Item> QB_Item { get; set; }
        public DbSet<QB_Match> QB_Match { get; set; }
        public DbSet<QB_NoMatch> QB_NoMatch { get; set; }
        public DbSet<QBEmrSetting> QBEmrSettings { get; set; }
        public DbSet<Recur> Recurs { get; set; }
        public DbSet<ResellerContact> ResellerContacts { get; set; }
        public DbSet<ResellerEvent> ResellerEvents { get; set; }
        public DbSet<ResellerMarketingSource> ResellerMarketingSources { get; set; }
        public DbSet<Reseller> Resellers { get; set; }
        public DbSet<ResellerStatu> ResellerStatus { get; set; }
        public DbSet<SalesAccountCode> SalesAccountCodes { get; set; }
        public DbSet<Sat_Survey> Sat_Survey { get; set; }
        public DbSet<Seminar_list> Seminar_list { get; set; }
        public DbSet<Staff> Staffs { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<Symptom_Diagn_join> Symptom_Diagn_join { get; set; }
        public DbSet<SymptomLab> SymptomLabs { get; set; }
        public DbSet<Symptom> Symptoms { get; set; }
        public DbSet<SymptomSupplement> SymptomSupplements { get; set; }
        public DbSet<Test> Tests { get; set; }
        public DbSet<Tickets_Manage> Tickets_Manage { get; set; }
        public DbSet<Trace_092007> Trace_092007 { get; set; }
        public DbSet<train_module> train_module { get; set; }
        public DbSet<train_profile> train_profile { get; set; }
        public DbSet<train_profile2module> train_profile2module { get; set; }
        public DbSet<train_user_completed> train_user_completed { get; set; }
        public DbSet<train_user2profile> train_user2profile { get; set; }
        public DbSet<Transcription> Transcriptions { get; set; }
        public DbSet<Upload_tbl> Upload_tbl { get; set; }
        public DbSet<UploadTag> UploadTags { get; set; }
        public DbSet<XeroCredential> XeroCredentials { get; set; }
        public DbSet<XeroLog> XeroLogs { get; set; }
        public DbSet<Admin> Admins { get; set; }
        public DbSet<AutoshipBundleProduct> AutoshipBundleProducts { get; set; }
        public DbSet<dtproperty> dtproperties { get; set; }
        public DbSet<DUPES1> DUPES1 { get; set; }
        public DbSet<Journal_tags> Journal_tags { get; set; }
        public DbSet<LabReports_Results> LabReports_Results { get; set; }
        public DbSet<MedicalHistory> MedicalHistories { get; set; }
        public DbSet<Patient_mrkting_src> Patient_mrkting_src { get; set; }
        public DbSet<PatientList> PatientLists { get; set; }
        public DbSet<PatientProgramManagementFee> PatientProgramManagementFees { get; set; }
        public DbSet<QB_Invoice1> QB_Invoice1 { get; set; }
        public DbSet<Result> Results { get; set; }
        public DbSet<Supplement_RX> Supplement_RX { get; set; }
        public DbSet<Supplement> Supplements { get; set; }
        public DbSet<TEMP> TEMPs { get; set; }
        public DbSet<Visit> Visits { get; set; }
        public DbSet<wellness_quotient> wellness_quotient { get; set; }
        public DbSet<XeroAccount> XeroAccounts { get; set; }
        public DbSet<XeroPatient> XeroPatients { get; set; }
        public DbSet<ReportList> ReportLists { get; set; }
        public DbSet<AcuityScheduling> AcuityScheduling { get; set; }
        public DbSet<SpecialAttentionFlag> SpecialAttentionFlag { get; set; }
        public DbSet<SharePointPatients> SharePointPatients { get; set; }
        public DbSet<StatusProvider> StatusProvider { get; set; }
        public DbSet<ShareFile> ShareFile { get; set; }
    
        [EdmFunction("LMC_020505Entities", "GetBlankTime")]
        public virtual IQueryable<GetBlankTime_Result> GetBlankTime(string providerID, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var providerIDParameter = providerID != null ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(string));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBlankTime_Result>("[LMC_020505Entities].[GetBlankTime](@ProviderID, @start, @end)", providerIDParameter, startParameter, endParameter);
        }
    
        [EdmFunction("LMC_020505Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string rowData, string splitOn)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[LMC_020505Entities].[Split](@RowData, @SplitOn)", rowDataParameter, splitOnParameter);
        }
    
        [EdmFunction("LMC_020505Entities", "Split_Comma")]
        public virtual IQueryable<Split_Comma_Result> Split_Comma(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Comma_Result>("[LMC_020505Entities].[Split_Comma](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        [EdmFunction("LMC_020505Entities", "SplitNew")]
        public virtual IQueryable<SplitNew_Result> SplitNew(string sep, string s)
        {
            var sepParameter = sep != null ?
                new ObjectParameter("sep", sep) :
                new ObjectParameter("sep", typeof(string));
    
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitNew_Result>("[LMC_020505Entities].[SplitNew](@sep, @s)", sepParameter, sParameter);
        }
    
        [EdmFunction("LMC_020505Entities", "WeeklyHours")]
        public virtual IQueryable<WeeklyHours_Result> WeeklyHours(Nullable<System.DateTime> startDate, string provider)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WeeklyHours_Result>("[LMC_020505Entities].[WeeklyHours](@startDate, @Provider)", startDateParameter, providerParameter);
        }
    
        public virtual ObjectResult<Admin_Get_Result> Admin_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Admin_Get_Result>("Admin_Get");
        }
    
        public virtual ObjectResult<AestheticNotes_All_Result> AestheticNotes_All(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AestheticNotes_All_Result>("AestheticNotes_All", patientIDParameter);
        }
    
        public virtual ObjectResult<AffiliatNoMatch_Result> AffiliatNoMatch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AffiliatNoMatch_Result>("AffiliatNoMatch");
        }
    
        public virtual ObjectResult<Appointment_FollowUp_Result> Appointment_FollowUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appointment_FollowUp_Result>("Appointment_FollowUp");
        }
    
        public virtual int Appointment_FollowUpComplete(Nullable<int> appointmentID)
        {
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Appointment_FollowUpComplete", appointmentIDParameter);
        }
    
        public virtual ObjectResult<Appointment_GetByID_Result> Appointment_GetByID(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appointment_GetByID_Result>("Appointment_GetByID", eventIDParameter);
        }
    
        public virtual ObjectResult<Appointment_GetByPatientID_Result> Appointment_GetByPatientID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appointment_GetByPatientID_Result>("Appointment_GetByPatientID", patientIDParameter);
        }
    
        public virtual ObjectResult<Appointment_GetByPatientID_3798_Result> Appointment_GetByPatientID_3798(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appointment_GetByPatientID_3798_Result>("Appointment_GetByPatientID_3798", patientIDParameter);
        }
    
        public virtual int Appointment_Update(Nullable<int> eventID, Nullable<int> patientID, Nullable<System.DateTime> apptStart, Nullable<System.DateTime> apptEnd, Nullable<int> providerID, Nullable<int> appointmentTypeID, Nullable<int> statusID, Nullable<bool> allDay, Nullable<bool> emailOnChange, Nullable<int> results, string notes, string email, string actionNeeded, Nullable<bool> labsCheckedIn, string clinic, Nullable<int> hARep, Nullable<int> staffId)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var apptStartParameter = apptStart.HasValue ?
                new ObjectParameter("ApptStart", apptStart) :
                new ObjectParameter("ApptStart", typeof(System.DateTime));
    
            var apptEndParameter = apptEnd.HasValue ?
                new ObjectParameter("ApptEnd", apptEnd) :
                new ObjectParameter("ApptEnd", typeof(System.DateTime));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var appointmentTypeIDParameter = appointmentTypeID.HasValue ?
                new ObjectParameter("AppointmentTypeID", appointmentTypeID) :
                new ObjectParameter("AppointmentTypeID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var allDayParameter = allDay.HasValue ?
                new ObjectParameter("AllDay", allDay) :
                new ObjectParameter("AllDay", typeof(bool));
    
            var emailOnChangeParameter = emailOnChange.HasValue ?
                new ObjectParameter("EmailOnChange", emailOnChange) :
                new ObjectParameter("EmailOnChange", typeof(bool));
    
            var resultsParameter = results.HasValue ?
                new ObjectParameter("Results", results) :
                new ObjectParameter("Results", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var actionNeededParameter = actionNeeded != null ?
                new ObjectParameter("ActionNeeded", actionNeeded) :
                new ObjectParameter("ActionNeeded", typeof(string));
    
            var labsCheckedInParameter = labsCheckedIn.HasValue ?
                new ObjectParameter("LabsCheckedIn", labsCheckedIn) :
                new ObjectParameter("LabsCheckedIn", typeof(bool));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var hARepParameter = hARep.HasValue ?
                new ObjectParameter("HARep", hARep) :
                new ObjectParameter("HARep", typeof(int));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Appointment_Update", eventIDParameter, patientIDParameter, apptStartParameter, apptEndParameter, providerIDParameter, appointmentTypeIDParameter, statusIDParameter, allDayParameter, emailOnChangeParameter, resultsParameter, notesParameter, emailParameter, actionNeededParameter, labsCheckedInParameter, clinicParameter, hARepParameter, staffIdParameter);
        }
    
        public virtual ObjectResult<AppointmentsSchedule_Result> AppointmentsSchedule(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> providerID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentsSchedule_Result>("AppointmentsSchedule", startDateParameter, endDateParameter, providerIDParameter);
        }
    
        public virtual int AppointmentType_Insert(string typeName, string color)
        {
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppointmentType_Insert", typeNameParameter, colorParameter);
        }
    
        public virtual ObjectResult<ApptsByProviderID_Get_Result> ApptsByProviderID_Get(Nullable<int> providerID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApptsByProviderID_Get_Result>("ApptsByProviderID_Get", providerIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<apt_99_special_detailed_patient_list_Result> apt_99_special_detailed_patient_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_99_special_detailed_patient_list_Result>("apt_99_special_detailed_patient_list");
        }
    
        public virtual int apt_arrives_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_arrives_update", aptidParameter);
        }
    
        public virtual int apt_close_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_close_update", aptidParameter);
        }
    
        public virtual int apt_dr_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_dr_update", aptidParameter);
        }
    
        public virtual int apt_followUp_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_followUp_update", aptidParameter);
        }
    
        public virtual int apt_followUp_UpdateTicket(Nullable<int> followupID, Nullable<int> assigned, Nullable<int> severity)
        {
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            var assignedParameter = assigned.HasValue ?
                new ObjectParameter("Assigned", assigned) :
                new ObjectParameter("Assigned", typeof(int));
    
            var severityParameter = severity.HasValue ?
                new ObjectParameter("Severity", severity) :
                new ObjectParameter("Severity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_followUp_UpdateTicket", followupIDParameter, assignedParameter, severityParameter);
        }
    
        public virtual int apt_followUp_UpdateTicketDept(Nullable<int> followupID, Nullable<int> assigned, Nullable<int> severity)
        {
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            var assignedParameter = assigned.HasValue ?
                new ObjectParameter("Assigned", assigned) :
                new ObjectParameter("Assigned", typeof(int));
    
            var severityParameter = severity.HasValue ?
                new ObjectParameter("Severity", severity) :
                new ObjectParameter("Severity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_followUp_UpdateTicketDept", followupIDParameter, assignedParameter, severityParameter);
        }
    
        public virtual ObjectResult<apt_GetAllForPatient_Result> apt_GetAllForPatient(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_GetAllForPatient_Result>("apt_GetAllForPatient", aptIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> apt_IsActiveApt_lookup(Nullable<int> patientid)
        {
            var patientidParameter = patientid.HasValue ?
                new ObjectParameter("patientid", patientid) :
                new ObjectParameter("patientid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("apt_IsActiveApt_lookup", patientidParameter);
        }
    
        public virtual ObjectResult<Apt_list_per_patient_Result> Apt_list_per_patient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Apt_list_per_patient_Result>("Apt_list_per_patient", patientIDParameter);
        }
    
        public virtual int apt_nurse_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_nurse_update", aptidParameter);
        }
    
        public virtual int apt_open_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_open_update", aptidParameter);
        }
    
        public virtual ObjectResult<apt_PendingAesFollowUps_Result> apt_PendingAesFollowUps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingAesFollowUps_Result>("apt_PendingAesFollowUps");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Result> apt_PendingBloodDraws()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Result>("apt_PendingBloodDraws");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Kirkland_RangeStrt_asc_Result> apt_PendingBloodDraws_Kirkland_RangeStrt_asc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Kirkland_RangeStrt_asc_Result>("apt_PendingBloodDraws_Kirkland_RangeStrt_asc");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Kirkland_RangeStrt_desc_Result> apt_PendingBloodDraws_Kirkland_RangeStrt_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Kirkland_RangeStrt_desc_Result>("apt_PendingBloodDraws_Kirkland_RangeStrt_desc");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Lynn_RangeStrt_asc_Result> apt_PendingBloodDraws_Lynn_RangeStrt_asc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Lynn_RangeStrt_asc_Result>("apt_PendingBloodDraws_Lynn_RangeStrt_asc");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Lynn_RangeStrt_desc_Result> apt_PendingBloodDraws_Lynn_RangeStrt_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Lynn_RangeStrt_desc_Result>("apt_PendingBloodDraws_Lynn_RangeStrt_desc");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Tacoma_RangeStrt_ASC_Result> apt_PendingBloodDraws_Tacoma_RangeStrt_ASC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Tacoma_RangeStrt_ASC_Result>("apt_PendingBloodDraws_Tacoma_RangeStrt_ASC");
        }
    
        public virtual ObjectResult<apt_PendingBloodDraws_Tacoma_RangeStrt_desc_Result> apt_PendingBloodDraws_Tacoma_RangeStrt_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingBloodDraws_Tacoma_RangeStrt_desc_Result>("apt_PendingBloodDraws_Tacoma_RangeStrt_desc");
        }
    
        public virtual ObjectResult<apt_PendingConsults_Result> apt_PendingConsults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingConsults_Result>("apt_PendingConsults");
        }
    
        public virtual ObjectResult<apt_PendingFollowUps_Result> apt_PendingFollowUps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUps_Result>("apt_PendingFollowUps");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsKirkland_Result> apt_PendingFollowUpsKirkland(string paramClinic, string paramSort)
        {
            var paramClinicParameter = paramClinic != null ?
                new ObjectParameter("paramClinic", paramClinic) :
                new ObjectParameter("paramClinic", typeof(string));
    
            var paramSortParameter = paramSort != null ?
                new ObjectParameter("paramSort", paramSort) :
                new ObjectParameter("paramSort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsKirkland_Result>("apt_PendingFollowUpsKirkland", paramClinicParameter, paramSortParameter);
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsKirkland_asc_Result> apt_PendingFollowUpsKirkland_asc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsKirkland_asc_Result>("apt_PendingFollowUpsKirkland_asc");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsKirkland_desc_Result> apt_PendingFollowUpsKirkland_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsKirkland_desc_Result>("apt_PendingFollowUpsKirkland_desc");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsLynn_Result> apt_PendingFollowUpsLynn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsLynn_Result>("apt_PendingFollowUpsLynn");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsLynn_asc_Result> apt_PendingFollowUpsLynn_asc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsLynn_asc_Result>("apt_PendingFollowUpsLynn_asc");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsLynn_desc_Result> apt_PendingFollowUpsLynn_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsLynn_desc_Result>("apt_PendingFollowUpsLynn_desc");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsTacoma_Result> apt_PendingFollowUpsTacoma()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsTacoma_Result>("apt_PendingFollowUpsTacoma");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsTacoma_asc_Result> apt_PendingFollowUpsTacoma_asc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsTacoma_asc_Result>("apt_PendingFollowUpsTacoma_asc");
        }
    
        public virtual ObjectResult<apt_PendingFollowUpsTacoma_desc_Result> apt_PendingFollowUpsTacoma_desc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<apt_PendingFollowUpsTacoma_desc_Result>("apt_PendingFollowUpsTacoma_desc");
        }
    
        public virtual int apt_prescriptprint_update(Nullable<int> aptid)
        {
            var aptidParameter = aptid.HasValue ?
                new ObjectParameter("aptid", aptid) :
                new ObjectParameter("aptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("apt_prescriptprint_update", aptidParameter);
        }
    
        public virtual ObjectResult<Apts_SalesMade_IsNull_Result> Apts_SalesMade_IsNull()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Apts_SalesMade_IsNull_Result>("Apts_SalesMade_IsNull");
        }
    
        public virtual ObjectResult<AutoShip_Patient_Count_Result> AutoShip_Patient_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutoShip_Patient_Count_Result>("AutoShip_Patient_Count");
        }
    
        public virtual ObjectResult<Nullable<int>> AutoShipProducts_GetID(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AutoShipProducts_GetID", productNameParameter);
        }
    
        public virtual int AutoshipProducts_Update(string productName, Nullable<decimal> autoshipPrice, Nullable<bool> active, Nullable<int> productID, Nullable<bool> viewable, Nullable<bool> reviewed)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var autoshipPriceParameter = autoshipPrice.HasValue ?
                new ObjectParameter("AutoshipPrice", autoshipPrice) :
                new ObjectParameter("AutoshipPrice", typeof(decimal));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("Viewable", viewable) :
                new ObjectParameter("Viewable", typeof(bool));
    
            var reviewedParameter = reviewed.HasValue ?
                new ObjectParameter("Reviewed", reviewed) :
                new ObjectParameter("Reviewed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoshipProducts_Update", productNameParameter, autoshipPriceParameter, activeParameter, productIDParameter, viewableParameter, reviewedParameter);
        }
    
        public virtual int AutoshipWeeklySales(Nullable<System.DateTime> start)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoshipWeeklySales", startParameter);
        }
    
        public virtual ObjectResult<Calendar_Patients_FindID_Result> Calendar_Patients_FindID(string patientName, Nullable<System.DateTime> birthday, string clinic)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Calendar_Patients_FindID_Result>("Calendar_Patients_FindID", patientNameParameter, birthdayParameter, clinicParameter);
        }
    
        public virtual ObjectResult<Calendar_Patients_FindIDinactive_Result> Calendar_Patients_FindIDinactive(string patientName, Nullable<System.DateTime> birthday, string clinic)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Calendar_Patients_FindIDinactive_Result>("Calendar_Patients_FindIDinactive", patientNameParameter, birthdayParameter, clinicParameter);
        }
    
        public virtual ObjectResult<CalendarSettings_Get_Result> CalendarSettings_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalendarSettings_Get_Result>("CalendarSettings_Get");
        }
    
        public virtual int CallList_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CallList_All");
        }
    
        public virtual int CleanBatch(Nullable<int> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CleanBatch", batchIdParameter);
        }
    
        public virtual ObjectResult<Contact_Record_details_Result> Contact_Record_details(Nullable<int> contID)
        {
            var contIDParameter = contID.HasValue ?
                new ObjectParameter("ContID", contID) :
                new ObjectParameter("ContID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Contact_Record_details_Result>("Contact_Record_details", contIDParameter);
        }
    
        public virtual int contact_tbl_AS_Insert(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, string autoShipStr)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var autoShipStrParameter = autoShipStr != null ?
                new ObjectParameter("AutoShipStr", autoShipStr) :
                new ObjectParameter("AutoShipStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_AS_Insert", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, autoShipStrParameter);
        }
    
        public virtual int contact_tbl_Cal_Insert(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> apt_ID)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_Cal_Insert", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, apt_IDParameter);
        }
    
        public virtual int contact_tbl_EMR_Insert(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> apt_ID)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_EMR_Insert", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, apt_IDParameter);
        }
    
        public virtual int contact_tbl_FollowUp_Insert(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> followUpID)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var followUpIDParameter = followUpID.HasValue ?
                new ObjectParameter("FollowUpID", followUpID) :
                new ObjectParameter("FollowUpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_FollowUp_Insert", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, followUpIDParameter);
        }
    
        public virtual int contact_tbl_Lab_Insert(Nullable<int> patientID, string followUp_Body, Nullable<int> employeeID, Nullable<int> apt_ID, Nullable<System.DateTime> rangeStart, Nullable<System.DateTime> rangeEnd)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var followUp_BodyParameter = followUp_Body != null ?
                new ObjectParameter("FollowUp_Body", followUp_Body) :
                new ObjectParameter("FollowUp_Body", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("RangeStart", rangeStart) :
                new ObjectParameter("RangeStart", typeof(System.DateTime));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("RangeEnd", rangeEnd) :
                new ObjectParameter("RangeEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_Lab_Insert", patientIDParameter, followUp_BodyParameter, employeeIDParameter, apt_IDParameter, rangeStartParameter, rangeEndParameter);
        }
    
        public virtual int contact_tbl_Ticket_Insert(Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> followUp_ID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var followUp_IDParameter = followUp_ID.HasValue ?
                new ObjectParameter("FollowUp_ID", followUp_ID) :
                new ObjectParameter("FollowUp_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("contact_tbl_Ticket_Insert", patientIDParameter, messageBodyParameter, employeeIDParameter, followUp_IDParameter);
        }
    
        public virtual ObjectResult<ContactDetails_Result> ContactDetails(Nullable<int> stfID)
        {
            var stfIDParameter = stfID.HasValue ?
                new ObjectParameter("StfID", stfID) :
                new ObjectParameter("StfID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContactDetails_Result>("ContactDetails", stfIDParameter);
        }
    
        public virtual ObjectResult<string> ContactTbl_GetLastTouched(Nullable<int> apt_ID)
        {
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ContactTbl_GetLastTouched", apt_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Discounts_GetID(string discountName)
        {
            var discountNameParameter = discountName != null ?
                new ObjectParameter("DiscountName", discountName) :
                new ObjectParameter("DiscountName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Discounts_GetID", discountNameParameter);
        }
    
        public virtual ObjectResult<dr_console_rx_3rdParty_Result> dr_console_rx_3rdParty(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dr_console_rx_3rdParty_Result>("dr_console_rx_3rdParty", patientIDParameter);
        }
    
        public virtual ObjectResult<dr_console_rx_active_Result> dr_console_rx_active(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dr_console_rx_active_Result>("dr_console_rx_active", patientIDParameter);
        }
    
        public virtual ObjectResult<dr_console_rx_inactive_Result> dr_console_rx_inactive(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dr_console_rx_inactive_Result>("dr_console_rx_inactive", patientIDParameter);
        }
    
        public virtual ObjectResult<DrugList_Result> DrugList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DrugList_Result>("DrugList");
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int EventSales(string eventID)
        {
            var eventIDParameter = eventID != null ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EventSales", eventIDParameter);
        }
    
        public virtual ObjectResult<Exceptions_GetByDate_Result> Exceptions_GetByDate(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exceptions_GetByDate_Result>("Exceptions_GetByDate", startDateParameter);
        }
    
        public virtual ObjectResult<Exceptions_GetByID_Result> Exceptions_GetByID(Nullable<int> profileItemID)
        {
            var profileItemIDParameter = profileItemID.HasValue ?
                new ObjectParameter("ProfileItemID", profileItemID) :
                new ObjectParameter("ProfileItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exceptions_GetByID_Result>("Exceptions_GetByID", profileItemIDParameter);
        }
    
        public virtual ObjectResult<FollowUp_List_Result> FollowUp_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FollowUp_List_Result>("FollowUp_List");
        }
    
        public virtual ObjectResult<FollowUps_Get_Result> FollowUps_Get(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FollowUps_Get_Result>("FollowUps_Get", patientIDParameter);
        }
    
        public virtual ObjectResult<FollowUps_GetByAptID_Result> FollowUps_GetByAptID(Nullable<int> apt_ID)
        {
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FollowUps_GetByAptID_Result>("FollowUps_GetByAptID", apt_IDParameter);
        }
    
        public virtual ObjectResult<FollowUps_GetByID_Result> FollowUps_GetByID(Nullable<int> followupID)
        {
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FollowUps_GetByID_Result>("FollowUps_GetByID", followupIDParameter);
        }
    
        public virtual int FollowUps_Toggle(Nullable<int> aptID, Nullable<int> followupID, Nullable<bool> detach)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            var detachParameter = detach.HasValue ?
                new ObjectParameter("Detach", detach) :
                new ObjectParameter("Detach", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FollowUps_Toggle", aptIDParameter, followupIDParameter, detachParameter);
        }
    
        public virtual int FreqTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FreqTypes");
        }
    
        public virtual ObjectResult<Nullable<int>> Frequencies_GetDays(Nullable<int> freqID)
        {
            var freqIDParameter = freqID.HasValue ?
                new ObjectParameter("FreqID", freqID) :
                new ObjectParameter("FreqID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Frequencies_GetDays", freqIDParameter);
        }
    
        public virtual ObjectResult<Get_Lab_Drilldown_Record_Result> Get_Lab_Drilldown_Record(Nullable<int> patientID, string labName)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("patientID", patientID) :
                new ObjectParameter("patientID", typeof(int));
    
            var labNameParameter = labName != null ?
                new ObjectParameter("labName", labName) :
                new ObjectParameter("labName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Lab_Drilldown_Record_Result>("Get_Lab_Drilldown_Record", patientIDParameter, labNameParameter);
        }
    
        public virtual ObjectResult<Get_lab_ObservationResultDetailSegments_Result> Get_lab_ObservationResultDetailSegments(Nullable<int> orderSegmentDetailID)
        {
            var orderSegmentDetailIDParameter = orderSegmentDetailID.HasValue ?
                new ObjectParameter("OrderSegmentDetailID", orderSegmentDetailID) :
                new ObjectParameter("OrderSegmentDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_lab_ObservationResultDetailSegments_Result>("Get_lab_ObservationResultDetailSegments", orderSegmentDetailIDParameter);
        }
    
        public virtual ObjectResult<Get_Lab_Report_Short_Result> Get_Lab_Report_Short(Nullable<int> message_id)
        {
            var message_idParameter = message_id.HasValue ?
                new ObjectParameter("message_id", message_id) :
                new ObjectParameter("message_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Lab_Report_Short_Result>("Get_Lab_Report_Short", message_idParameter);
        }
    
        public virtual int GetOpenAptPageWise(Nullable<int> pageIndex, Nullable<int> pageSize, string clinic)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOpenAptPageWise", pageIndexParameter, pageSizeParameter, clinicParameter);
        }
    
        public virtual ObjectResult<GetPatientById_Result> GetPatientById(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientById_Result>("GetPatientById", patientIdParameter);
        }
    
        public virtual ObjectResult<GetProfileException_Result> GetProfileException(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfileException_Result>("GetProfileException", patientIDParameter);
        }
    
        public virtual ObjectResult<InsertUpdateTicketClose_Result> InsertUpdateTicketClose(Nullable<int> activeId, Nullable<int> assignId, Nullable<int> rdoSeverityId, string rdoSeverityText, string rdoDeptValue, string userName, Nullable<int> staffId, Nullable<bool> cboClose, Nullable<int> content, string assignText)
        {
            var activeIdParameter = activeId.HasValue ?
                new ObjectParameter("ActiveId", activeId) :
                new ObjectParameter("ActiveId", typeof(int));
    
            var assignIdParameter = assignId.HasValue ?
                new ObjectParameter("AssignId", assignId) :
                new ObjectParameter("AssignId", typeof(int));
    
            var rdoSeverityIdParameter = rdoSeverityId.HasValue ?
                new ObjectParameter("rdoSeverityId", rdoSeverityId) :
                new ObjectParameter("rdoSeverityId", typeof(int));
    
            var rdoSeverityTextParameter = rdoSeverityText != null ?
                new ObjectParameter("rdoSeverityText", rdoSeverityText) :
                new ObjectParameter("rdoSeverityText", typeof(string));
    
            var rdoDeptValueParameter = rdoDeptValue != null ?
                new ObjectParameter("rdoDeptValue", rdoDeptValue) :
                new ObjectParameter("rdoDeptValue", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            var cboCloseParameter = cboClose.HasValue ?
                new ObjectParameter("cboClose", cboClose) :
                new ObjectParameter("cboClose", typeof(bool));
    
            var contentParameter = content.HasValue ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(int));
    
            var assignTextParameter = assignText != null ?
                new ObjectParameter("AssignText", assignText) :
                new ObjectParameter("AssignText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertUpdateTicketClose_Result>("InsertUpdateTicketClose", activeIdParameter, assignIdParameter, rdoSeverityIdParameter, rdoSeverityTextParameter, rdoDeptValueParameter, userNameParameter, staffIdParameter, cboCloseParameter, contentParameter, assignTextParameter);
        }
    
        public virtual ObjectResult<lab_GetAllLabsForPatient_Result> lab_GetAllLabsForPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lab_GetAllLabsForPatient_Result>("lab_GetAllLabsForPatient", patientIDParameter);
        }
    
        public virtual ObjectResult<lab_GetAllLabsForPatient_w_Name_Result> lab_GetAllLabsForPatient_w_Name(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lab_GetAllLabsForPatient_w_Name_Result>("lab_GetAllLabsForPatient_w_Name", patientIDParameter);
        }
    
        public virtual ObjectResult<Lab_LabList_Result> Lab_LabList(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lab_LabList_Result>("Lab_LabList", patientIDParameter);
        }
    
        public virtual ObjectResult<lab_Last35_Reports_Result> lab_Last35_Reports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lab_Last35_Reports_Result>("lab_Last35_Reports");
        }
    
        public virtual ObjectResult<lab_QuestPatient_Match_Result> lab_QuestPatient_Match(Nullable<int> labID)
        {
            var labIDParameter = labID.HasValue ?
                new ObjectParameter("LabID", labID) :
                new ObjectParameter("LabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lab_QuestPatient_Match_Result>("lab_QuestPatient_Match", labIDParameter);
        }
    
        public virtual int lab_QuestTablesExist(ObjectParameter valid)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("lab_QuestTablesExist", valid);
        }
    
        public virtual ObjectResult<lab_Weeks_Reports_Result> lab_Weeks_Reports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lab_Weeks_Reports_Result>("lab_Weeks_Reports");
        }
    
        public virtual ObjectResult<labNotesAndCommentsSegmentsDetails_Result> labNotesAndCommentsSegmentsDetails(string tableRowID)
        {
            var tableRowIDParameter = tableRowID != null ?
                new ObjectParameter("TableRowID", tableRowID) :
                new ObjectParameter("TableRowID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<labNotesAndCommentsSegmentsDetails_Result>("labNotesAndCommentsSegmentsDetails", tableRowIDParameter);
        }
    
        public virtual int LabReport_GetAllResults(Nullable<int> patientID, Nullable<int> panelID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReport_GetAllResults", patientIDParameter, panelIDParameter);
        }
    
        public virtual int LabReports_AddGroupToPanel(Nullable<int> panelID, Nullable<int> groupID)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_AddGroupToPanel", panelIDParameter, groupIDParameter);
        }
    
        public virtual int LabReports_CheckOrphan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_CheckOrphan");
        }
    
        public virtual int LabReports_CreateResults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_CreateResults");
        }
    
        public virtual ObjectResult<LabReports_GetGroupsByName_Result> LabReports_GetGroupsByName(string firstname, string lastName)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GetGroupsByName_Result>("LabReports_GetGroupsByName", firstnameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<LabReports_GetPanelsByName_Result> LabReports_GetPanelsByName(string firstname, string lastName)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GetPanelsByName_Result>("LabReports_GetPanelsByName", firstnameParameter, lastNameParameter);
        }
    
        public virtual int LabReports_GetResults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_GetResults");
        }
    
        public virtual ObjectResult<LabReports_GetResultsByName_Result> LabReports_GetResultsByName(string firstname, string lastName)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GetResultsByName_Result>("LabReports_GetResultsByName", firstnameParameter, lastNameParameter);
        }
    
        public virtual int LabReports_GetResultsByPatientID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_GetResultsByPatientID", patientIDParameter);
        }
    
        public virtual ObjectResult<LabReports_GetTestsByStartLetter_Result> LabReports_GetTestsByStartLetter(string letter)
        {
            var letterParameter = letter != null ?
                new ObjectParameter("Letter", letter) :
                new ObjectParameter("Letter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GetTestsByStartLetter_Result>("LabReports_GetTestsByStartLetter", letterParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> LabReports_Groups_Insert(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LabReports_Groups_Insert", groupNameParameter);
        }
    
        public virtual int LabReports_Groups_Update(Nullable<int> groupID, string groupTitle, string description, string highText, string normalText, string lowText)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var groupTitleParameter = groupTitle != null ?
                new ObjectParameter("GroupTitle", groupTitle) :
                new ObjectParameter("GroupTitle", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var highTextParameter = highText != null ?
                new ObjectParameter("HighText", highText) :
                new ObjectParameter("HighText", typeof(string));
    
            var normalTextParameter = normalText != null ?
                new ObjectParameter("NormalText", normalText) :
                new ObjectParameter("NormalText", typeof(string));
    
            var lowTextParameter = lowText != null ?
                new ObjectParameter("LowText", lowText) :
                new ObjectParameter("LowText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_Groups_Update", groupIDParameter, groupTitleParameter, descriptionParameter, highTextParameter, normalTextParameter, lowTextParameter);
        }
    
        public virtual ObjectResult<LabReports_GroupsGet_Result> LabReports_GroupsGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GroupsGet_Result>("LabReports_GroupsGet");
        }
    
        public virtual ObjectResult<LabReports_GroupsGetByID_Result> LabReports_GroupsGetByID(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GroupsGetByID_Result>("LabReports_GroupsGetByID", groupIDParameter);
        }
    
        public virtual ObjectResult<LabReports_GroupsGetTests_Result> LabReports_GroupsGetTests(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_GroupsGetTests_Result>("LabReports_GroupsGetTests", groupIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> LabReports_Panel_Insert(string panelName)
        {
            var panelNameParameter = panelName != null ?
                new ObjectParameter("PanelName", panelName) :
                new ObjectParameter("PanelName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("LabReports_Panel_Insert", panelNameParameter);
        }
    
        public virtual ObjectResult<LabReports_Panels_Get_Result> LabReports_Panels_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_Panels_Get_Result>("LabReports_Panels_Get");
        }
    
        public virtual int LabReports_Panels_Update(Nullable<int> panelID, string panelName, string panelDescrip)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            var panelNameParameter = panelName != null ?
                new ObjectParameter("PanelName", panelName) :
                new ObjectParameter("PanelName", typeof(string));
    
            var panelDescripParameter = panelDescrip != null ?
                new ObjectParameter("PanelDescrip", panelDescrip) :
                new ObjectParameter("PanelDescrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_Panels_Update", panelIDParameter, panelNameParameter, panelDescripParameter);
        }
    
        public virtual ObjectResult<LabReports_PanelsGetGroups_Result> LabReports_PanelsGetGroups(Nullable<int> panelID)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LabReports_PanelsGetGroups_Result>("LabReports_PanelsGetGroups", panelIDParameter);
        }
    
        public virtual int LabReports_Report(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_Report", patientIDParameter);
        }
    
        public virtual int LabReports_Tests_Delete(string testName)
        {
            var testNameParameter = testName != null ?
                new ObjectParameter("TestName", testName) :
                new ObjectParameter("TestName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_Tests_Delete", testNameParameter);
        }
    
        public virtual int LabReports_Tests_Insert(string testName, Nullable<int> groupID)
        {
            var testNameParameter = testName != null ?
                new ObjectParameter("TestName", testName) :
                new ObjectParameter("TestName", typeof(string));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabReports_Tests_Insert", testNameParameter, groupIDParameter);
        }
    
        public virtual int LabRequestInsertUpdate(string gridName, Nullable<int> requestID, string requestLabName, Nullable<bool> active)
        {
            var gridNameParameter = gridName != null ?
                new ObjectParameter("GridName", gridName) :
                new ObjectParameter("GridName", typeof(string));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            var requestLabNameParameter = requestLabName != null ?
                new ObjectParameter("RequestLabName", requestLabName) :
                new ObjectParameter("RequestLabName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabRequestInsertUpdate", gridNameParameter, requestIDParameter, requestLabNameParameter, activeParameter);
        }
    
        public virtual ObjectResult<Labs_UnmatchedLabs_Result> Labs_UnmatchedLabs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Labs_UnmatchedLabs_Result>("Labs_UnmatchedLabs");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> LabSchedule_GetOneTest(Nullable<int> patientID, string testName)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var testNameParameter = testName != null ?
                new ObjectParameter("TestName", testName) :
                new ObjectParameter("TestName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("LabSchedule_GetOneTest", patientIDParameter, testNameParameter);
        }
    
        public virtual int LabSchedule_GetSchedule(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LabSchedule_GetSchedule", patientIDParameter);
        }
    
        public virtual ObjectResult<MedicalNotes_All_Result> MedicalNotes_All(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicalNotes_All_Result>("MedicalNotes_All", patientIDParameter);
        }
    
        public virtual ObjectResult<MedicalNotes_All_History_Result> MedicalNotes_All_History(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MedicalNotes_All_History_Result>("MedicalNotes_All_History", patientIDParameter);
        }
    
        public virtual ObjectResult<My_FollowUpList_Result> My_FollowUpList(Nullable<int> stfID)
        {
            var stfIDParameter = stfID.HasValue ?
                new ObjectParameter("StfID", stfID) :
                new ObjectParameter("StfID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<My_FollowUpList_Result>("My_FollowUpList", stfIDParameter);
        }
    
        public virtual int Order_Cancel(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_Cancel", orderIDParameter);
        }
    
        public virtual int Order_Close(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Order_Close", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Order_Create(Nullable<int> patientID, Nullable<System.DateTime> datePrep, string shipName, string shipAddress1, string shipAddress2, string shipCity, string shipState, string shipZip, Nullable<int> batch, Nullable<int> employeeID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var datePrepParameter = datePrep.HasValue ?
                new ObjectParameter("DatePrep", datePrep) :
                new ObjectParameter("DatePrep", typeof(System.DateTime));
    
            var shipNameParameter = shipName != null ?
                new ObjectParameter("ShipName", shipName) :
                new ObjectParameter("ShipName", typeof(string));
    
            var shipAddress1Parameter = shipAddress1 != null ?
                new ObjectParameter("ShipAddress1", shipAddress1) :
                new ObjectParameter("ShipAddress1", typeof(string));
    
            var shipAddress2Parameter = shipAddress2 != null ?
                new ObjectParameter("ShipAddress2", shipAddress2) :
                new ObjectParameter("ShipAddress2", typeof(string));
    
            var shipCityParameter = shipCity != null ?
                new ObjectParameter("ShipCity", shipCity) :
                new ObjectParameter("ShipCity", typeof(string));
    
            var shipStateParameter = shipState != null ?
                new ObjectParameter("ShipState", shipState) :
                new ObjectParameter("ShipState", typeof(string));
    
            var shipZipParameter = shipZip != null ?
                new ObjectParameter("ShipZip", shipZip) :
                new ObjectParameter("ShipZip", typeof(string));
    
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Order_Create", patientIDParameter, datePrepParameter, shipNameParameter, shipAddress1Parameter, shipAddress2Parameter, shipCityParameter, shipStateParameter, shipZipParameter, batchParameter, employeeIDParameter);
        }
    
        public virtual int OrderItem_Create(Nullable<int> orderID, Nullable<int> profileItemID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var profileItemIDParameter = profileItemID.HasValue ?
                new ObjectParameter("ProfileItemID", profileItemID) :
                new ObjectParameter("ProfileItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Create", orderIDParameter, profileItemIDParameter);
        }
    
        public virtual int OrderItem_Update(Nullable<int> orderItemID, Nullable<int> quantity)
        {
            var orderItemIDParameter = orderItemID.HasValue ?
                new ObjectParameter("OrderItemID", orderItemID) :
                new ObjectParameter("OrderItemID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OrderItem_Update", orderItemIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> OrderItems_CheckOpen(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("OrderItems_CheckOpen", patientIDParameter);
        }
    
        public virtual ObjectResult<OrderItems_GetBatch_Result> OrderItems_GetBatch(Nullable<int> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_GetBatch_Result>("OrderItems_GetBatch", batchIDParameter);
        }
    
        public virtual ObjectResult<OrderItems_GetOrder_Result> OrderItems_GetOrder(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderItems_GetOrder_Result>("OrderItems_GetOrder", orderIDParameter);
        }
    
        public virtual int Orders_CloseOrder(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Orders_CloseOrder", orderIDParameter);
        }
    
        public virtual ObjectResult<Orders_GetBatch_Result> Orders_GetBatch(Nullable<int> batch)
        {
            var batchParameter = batch.HasValue ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetBatch_Result>("Orders_GetBatch", batchParameter);
        }
    
        public virtual ObjectResult<Orders_GetByPatient_Result> Orders_GetByPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetByPatient_Result>("Orders_GetByPatient", patientIDParameter);
        }
    
        public virtual ObjectResult<Orders_GetCancelled_Result> Orders_GetCancelled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetCancelled_Result>("Orders_GetCancelled");
        }
    
        public virtual int Orders_GetDate(Nullable<System.DateTime> datePrep)
        {
            var datePrepParameter = datePrep.HasValue ?
                new ObjectParameter("DatePrep", datePrep) :
                new ObjectParameter("DatePrep", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Orders_GetDate", datePrepParameter);
        }
    
        public virtual ObjectResult<Orders_GetOpen_Result> Orders_GetOpen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOpen_Result>("Orders_GetOpen");
        }
    
        public virtual ObjectResult<Orders_GetOpenByPatient_Result> Orders_GetOpenByPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOpenByPatient_Result>("Orders_GetOpenByPatient", patientIDParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderbystatus_Result> Orders_GetOrderbystatus(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string status, Nullable<int> productId, string productStatus)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productStatusParameter = productStatus != null ?
                new ObjectParameter("productStatus", productStatus) :
                new ObjectParameter("productStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderbystatus_Result>("Orders_GetOrderbystatus", startDateParameter, endDateParameter, statusParameter, productIdParameter, productStatusParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderbystatusAutoship_Result> Orders_GetOrderbystatusAutoship(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderbystatusAutoship_Result>("Orders_GetOrderbystatusAutoship", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Orders_GetOrderForShipped_Result> Orders_GetOrderForShipped(Nullable<int> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetOrderForShipped_Result>("Orders_GetOrderForShipped", orderidParameter);
        }
    
        public virtual ObjectResult<Orders_GetToClose_Result> Orders_GetToClose(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetToClose_Result>("Orders_GetToClose", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Orders_GetUnInvoiced_Result> Orders_GetUnInvoiced(Nullable<System.DateTime> createDate)
        {
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Orders_GetUnInvoiced_Result>("Orders_GetUnInvoiced", createDateParameter);
        }
    
        public virtual int Orders_RemoveBatch(Nullable<int> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Orders_RemoveBatch", batchIDParameter);
        }
    
        public virtual ObjectResult<Patient_List_Result> Patient_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patient_List_Result>("Patient_List");
        }
    
        public virtual ObjectResult<Nullable<bool>> Patients_CheckAllowApptReassign(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Patients_CheckAllowApptReassign", patientIDParameter);
        }
    
        public virtual ObjectResult<Patients_CriticalTasksGet_Result> Patients_CriticalTasksGet(Nullable<int> pateintID)
        {
            var pateintIDParameter = pateintID.HasValue ?
                new ObjectParameter("PateintID", pateintID) :
                new ObjectParameter("PateintID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_CriticalTasksGet_Result>("Patients_CriticalTasksGet", pateintIDParameter);
        }
    
        public virtual ObjectResult<Patients_CriticalTasksGetOne_Result> Patients_CriticalTasksGetOne(Nullable<int> patientID, Nullable<int> taskTypeID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var taskTypeIDParameter = taskTypeID.HasValue ?
                new ObjectParameter("TaskTypeID", taskTypeID) :
                new ObjectParameter("TaskTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_CriticalTasksGetOne_Result>("Patients_CriticalTasksGetOne", patientIDParameter, taskTypeIDParameter);
        }
    
        public virtual ObjectResult<Patients_CriticalTasksGetTypes_Result> Patients_CriticalTasksGetTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_CriticalTasksGetTypes_Result>("Patients_CriticalTasksGetTypes");
        }
    
        public virtual int Patients_CriticalTasksInsert(Nullable<int> taskTypeID, Nullable<int> patientID)
        {
            var taskTypeIDParameter = taskTypeID.HasValue ?
                new ObjectParameter("TaskTypeID", taskTypeID) :
                new ObjectParameter("TaskTypeID", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_CriticalTasksInsert", taskTypeIDParameter, patientIDParameter);
        }
    
        public virtual int Patients_FindID(string patientName, Nullable<System.DateTime> birthday, string clinic)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_FindID", patientNameParameter, birthdayParameter, clinicParameter);
        }
    
        public virtual int Patients_FindIDTest(string patientName, Nullable<System.DateTime> birthday, string clinic)
        {
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_FindIDTest", patientNameParameter, birthdayParameter, clinicParameter);
        }
    
        public virtual ObjectResult<Patients_Get_Result> Patients_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_Get_Result>("Patients_Get");
        }
    
        public virtual ObjectResult<Patients_GetAllPatient_Result> Patients_GetAllPatient(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_GetAllPatient_Result>("Patients_GetAllPatient", providerIDParameter);
        }
    
        public virtual ObjectResult<Patients_GetByID_Result> Patients_GetByID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_GetByID_Result>("Patients_GetByID", patientIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Patients_Insert(string firstName, string lastName, string birthday, string sex, Nullable<int> conciergeID, string shippingStreet, string billingStreet, string shippingCity, string billingCity, string shippingState, string shippingZip, string billingState, string billingZip, string homePhone, string workPhone, Nullable<bool> home_CB_only, Nullable<bool> work_CB_only, Nullable<bool> home_detailed_info, Nullable<bool> work_Detailed_info, string cellPhone, string faxPone, Nullable<bool> cell_CB_Only, Nullable<bool> fax_auth_detailed_info, Nullable<bool> cell_Detailed_info, string email, string clinic, Nullable<bool> email_auth_detailed_info, string prefered_Pharm, Nullable<bool> hIPPA_signed, string hIPPA_signed_date, string lMC_CP, string emergencyFirstName, string emergencyLastName, string emergencyPhone, string contactPreference, string emergencyRelationship, Nullable<bool> medical, Nullable<bool> aesthetics, Nullable<bool> autoship, Nullable<bool> retail)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthdayParameter = birthday != null ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var conciergeIDParameter = conciergeID.HasValue ?
                new ObjectParameter("ConciergeID", conciergeID) :
                new ObjectParameter("ConciergeID", typeof(int));
    
            var shippingStreetParameter = shippingStreet != null ?
                new ObjectParameter("ShippingStreet", shippingStreet) :
                new ObjectParameter("ShippingStreet", typeof(string));
    
            var billingStreetParameter = billingStreet != null ?
                new ObjectParameter("BillingStreet", billingStreet) :
                new ObjectParameter("BillingStreet", typeof(string));
    
            var shippingCityParameter = shippingCity != null ?
                new ObjectParameter("ShippingCity", shippingCity) :
                new ObjectParameter("ShippingCity", typeof(string));
    
            var billingCityParameter = billingCity != null ?
                new ObjectParameter("BillingCity", billingCity) :
                new ObjectParameter("BillingCity", typeof(string));
    
            var shippingStateParameter = shippingState != null ?
                new ObjectParameter("ShippingState", shippingState) :
                new ObjectParameter("ShippingState", typeof(string));
    
            var shippingZipParameter = shippingZip != null ?
                new ObjectParameter("ShippingZip", shippingZip) :
                new ObjectParameter("ShippingZip", typeof(string));
    
            var billingStateParameter = billingState != null ?
                new ObjectParameter("BillingState", billingState) :
                new ObjectParameter("BillingState", typeof(string));
    
            var billingZipParameter = billingZip != null ?
                new ObjectParameter("BillingZip", billingZip) :
                new ObjectParameter("BillingZip", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var workPhoneParameter = workPhone != null ?
                new ObjectParameter("WorkPhone", workPhone) :
                new ObjectParameter("WorkPhone", typeof(string));
    
            var home_CB_onlyParameter = home_CB_only.HasValue ?
                new ObjectParameter("Home_CB_only", home_CB_only) :
                new ObjectParameter("Home_CB_only", typeof(bool));
    
            var work_CB_onlyParameter = work_CB_only.HasValue ?
                new ObjectParameter("Work_CB_only", work_CB_only) :
                new ObjectParameter("Work_CB_only", typeof(bool));
    
            var home_detailed_infoParameter = home_detailed_info.HasValue ?
                new ObjectParameter("Home_detailed_info", home_detailed_info) :
                new ObjectParameter("Home_detailed_info", typeof(bool));
    
            var work_Detailed_infoParameter = work_Detailed_info.HasValue ?
                new ObjectParameter("Work_Detailed_info", work_Detailed_info) :
                new ObjectParameter("Work_Detailed_info", typeof(bool));
    
            var cellPhoneParameter = cellPhone != null ?
                new ObjectParameter("CellPhone", cellPhone) :
                new ObjectParameter("CellPhone", typeof(string));
    
            var faxPoneParameter = faxPone != null ?
                new ObjectParameter("FaxPone", faxPone) :
                new ObjectParameter("FaxPone", typeof(string));
    
            var cell_CB_OnlyParameter = cell_CB_Only.HasValue ?
                new ObjectParameter("Cell_CB_Only", cell_CB_Only) :
                new ObjectParameter("Cell_CB_Only", typeof(bool));
    
            var fax_auth_detailed_infoParameter = fax_auth_detailed_info.HasValue ?
                new ObjectParameter("Fax_auth_detailed_info", fax_auth_detailed_info) :
                new ObjectParameter("Fax_auth_detailed_info", typeof(bool));
    
            var cell_Detailed_infoParameter = cell_Detailed_info.HasValue ?
                new ObjectParameter("Cell_Detailed_info", cell_Detailed_info) :
                new ObjectParameter("Cell_Detailed_info", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var email_auth_detailed_infoParameter = email_auth_detailed_info.HasValue ?
                new ObjectParameter("Email_auth_detailed_info", email_auth_detailed_info) :
                new ObjectParameter("Email_auth_detailed_info", typeof(bool));
    
            var prefered_PharmParameter = prefered_Pharm != null ?
                new ObjectParameter("Prefered_Pharm", prefered_Pharm) :
                new ObjectParameter("Prefered_Pharm", typeof(string));
    
            var hIPPA_signedParameter = hIPPA_signed.HasValue ?
                new ObjectParameter("HIPPA_signed", hIPPA_signed) :
                new ObjectParameter("HIPPA_signed", typeof(bool));
    
            var hIPPA_signed_dateParameter = hIPPA_signed_date != null ?
                new ObjectParameter("HIPPA_signed_date", hIPPA_signed_date) :
                new ObjectParameter("HIPPA_signed_date", typeof(string));
    
            var lMC_CPParameter = lMC_CP != null ?
                new ObjectParameter("LMC_CP", lMC_CP) :
                new ObjectParameter("LMC_CP", typeof(string));
    
            var emergencyFirstNameParameter = emergencyFirstName != null ?
                new ObjectParameter("EmergencyFirstName", emergencyFirstName) :
                new ObjectParameter("EmergencyFirstName", typeof(string));
    
            var emergencyLastNameParameter = emergencyLastName != null ?
                new ObjectParameter("EmergencyLastName", emergencyLastName) :
                new ObjectParameter("EmergencyLastName", typeof(string));
    
            var emergencyPhoneParameter = emergencyPhone != null ?
                new ObjectParameter("EmergencyPhone", emergencyPhone) :
                new ObjectParameter("EmergencyPhone", typeof(string));
    
            var contactPreferenceParameter = contactPreference != null ?
                new ObjectParameter("ContactPreference", contactPreference) :
                new ObjectParameter("ContactPreference", typeof(string));
    
            var emergencyRelationshipParameter = emergencyRelationship != null ?
                new ObjectParameter("EmergencyRelationship", emergencyRelationship) :
                new ObjectParameter("EmergencyRelationship", typeof(string));
    
            var medicalParameter = medical.HasValue ?
                new ObjectParameter("Medical", medical) :
                new ObjectParameter("Medical", typeof(bool));
    
            var aestheticsParameter = aesthetics.HasValue ?
                new ObjectParameter("Aesthetics", aesthetics) :
                new ObjectParameter("Aesthetics", typeof(bool));
    
            var autoshipParameter = autoship.HasValue ?
                new ObjectParameter("Autoship", autoship) :
                new ObjectParameter("Autoship", typeof(bool));
    
            var retailParameter = retail.HasValue ?
                new ObjectParameter("Retail", retail) :
                new ObjectParameter("Retail", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Patients_Insert", firstNameParameter, lastNameParameter, birthdayParameter, sexParameter, conciergeIDParameter, shippingStreetParameter, billingStreetParameter, shippingCityParameter, billingCityParameter, shippingStateParameter, shippingZipParameter, billingStateParameter, billingZipParameter, homePhoneParameter, workPhoneParameter, home_CB_onlyParameter, work_CB_onlyParameter, home_detailed_infoParameter, work_Detailed_infoParameter, cellPhoneParameter, faxPoneParameter, cell_CB_OnlyParameter, fax_auth_detailed_infoParameter, cell_Detailed_infoParameter, emailParameter, clinicParameter, email_auth_detailed_infoParameter, prefered_PharmParameter, hIPPA_signedParameter, hIPPA_signed_dateParameter, lMC_CPParameter, emergencyFirstNameParameter, emergencyLastNameParameter, emergencyPhoneParameter, contactPreferenceParameter, emergencyRelationshipParameter, medicalParameter, aestheticsParameter, autoshipParameter, retailParameter);
        }
    
        public virtual int Patients_SaveAutoshipDiscount(Nullable<int> patientID, string note)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_SaveAutoshipDiscount", patientIDParameter, noteParameter);
        }
    
        public virtual int Patients_SaveAutoshipNote(Nullable<int> patientID, string note)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_SaveAutoshipNote", patientIDParameter, noteParameter);
        }
    
        public virtual ObjectResult<Patients_w_Contact_EntriesToday_Result> Patients_w_Contact_EntriesToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients_w_Contact_EntriesToday_Result>("Patients_w_Contact_EntriesToday");
        }
    
        public virtual ObjectResult<Pending_Prescriptions_Result> Pending_Prescriptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pending_Prescriptions_Result>("Pending_Prescriptions");
        }
    
        public virtual ObjectResult<Prescipt_Details_Result> Prescipt_Details(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Details_Result>("Prescipt_Details", patientIDParameter);
        }
    
        public virtual ObjectResult<Prescipt_Details_PrintOut_Result> Prescipt_Details_PrintOut(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Details_PrintOut_Result>("Prescipt_Details_PrintOut", patientIDParameter);
        }
    
        public virtual ObjectResult<Prescipt_Last5Days_Result> Prescipt_Last5Days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Last5Days_Result>("Prescipt_Last5Days");
        }
    
        public virtual ObjectResult<Prescipt_Today_0_Result> Prescipt_Today_0()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Today_0_Result>("Prescipt_Today_0");
        }
    
        public virtual ObjectResult<Prescipt_Today_1_Result> Prescipt_Today_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Today_1_Result>("Prescipt_Today_1");
        }
    
        public virtual ObjectResult<Prescipt_Today_2_Result> Prescipt_Today_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Today_2_Result>("Prescipt_Today_2");
        }
    
        public virtual ObjectResult<Prescipt_Today_3_Result> Prescipt_Today_3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Today_3_Result>("Prescipt_Today_3");
        }
    
        public virtual ObjectResult<Prescipt_Today_4_Result> Prescipt_Today_4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescipt_Today_4_Result>("Prescipt_Today_4");
        }
    
        public virtual ObjectResult<Nullable<int>> Prescriptions_NumberToday(Nullable<int> patientID_param)
        {
            var patientID_paramParameter = patientID_param.HasValue ?
                new ObjectParameter("patientID_param", patientID_param) :
                new ObjectParameter("patientID_param", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Prescriptions_NumberToday", patientID_paramParameter);
        }
    
        public virtual ObjectResult<Prescriptions_Todays_Result> Prescriptions_Todays(Nullable<int> patientID_param)
        {
            var patientID_paramParameter = patientID_param.HasValue ?
                new ObjectParameter("patientID_param", patientID_param) :
                new ObjectParameter("patientID_param", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prescriptions_Todays_Result>("Prescriptions_Todays", patientID_paramParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Prescriptions_Todays_count(Nullable<int> patientID_param)
        {
            var patientID_paramParameter = patientID_param.HasValue ?
                new ObjectParameter("patientID_param", patientID_param) :
                new ObjectParameter("patientID_param", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Prescriptions_Todays_count", patientID_paramParameter);
        }
    
        public virtual ObjectResult<PrintPrescriptions_Result> PrintPrescriptions(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintPrescriptions_Result>("PrintPrescriptions", patientIDParameter);
        }
    
        public virtual ObjectResult<ProbList_DiagLookup_Result> ProbList_DiagLookup(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProbList_DiagLookup_Result>("ProbList_DiagLookup", patientIDParameter);
        }
    
        public virtual ObjectResult<ProbList_SympLookup_Result> ProbList_SympLookup(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProbList_SympLookup_Result>("ProbList_SympLookup", patientIDParameter);
        }
    
        public virtual int Profile_Get(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Profile_Get", patientIDParameter);
        }
    
        public virtual ObjectResult<ProfileException_Get_Result> ProfileException_Get(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileException_Get_Result>("ProfileException_Get", patientIDParameter);
        }
    
        public virtual int ProfileExceptions_Delete(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProfileExceptions_Delete", patientIDParameter);
        }
    
        public virtual ObjectResult<ProfileExceptions_GetByPatient_Result> ProfileExceptions_GetByPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileExceptions_GetByPatient_Result>("ProfileExceptions_GetByPatient", patientIDParameter);
        }
    
        public virtual int ProfileExceptions_Insert(Nullable<int> patientID, string shippingAddress, string shippingCity, string shippingState, string shippingZip, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("ShippingAddress", shippingAddress) :
                new ObjectParameter("ShippingAddress", typeof(string));
    
            var shippingCityParameter = shippingCity != null ?
                new ObjectParameter("ShippingCity", shippingCity) :
                new ObjectParameter("ShippingCity", typeof(string));
    
            var shippingStateParameter = shippingState != null ?
                new ObjectParameter("ShippingState", shippingState) :
                new ObjectParameter("ShippingState", typeof(string));
    
            var shippingZipParameter = shippingZip != null ?
                new ObjectParameter("ShippingZip", shippingZip) :
                new ObjectParameter("ShippingZip", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProfileExceptions_Insert", patientIDParameter, shippingAddressParameter, shippingCityParameter, shippingStateParameter, shippingZipParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int ProfileItem_Delete(Nullable<int> profileItemID)
        {
            var profileItemIDParameter = profileItemID.HasValue ?
                new ObjectParameter("ProfileItemID", profileItemID) :
                new ObjectParameter("ProfileItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProfileItem_Delete", profileItemIDParameter);
        }
    
        public virtual ObjectResult<ProfileItem_GetByID_Result> ProfileItem_GetByID(Nullable<int> profileItemID)
        {
            var profileItemIDParameter = profileItemID.HasValue ?
                new ObjectParameter("ProfileItemID", profileItemID) :
                new ObjectParameter("ProfileItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItem_GetByID_Result>("ProfileItem_GetByID", profileItemIDParameter);
        }
    
        public virtual ObjectResult<ProfileItem_Ship_Result> ProfileItem_Ship(Nullable<int> orderItemID)
        {
            var orderItemIDParameter = orderItemID.HasValue ?
                new ObjectParameter("OrderItemID", orderItemID) :
                new ObjectParameter("OrderItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItem_Ship_Result>("ProfileItem_Ship", orderItemIDParameter);
        }
    
        public virtual ObjectResult<ProfileItems_GetFuture_Result> ProfileItems_GetFuture(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItems_GetFuture_Result>("ProfileItems_GetFuture", patientIDParameter);
        }
    
        public virtual ObjectResult<ProfileItems_GetHoldFuture_Result> ProfileItems_GetHoldFuture(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItems_GetHoldFuture_Result>("ProfileItems_GetHoldFuture", patientIDParameter);
        }
    
        public virtual ObjectResult<ProfileItems_GetTree_Result> ProfileItems_GetTree(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItems_GetTree_Result>("ProfileItems_GetTree", patientIDParameter);
        }
    
        public virtual int ProfileItems_Update(Nullable<int> profileItemID, Nullable<int> quantity, Nullable<int> frequency, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> lastShipped, Nullable<System.DateTime> nextShip, Nullable<int> discountID, Nullable<int> hold)
        {
            var profileItemIDParameter = profileItemID.HasValue ?
                new ObjectParameter("ProfileItemID", profileItemID) :
                new ObjectParameter("ProfileItemID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var lastShippedParameter = lastShipped.HasValue ?
                new ObjectParameter("LastShipped", lastShipped) :
                new ObjectParameter("LastShipped", typeof(System.DateTime));
    
            var nextShipParameter = nextShip.HasValue ?
                new ObjectParameter("NextShip", nextShip) :
                new ObjectParameter("NextShip", typeof(System.DateTime));
    
            var discountIDParameter = discountID.HasValue ?
                new ObjectParameter("DiscountID", discountID) :
                new ObjectParameter("DiscountID", typeof(int));
    
            var holdParameter = hold.HasValue ?
                new ObjectParameter("Hold", hold) :
                new ObjectParameter("Hold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProfileItems_Update", profileItemIDParameter, quantityParameter, frequencyParameter, startDateParameter, endDateParameter, lastShippedParameter, nextShipParameter, discountIDParameter, holdParameter);
        }
    
        public virtual ObjectResult<ProfileItemsOrders_Get_Result> ProfileItemsOrders_Get(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItemsOrders_Get_Result>("ProfileItemsOrders_Get", startDateParameter);
        }
    
        public virtual ObjectResult<ProfileItemsOrders_GetByPatient_Result> ProfileItemsOrders_GetByPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProfileItemsOrders_GetByPatient_Result>("ProfileItemsOrders_GetByPatient", patientIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProfilesItems_Insert(Nullable<int> patientID, Nullable<int> productId, Nullable<int> quantity, Nullable<int> frequency, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> nextShip, Nullable<int> hold, Nullable<int> discountID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var nextShipParameter = nextShip.HasValue ?
                new ObjectParameter("NextShip", nextShip) :
                new ObjectParameter("NextShip", typeof(System.DateTime));
    
            var holdParameter = hold.HasValue ?
                new ObjectParameter("Hold", hold) :
                new ObjectParameter("Hold", typeof(int));
    
            var discountIDParameter = discountID.HasValue ?
                new ObjectParameter("DiscountID", discountID) :
                new ObjectParameter("DiscountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProfilesItems_Insert", patientIDParameter, productIdParameter, quantityParameter, frequencyParameter, startDateParameter, endDateParameter, nextShipParameter, holdParameter, discountIDParameter);
        }
    
        public virtual ObjectResult<ProgressReview_Goals_list_Result> ProgressReview_Goals_list(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgressReview_Goals_list_Result>("ProgressReview_Goals_list", patientIDParameter);
        }
    
        public virtual int Protocols_Add_DiagID(Nullable<int> pid, string did, string viewable)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var didParameter = did != null ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(string));
    
            var viewableParameter = viewable != null ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_DiagID", pidParameter, didParameter, viewableParameter);
        }
    
        public virtual int Protocols_Add_Diagnosis(ObjectParameter check_record, string title, Nullable<bool> viewable)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_Diagnosis", check_record, titleParameter, viewableParameter);
        }
    
        public virtual int Protocols_Add_Protocol(ObjectParameter check_record, Nullable<int> enteredby, string title, string desc, Nullable<bool> viewable, Nullable<System.DateTime> lastUpdated)
        {
            var enteredbyParameter = enteredby.HasValue ?
                new ObjectParameter("enteredby", enteredby) :
                new ObjectParameter("enteredby", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(bool));
    
            var lastUpdatedParameter = lastUpdated.HasValue ?
                new ObjectParameter("lastUpdated", lastUpdated) :
                new ObjectParameter("lastUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_Protocol", check_record, enteredbyParameter, titleParameter, descParameter, viewableParameter, lastUpdatedParameter);
        }
    
        public virtual int Protocols_Add_Sympt_Diagn(ObjectParameter check_record, Nullable<int> symptID, Nullable<int> diagnID, Nullable<bool> viewable)
        {
            var symptIDParameter = symptID.HasValue ?
                new ObjectParameter("symptID", symptID) :
                new ObjectParameter("symptID", typeof(int));
    
            var diagnIDParameter = diagnID.HasValue ?
                new ObjectParameter("diagnID", diagnID) :
                new ObjectParameter("diagnID", typeof(int));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_Sympt_Diagn", check_record, symptIDParameter, diagnIDParameter, viewableParameter);
        }
    
        public virtual int Protocols_Add_Symptom(ObjectParameter check_record, string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_Symptom", check_record, titleParameter);
        }
    
        public virtual int Protocols_Add_SymptomID(Nullable<int> pid, string sid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var sidParameter = sid != null ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Add_SymptomID", pidParameter, sidParameter);
        }
    
        public virtual int Protocols_Delete_Diagnosis(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Delete_Diagnosis", idParameter);
        }
    
        public virtual int Protocols_Delete_Protocol(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Delete_Protocol", idParameter);
        }
    
        public virtual int Protocols_Delete_Symptom(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Delete_Symptom", idParameter);
        }
    
        public virtual ObjectResult<Protocols_Show_Diagnosis_Result> Protocols_Show_Diagnosis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Protocols_Show_Diagnosis_Result>("Protocols_Show_Diagnosis");
        }
    
        public virtual ObjectResult<Protocols_Show_DiagnosisID_Result> Protocols_Show_DiagnosisID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Protocols_Show_DiagnosisID_Result>("Protocols_Show_DiagnosisID");
        }
    
        public virtual ObjectResult<Nullable<int>> Protocols_Show_ProtoID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Protocols_Show_ProtoID");
        }
    
        public virtual ObjectResult<Protocols_Show_Symptom_Result> Protocols_Show_Symptom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Protocols_Show_Symptom_Result>("Protocols_Show_Symptom");
        }
    
        public virtual ObjectResult<Protocols_Show_SymptomID_Result> Protocols_Show_SymptomID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Protocols_Show_SymptomID_Result>("Protocols_Show_SymptomID");
        }
    
        public virtual int Protocols_Update_Diagnosis(ObjectParameter check_record, Nullable<int> id, string title, string viewable)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var viewableParameter = viewable != null ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Update_Diagnosis", check_record, idParameter, titleParameter, viewableParameter);
        }
    
        public virtual int Protocols_Update_Protocol(string title, Nullable<int> id, string dID, string sID, string desc, Nullable<bool> viewable, Nullable<System.DateTime> lastUpdated)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("dID", dID) :
                new ObjectParameter("dID", typeof(string));
    
            var sIDParameter = sID != null ?
                new ObjectParameter("sID", sID) :
                new ObjectParameter("sID", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("viewable", viewable) :
                new ObjectParameter("viewable", typeof(bool));
    
            var lastUpdatedParameter = lastUpdated.HasValue ?
                new ObjectParameter("lastUpdated", lastUpdated) :
                new ObjectParameter("lastUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Update_Protocol", titleParameter, idParameter, dIDParameter, sIDParameter, descParameter, viewableParameter, lastUpdatedParameter);
        }
    
        public virtual int Protocols_Update_Symptom(ObjectParameter check_record, Nullable<int> id, string title)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Protocols_Update_Symptom", check_record, idParameter, titleParameter);
        }
    
        public virtual ObjectResult<Provider_GetByID_Result> Provider_GetByID(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Provider_GetByID_Result>("Provider_GetByID", providerIDParameter);
        }
    
        public virtual int Providers_Delete(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Providers_Delete", providerIDParameter);
        }
    
        public virtual ObjectResult<Providers_Get_Result> Providers_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Providers_Get_Result>("Providers_Get");
        }
    
        public virtual ObjectResult<Providers_GetAllProviders_Result> Providers_GetAllProviders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Providers_GetAllProviders_Result>("Providers_GetAllProviders");
        }
    
        public virtual ObjectResult<Providers_GetManage_Result> Providers_GetManage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Providers_GetManage_Result>("Providers_GetManage");
        }
    
        public virtual int Providers_Insert(string providerName, Nullable<bool> active)
        {
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Providers_Insert", providerNameParameter, activeParameter);
        }
    
        public virtual int Providers_Update(Nullable<int> providerID, string providerName, string mondayStart, string mondayEnd, string tuesdayStart, string tuesdayEnd, string wednesdayStart, string wednesdayEnd, string thursdayStart, string thursdayEnd, string fridayStart, string fridayEnd, Nullable<bool> active, string cAtegory)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var mondayStartParameter = mondayStart != null ?
                new ObjectParameter("MondayStart", mondayStart) :
                new ObjectParameter("MondayStart", typeof(string));
    
            var mondayEndParameter = mondayEnd != null ?
                new ObjectParameter("MondayEnd", mondayEnd) :
                new ObjectParameter("MondayEnd", typeof(string));
    
            var tuesdayStartParameter = tuesdayStart != null ?
                new ObjectParameter("TuesdayStart", tuesdayStart) :
                new ObjectParameter("TuesdayStart", typeof(string));
    
            var tuesdayEndParameter = tuesdayEnd != null ?
                new ObjectParameter("TuesdayEnd", tuesdayEnd) :
                new ObjectParameter("TuesdayEnd", typeof(string));
    
            var wednesdayStartParameter = wednesdayStart != null ?
                new ObjectParameter("WednesdayStart", wednesdayStart) :
                new ObjectParameter("WednesdayStart", typeof(string));
    
            var wednesdayEndParameter = wednesdayEnd != null ?
                new ObjectParameter("WednesdayEnd", wednesdayEnd) :
                new ObjectParameter("WednesdayEnd", typeof(string));
    
            var thursdayStartParameter = thursdayStart != null ?
                new ObjectParameter("ThursdayStart", thursdayStart) :
                new ObjectParameter("ThursdayStart", typeof(string));
    
            var thursdayEndParameter = thursdayEnd != null ?
                new ObjectParameter("ThursdayEnd", thursdayEnd) :
                new ObjectParameter("ThursdayEnd", typeof(string));
    
            var fridayStartParameter = fridayStart != null ?
                new ObjectParameter("FridayStart", fridayStart) :
                new ObjectParameter("FridayStart", typeof(string));
    
            var fridayEndParameter = fridayEnd != null ?
                new ObjectParameter("FridayEnd", fridayEnd) :
                new ObjectParameter("FridayEnd", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var cAtegoryParameter = cAtegory != null ?
                new ObjectParameter("CAtegory", cAtegory) :
                new ObjectParameter("CAtegory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Providers_Update", providerIDParameter, providerNameParameter, mondayStartParameter, mondayEndParameter, tuesdayStartParameter, tuesdayEndParameter, wednesdayStartParameter, wednesdayEndParameter, thursdayStartParameter, thursdayEndParameter, fridayStartParameter, fridayEndParameter, activeParameter, cAtegoryParameter);
        }
    
        public virtual ObjectResult<string> QB_CheckProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QB_CheckProduct", productIDParameter);
        }
    
        public virtual ObjectResult<string> QB_GetPatientListID(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QB_GetPatientListID", patientIDParameter);
        }
    
        public virtual int RecordSale(Nullable<int> saleCode, Nullable<int> apt_id)
        {
            var saleCodeParameter = saleCode.HasValue ?
                new ObjectParameter("SaleCode", saleCode) :
                new ObjectParameter("SaleCode", typeof(int));
    
            var apt_idParameter = apt_id.HasValue ?
                new ObjectParameter("apt_id", apt_id) :
                new ObjectParameter("apt_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordSale", saleCodeParameter, apt_idParameter);
        }
    
        public virtual ObjectResult<Recur_GetByApptID_Result> Recur_GetByApptID(Nullable<int> apptID)
        {
            var apptIDParameter = apptID.HasValue ?
                new ObjectParameter("ApptID", apptID) :
                new ObjectParameter("ApptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Recur_GetByApptID_Result>("Recur_GetByApptID", apptIDParameter);
        }
    
        public virtual int RemoveResult(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveResult", eventIDParameter);
        }
    
        public virtual ObjectResult<string> Results_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Results_GetById", idParameter);
        }
    
        public virtual int Results_Insert(string resultName)
        {
            var resultNameParameter = resultName != null ?
                new ObjectParameter("ResultName", resultName) :
                new ObjectParameter("ResultName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Results_Insert", resultNameParameter);
        }
    
        public virtual ObjectResult<Sat_SurveyResults_Result> Sat_SurveyResults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sat_SurveyResults_Result>("Sat_SurveyResults");
        }
    
        public virtual int Scheduler_ErrorLog_Master(string action, Nullable<int> schedulerErrorLogId, Nullable<int> patientId, Nullable<int> schedulerConfigId, string errorMessage, Nullable<bool> isShow, Nullable<System.DateTime> rcdInserted)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerErrorLogIdParameter = schedulerErrorLogId.HasValue ?
                new ObjectParameter("SchedulerErrorLogId", schedulerErrorLogId) :
                new ObjectParameter("SchedulerErrorLogId", typeof(int));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            var rcdInsertedParameter = rcdInserted.HasValue ?
                new ObjectParameter("RcdInserted", rcdInserted) :
                new ObjectParameter("RcdInserted", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_ErrorLog_Master", actionParameter, schedulerErrorLogIdParameter, patientIdParameter, schedulerConfigIdParameter, errorMessageParameter, isShowParameter, rcdInsertedParameter);
        }
    
        public virtual int Scheduler_Generate_Report(Nullable<int> patientId, string schedulerType, Nullable<System.DateTime> appStartDate, Nullable<int> daysInFuture, string providerName, string appointmentTypeList)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            var appStartDateParameter = appStartDate.HasValue ?
                new ObjectParameter("AppStartDate", appStartDate) :
                new ObjectParameter("AppStartDate", typeof(System.DateTime));
    
            var daysInFutureParameter = daysInFuture.HasValue ?
                new ObjectParameter("DaysInFuture", daysInFuture) :
                new ObjectParameter("DaysInFuture", typeof(int));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var appointmentTypeListParameter = appointmentTypeList != null ?
                new ObjectParameter("AppointmentTypeList", appointmentTypeList) :
                new ObjectParameter("AppointmentTypeList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_Generate_Report", patientIdParameter, schedulerTypeParameter, appStartDateParameter, daysInFutureParameter, providerNameParameter, appointmentTypeListParameter);
        }
    
        public virtual int Scheduler_Get_PatientList(string schedulerType, Nullable<System.DateTime> appStartDate, Nullable<int> daysInFuture)
        {
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            var appStartDateParameter = appStartDate.HasValue ?
                new ObjectParameter("AppStartDate", appStartDate) :
                new ObjectParameter("AppStartDate", typeof(System.DateTime));
    
            var daysInFutureParameter = daysInFuture.HasValue ?
                new ObjectParameter("DaysInFuture", daysInFuture) :
                new ObjectParameter("DaysInFuture", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_Get_PatientList", schedulerTypeParameter, appStartDateParameter, daysInFutureParameter);
        }
    
        public virtual int Scheduler_Get_ProviderName(Nullable<int> patientId, string schedulerType, Nullable<System.DateTime> appStartDate, Nullable<int> daysInFuture, string appointmentTypeList)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            var appStartDateParameter = appStartDate.HasValue ?
                new ObjectParameter("AppStartDate", appStartDate) :
                new ObjectParameter("AppStartDate", typeof(System.DateTime));
    
            var daysInFutureParameter = daysInFuture.HasValue ?
                new ObjectParameter("DaysInFuture", daysInFuture) :
                new ObjectParameter("DaysInFuture", typeof(int));
    
            var appointmentTypeListParameter = appointmentTypeList != null ?
                new ObjectParameter("AppointmentTypeList", appointmentTypeList) :
                new ObjectParameter("AppointmentTypeList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_Get_ProviderName", patientIdParameter, schedulerTypeParameter, appStartDateParameter, daysInFutureParameter, appointmentTypeListParameter);
        }
    
        public virtual ObjectResult<Scheduler_Panels_Master_Result> Scheduler_Panels_Master(string action)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Scheduler_Panels_Master_Result>("Scheduler_Panels_Master", actionParameter);
        }
    
        public virtual ObjectResult<Scheduler_Patient_Master_Result> Scheduler_Patient_Master(string action, Nullable<int> providerID, Nullable<int> patientId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Scheduler_Patient_Master_Result>("Scheduler_Patient_Master", actionParameter, providerIDParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<Scheduler_Provider_Master_Result> Scheduler_Provider_Master(string action, Nullable<int> providerId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Scheduler_Provider_Master_Result>("Scheduler_Provider_Master", actionParameter, providerIdParameter);
        }
    
        public virtual int SchedulerAppointmentType_GetById(Nullable<int> schedulerConfigId)
        {
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerAppointmentType_GetById", schedulerConfigIdParameter);
        }
    
        public virtual int SchedulerAppointmentType_Insert(string xmlDocument)
        {
            var xmlDocumentParameter = xmlDocument != null ?
                new ObjectParameter("XmlDocument", xmlDocument) :
                new ObjectParameter("XmlDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerAppointmentType_Insert", xmlDocumentParameter);
        }
    
        public virtual int SchedulerAppointmentType_Master(string action, Nullable<int> schedulerConfigId, string xmlDocument)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            var xmlDocumentParameter = xmlDocument != null ?
                new ObjectParameter("XmlDocument", xmlDocument) :
                new ObjectParameter("XmlDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerAppointmentType_Master", actionParameter, schedulerConfigIdParameter, xmlDocumentParameter);
        }
    
        public virtual int SchedulerConfig_GetLastInsert_Type(string schedulerType)
        {
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerConfig_GetLastInsert_Type", schedulerTypeParameter);
        }
    
        public virtual int SchedulerConfig_Insert(Nullable<int> numberofInterval, string intervalType, Nullable<System.TimeSpan> schedulerTime, Nullable<System.DateTime> startSchedulerTime, Nullable<System.DateTime> lastSchedulerTime, Nullable<int> daysIntoFuture, string saveFileLocation, Nullable<bool> createFolderProviderName, Nullable<System.DateTime> runOnceAt, Nullable<System.TimeSpan> runOnceAtTime, string schedulerType, Nullable<bool> isSchedulerRun, Nullable<bool> isActiveScheduler, Nullable<bool> isRunOnceAt)
        {
            var numberofIntervalParameter = numberofInterval.HasValue ?
                new ObjectParameter("NumberofInterval", numberofInterval) :
                new ObjectParameter("NumberofInterval", typeof(int));
    
            var intervalTypeParameter = intervalType != null ?
                new ObjectParameter("IntervalType", intervalType) :
                new ObjectParameter("IntervalType", typeof(string));
    
            var schedulerTimeParameter = schedulerTime.HasValue ?
                new ObjectParameter("SchedulerTime", schedulerTime) :
                new ObjectParameter("SchedulerTime", typeof(System.TimeSpan));
    
            var startSchedulerTimeParameter = startSchedulerTime.HasValue ?
                new ObjectParameter("StartSchedulerTime", startSchedulerTime) :
                new ObjectParameter("StartSchedulerTime", typeof(System.DateTime));
    
            var lastSchedulerTimeParameter = lastSchedulerTime.HasValue ?
                new ObjectParameter("LastSchedulerTime", lastSchedulerTime) :
                new ObjectParameter("LastSchedulerTime", typeof(System.DateTime));
    
            var daysIntoFutureParameter = daysIntoFuture.HasValue ?
                new ObjectParameter("DaysIntoFuture", daysIntoFuture) :
                new ObjectParameter("DaysIntoFuture", typeof(int));
    
            var saveFileLocationParameter = saveFileLocation != null ?
                new ObjectParameter("SaveFileLocation", saveFileLocation) :
                new ObjectParameter("SaveFileLocation", typeof(string));
    
            var createFolderProviderNameParameter = createFolderProviderName.HasValue ?
                new ObjectParameter("CreateFolderProviderName", createFolderProviderName) :
                new ObjectParameter("CreateFolderProviderName", typeof(bool));
    
            var runOnceAtParameter = runOnceAt.HasValue ?
                new ObjectParameter("RunOnceAt", runOnceAt) :
                new ObjectParameter("RunOnceAt", typeof(System.DateTime));
    
            var runOnceAtTimeParameter = runOnceAtTime.HasValue ?
                new ObjectParameter("RunOnceAtTime", runOnceAtTime) :
                new ObjectParameter("RunOnceAtTime", typeof(System.TimeSpan));
    
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            var isSchedulerRunParameter = isSchedulerRun.HasValue ?
                new ObjectParameter("IsSchedulerRun", isSchedulerRun) :
                new ObjectParameter("IsSchedulerRun", typeof(bool));
    
            var isActiveSchedulerParameter = isActiveScheduler.HasValue ?
                new ObjectParameter("IsActiveScheduler", isActiveScheduler) :
                new ObjectParameter("IsActiveScheduler", typeof(bool));
    
            var isRunOnceAtParameter = isRunOnceAt.HasValue ?
                new ObjectParameter("IsRunOnceAt", isRunOnceAt) :
                new ObjectParameter("IsRunOnceAt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerConfig_Insert", numberofIntervalParameter, intervalTypeParameter, schedulerTimeParameter, startSchedulerTimeParameter, lastSchedulerTimeParameter, daysIntoFutureParameter, saveFileLocationParameter, createFolderProviderNameParameter, runOnceAtParameter, runOnceAtTimeParameter, schedulerTypeParameter, isSchedulerRunParameter, isActiveSchedulerParameter, isRunOnceAtParameter);
        }
    
        public virtual int SchedulerConfig_LastSchedulerUpdate(Nullable<System.DateTime> lastSchedulerTime, Nullable<int> schedulerConfigId)
        {
            var lastSchedulerTimeParameter = lastSchedulerTime.HasValue ?
                new ObjectParameter("LastSchedulerTime", lastSchedulerTime) :
                new ObjectParameter("LastSchedulerTime", typeof(System.DateTime));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerConfig_LastSchedulerUpdate", lastSchedulerTimeParameter, schedulerConfigIdParameter);
        }
    
        public virtual int SchedulerConfig_Master(string action, Nullable<int> schedulerConfigId, Nullable<int> numberofInterval, string intervalType, Nullable<System.TimeSpan> schedulerTime, Nullable<System.DateTime> startSchedulerTime, Nullable<System.DateTime> lastSchedulerTime, Nullable<int> daysIntoFuture, string saveFileLocation, Nullable<bool> createFolderProviderName, Nullable<System.DateTime> runOnceAt, Nullable<System.TimeSpan> runOnceAtTime, string schedulerType, Nullable<bool> isSchedulerRun, Nullable<bool> isActiveScheduler, Nullable<bool> isRunOnceAt)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            var numberofIntervalParameter = numberofInterval.HasValue ?
                new ObjectParameter("NumberofInterval", numberofInterval) :
                new ObjectParameter("NumberofInterval", typeof(int));
    
            var intervalTypeParameter = intervalType != null ?
                new ObjectParameter("IntervalType", intervalType) :
                new ObjectParameter("IntervalType", typeof(string));
    
            var schedulerTimeParameter = schedulerTime.HasValue ?
                new ObjectParameter("SchedulerTime", schedulerTime) :
                new ObjectParameter("SchedulerTime", typeof(System.TimeSpan));
    
            var startSchedulerTimeParameter = startSchedulerTime.HasValue ?
                new ObjectParameter("StartSchedulerTime", startSchedulerTime) :
                new ObjectParameter("StartSchedulerTime", typeof(System.DateTime));
    
            var lastSchedulerTimeParameter = lastSchedulerTime.HasValue ?
                new ObjectParameter("LastSchedulerTime", lastSchedulerTime) :
                new ObjectParameter("LastSchedulerTime", typeof(System.DateTime));
    
            var daysIntoFutureParameter = daysIntoFuture.HasValue ?
                new ObjectParameter("DaysIntoFuture", daysIntoFuture) :
                new ObjectParameter("DaysIntoFuture", typeof(int));
    
            var saveFileLocationParameter = saveFileLocation != null ?
                new ObjectParameter("SaveFileLocation", saveFileLocation) :
                new ObjectParameter("SaveFileLocation", typeof(string));
    
            var createFolderProviderNameParameter = createFolderProviderName.HasValue ?
                new ObjectParameter("CreateFolderProviderName", createFolderProviderName) :
                new ObjectParameter("CreateFolderProviderName", typeof(bool));
    
            var runOnceAtParameter = runOnceAt.HasValue ?
                new ObjectParameter("RunOnceAt", runOnceAt) :
                new ObjectParameter("RunOnceAt", typeof(System.DateTime));
    
            var runOnceAtTimeParameter = runOnceAtTime.HasValue ?
                new ObjectParameter("RunOnceAtTime", runOnceAtTime) :
                new ObjectParameter("RunOnceAtTime", typeof(System.TimeSpan));
    
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            var isSchedulerRunParameter = isSchedulerRun.HasValue ?
                new ObjectParameter("IsSchedulerRun", isSchedulerRun) :
                new ObjectParameter("IsSchedulerRun", typeof(bool));
    
            var isActiveSchedulerParameter = isActiveScheduler.HasValue ?
                new ObjectParameter("IsActiveScheduler", isActiveScheduler) :
                new ObjectParameter("IsActiveScheduler", typeof(bool));
    
            var isRunOnceAtParameter = isRunOnceAt.HasValue ?
                new ObjectParameter("IsRunOnceAt", isRunOnceAt) :
                new ObjectParameter("IsRunOnceAt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerConfig_Master", actionParameter, schedulerConfigIdParameter, numberofIntervalParameter, intervalTypeParameter, schedulerTimeParameter, startSchedulerTimeParameter, lastSchedulerTimeParameter, daysIntoFutureParameter, saveFileLocationParameter, createFolderProviderNameParameter, runOnceAtParameter, runOnceAtTimeParameter, schedulerTypeParameter, isSchedulerRunParameter, isActiveSchedulerParameter, isRunOnceAtParameter);
        }
    
        public virtual int SchedulerConfig_UpdateSchedulerStatus(string schedulerType)
        {
            var schedulerTypeParameter = schedulerType != null ?
                new ObjectParameter("SchedulerType", schedulerType) :
                new ObjectParameter("SchedulerType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerConfig_UpdateSchedulerStatus", schedulerTypeParameter);
        }
    
        public virtual int SchedulerEmailErrorLog_Master(string action, Nullable<int> schedulerEmailErrorLogId, string errorMessage, Nullable<int> patientId, Nullable<int> schedulerConfigId, Nullable<System.DateTime> rcdInserted)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerEmailErrorLogIdParameter = schedulerEmailErrorLogId.HasValue ?
                new ObjectParameter("SchedulerEmailErrorLogId", schedulerEmailErrorLogId) :
                new ObjectParameter("SchedulerEmailErrorLogId", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            var rcdInsertedParameter = rcdInserted.HasValue ?
                new ObjectParameter("RcdInserted", rcdInserted) :
                new ObjectParameter("RcdInserted", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerEmailErrorLog_Master", actionParameter, schedulerEmailErrorLogIdParameter, errorMessageParameter, patientIdParameter, schedulerConfigIdParameter, rcdInsertedParameter);
        }
    
        public virtual int SchedulerOnDemandPanelLog_Master(string action, Nullable<int> schedulerOnDemandPanelLogId, Nullable<int> providerId, Nullable<int> panelId, Nullable<int> scheduletConfigId, Nullable<System.DateTime> rcdInserted, string xmlDocument)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerOnDemandPanelLogIdParameter = schedulerOnDemandPanelLogId.HasValue ?
                new ObjectParameter("SchedulerOnDemandPanelLogId", schedulerOnDemandPanelLogId) :
                new ObjectParameter("SchedulerOnDemandPanelLogId", typeof(int));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var panelIdParameter = panelId.HasValue ?
                new ObjectParameter("PanelId", panelId) :
                new ObjectParameter("PanelId", typeof(int));
    
            var scheduletConfigIdParameter = scheduletConfigId.HasValue ?
                new ObjectParameter("ScheduletConfigId", scheduletConfigId) :
                new ObjectParameter("ScheduletConfigId", typeof(int));
    
            var rcdInsertedParameter = rcdInserted.HasValue ?
                new ObjectParameter("RcdInserted", rcdInserted) :
                new ObjectParameter("RcdInserted", typeof(System.DateTime));
    
            var xmlDocumentParameter = xmlDocument != null ?
                new ObjectParameter("XmlDocument", xmlDocument) :
                new ObjectParameter("XmlDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerOnDemandPanelLog_Master", actionParameter, schedulerOnDemandPanelLogIdParameter, providerIdParameter, panelIdParameter, scheduletConfigIdParameter, rcdInsertedParameter, xmlDocumentParameter);
        }
    
        public virtual int SchedulerPatientAptLog_Master(string action, Nullable<int> schedulerPatientAptLogId, Nullable<int> schedulerAptRecId, Nullable<int> schedulerPatientReportId, Nullable<System.DateTime> rcdInserted, string xmlDocument)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerPatientAptLogIdParameter = schedulerPatientAptLogId.HasValue ?
                new ObjectParameter("SchedulerPatientAptLogId", schedulerPatientAptLogId) :
                new ObjectParameter("SchedulerPatientAptLogId", typeof(int));
    
            var schedulerAptRecIdParameter = schedulerAptRecId.HasValue ?
                new ObjectParameter("SchedulerAptRecId", schedulerAptRecId) :
                new ObjectParameter("SchedulerAptRecId", typeof(int));
    
            var schedulerPatientReportIdParameter = schedulerPatientReportId.HasValue ?
                new ObjectParameter("SchedulerPatientReportId", schedulerPatientReportId) :
                new ObjectParameter("SchedulerPatientReportId", typeof(int));
    
            var rcdInsertedParameter = rcdInserted.HasValue ?
                new ObjectParameter("RcdInserted", rcdInserted) :
                new ObjectParameter("RcdInserted", typeof(System.DateTime));
    
            var xmlDocumentParameter = xmlDocument != null ?
                new ObjectParameter("XmlDocument", xmlDocument) :
                new ObjectParameter("XmlDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerPatientAptLog_Master", actionParameter, schedulerPatientAptLogIdParameter, schedulerAptRecIdParameter, schedulerPatientReportIdParameter, rcdInsertedParameter, xmlDocumentParameter);
        }
    
        public virtual int SchedulerPatientReport_Master(string action, Nullable<int> schedulerPatientReportLogId, Nullable<int> patientId, Nullable<int> schedulerConfigId, string patientReportPassword, Nullable<System.DateTime> rcdInserted)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var schedulerPatientReportLogIdParameter = schedulerPatientReportLogId.HasValue ?
                new ObjectParameter("SchedulerPatientReportLogId", schedulerPatientReportLogId) :
                new ObjectParameter("SchedulerPatientReportLogId", typeof(int));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var schedulerConfigIdParameter = schedulerConfigId.HasValue ?
                new ObjectParameter("SchedulerConfigId", schedulerConfigId) :
                new ObjectParameter("SchedulerConfigId", typeof(int));
    
            var patientReportPasswordParameter = patientReportPassword != null ?
                new ObjectParameter("PatientReportPassword", patientReportPassword) :
                new ObjectParameter("PatientReportPassword", typeof(string));
    
            var rcdInsertedParameter = rcdInserted.HasValue ?
                new ObjectParameter("RcdInserted", rcdInserted) :
                new ObjectParameter("RcdInserted", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SchedulerPatientReport_Master", actionParameter, schedulerPatientReportLogIdParameter, patientIdParameter, schedulerConfigIdParameter, patientReportPasswordParameter, rcdInsertedParameter);
        }
    
        public virtual int ShipSched(Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShipSched", startParameter, endParameter);
        }
    
        public virtual int sp_DeleteOrderById(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteOrderById", orderIdParameter);
        }
    
        public virtual ObjectResult<sp_GetDrugListNew_Result> sp_GetDrugListNew(Nullable<bool> reviewed, string filterExpression)
        {
            var reviewedParameter = reviewed.HasValue ?
                new ObjectParameter("Reviewed", reviewed) :
                new ObjectParameter("Reviewed", typeof(bool));
    
            var filterExpressionParameter = filterExpression != null ?
                new ObjectParameter("filterExpression", filterExpression) :
                new ObjectParameter("filterExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDrugListNew_Result>("sp_GetDrugListNew", reviewedParameter, filterExpressionParameter);
        }
    
        public virtual ObjectResult<spGetAllEmployee_Result> spGetAllEmployee(Nullable<int> startIndex, Nullable<int> pageSize, string sortBy, string sort)
        {
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("startIndex", startIndex) :
                new ObjectParameter("startIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("sortBy", sortBy) :
                new ObjectParameter("sortBy", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllEmployee_Result>("spGetAllEmployee", startIndexParameter, pageSizeParameter, sortByParameter, sortParameter);
        }
    
        public virtual int ssp_AddBundleProducts(Nullable<int> bundleId, Nullable<int> productId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddBundleProducts", bundleIdParameter, productIdParameter);
        }
    
        public virtual int ssp_AddFollowUpTypeDetails(string followUp_Type_Desc, Nullable<bool> consultType_YN, Nullable<bool> followUpType_YN, Nullable<bool> ticketType_YN, Nullable<bool> appointment, Nullable<bool> viewable_YN, Nullable<bool> staffTicketType_YN, Nullable<int> departmentID)
        {
            var followUp_Type_DescParameter = followUp_Type_Desc != null ?
                new ObjectParameter("FollowUp_Type_Desc", followUp_Type_Desc) :
                new ObjectParameter("FollowUp_Type_Desc", typeof(string));
    
            var consultType_YNParameter = consultType_YN.HasValue ?
                new ObjectParameter("ConsultType_YN", consultType_YN) :
                new ObjectParameter("ConsultType_YN", typeof(bool));
    
            var followUpType_YNParameter = followUpType_YN.HasValue ?
                new ObjectParameter("FollowUpType_YN", followUpType_YN) :
                new ObjectParameter("FollowUpType_YN", typeof(bool));
    
            var ticketType_YNParameter = ticketType_YN.HasValue ?
                new ObjectParameter("TicketType_YN", ticketType_YN) :
                new ObjectParameter("TicketType_YN", typeof(bool));
    
            var appointmentParameter = appointment.HasValue ?
                new ObjectParameter("Appointment", appointment) :
                new ObjectParameter("Appointment", typeof(bool));
    
            var viewable_YNParameter = viewable_YN.HasValue ?
                new ObjectParameter("Viewable_YN", viewable_YN) :
                new ObjectParameter("Viewable_YN", typeof(bool));
    
            var staffTicketType_YNParameter = staffTicketType_YN.HasValue ?
                new ObjectParameter("StaffTicketType_YN", staffTicketType_YN) :
                new ObjectParameter("StaffTicketType_YN", typeof(bool));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddFollowUpTypeDetails", followUp_Type_DescParameter, consultType_YNParameter, followUpType_YNParameter, ticketType_YNParameter, appointmentParameter, viewable_YNParameter, staffTicketType_YNParameter, departmentIDParameter);
        }
    
        public virtual int ssp_AddMedicalNoteDetails(Nullable<int> patientID, Nullable<int> enteredBy, string messageBody, Nullable<int> apt_ID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var enteredByParameter = enteredBy.HasValue ?
                new ObjectParameter("EnteredBy", enteredBy) :
                new ObjectParameter("EnteredBy", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddMedicalNoteDetails", patientIDParameter, enteredByParameter, messageBodyParameter, apt_IDParameter);
        }
    
        public virtual int ssp_AddNewOrderItem(Nullable<int> orderId, Nullable<int> quantity, Nullable<decimal> price, string weight, Nullable<int> productId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddNewOrderItem", orderIdParameter, quantityParameter, priceParameter, weightParameter, productIdParameter);
        }
    
        public virtual int ssp_AddRecordsInProfileItem(Nullable<int> patientId, Nullable<int> productID, Nullable<int> quantity, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> nextShipDate, Nullable<System.DateTime> lastShipped, Nullable<int> dayToShip, Nullable<int> discountID)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var nextShipDateParameter = nextShipDate.HasValue ?
                new ObjectParameter("NextShipDate", nextShipDate) :
                new ObjectParameter("NextShipDate", typeof(System.DateTime));
    
            var lastShippedParameter = lastShipped.HasValue ?
                new ObjectParameter("LastShipped", lastShipped) :
                new ObjectParameter("LastShipped", typeof(System.DateTime));
    
            var dayToShipParameter = dayToShip.HasValue ?
                new ObjectParameter("DayToShip", dayToShip) :
                new ObjectParameter("DayToShip", typeof(int));
    
            var discountIDParameter = discountID.HasValue ?
                new ObjectParameter("DiscountID", discountID) :
                new ObjectParameter("DiscountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddRecordsInProfileItem", patientIdParameter, productIDParameter, quantityParameter, startDateParameter, endDateParameter, nextShipDateParameter, lastShippedParameter, dayToShipParameter, discountIDParameter);
        }
    
        public virtual int ssp_AddUpdateOneTimeSaleData(Nullable<int> oneTimeSaleID, Nullable<int> discountID, Nullable<int> patientID, Nullable<int> productID, Nullable<int> quantity, Nullable<bool> affiliate)
        {
            var oneTimeSaleIDParameter = oneTimeSaleID.HasValue ?
                new ObjectParameter("OneTimeSaleID", oneTimeSaleID) :
                new ObjectParameter("OneTimeSaleID", typeof(int));
    
            var discountIDParameter = discountID.HasValue ?
                new ObjectParameter("DiscountID", discountID) :
                new ObjectParameter("DiscountID", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var affiliateParameter = affiliate.HasValue ?
                new ObjectParameter("Affiliate", affiliate) :
                new ObjectParameter("Affiliate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddUpdateOneTimeSaleData", oneTimeSaleIDParameter, discountIDParameter, patientIDParameter, productIDParameter, quantityParameter, affiliateParameter);
        }
    
        public virtual int ssp_AddUpdateRecurringAppointment(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> apt_ID)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AddUpdateRecurringAppointment", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, apt_IDParameter);
        }
    
        public virtual ObjectResult<ssp_AdminImportTestList_Result> ssp_AdminImportTestList(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_AdminImportTestList_Result>("ssp_AdminImportTestList", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ssp_AnestheticDetail_Result> ssp_AnestheticDetail(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_AnestheticDetail_Result>("ssp_AnestheticDetail", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_Appointment_FollowUp_Result> ssp_Appointment_FollowUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Appointment_FollowUp_Result>("ssp_Appointment_FollowUp");
        }
    
        public virtual int ssp_AssignAppointments(Nullable<int> followUpID, Nullable<bool> saveChanges, Nullable<int> patientID, ObjectParameter aptIDOUT)
        {
            var followUpIDParameter = followUpID.HasValue ?
                new ObjectParameter("FollowUpID", followUpID) :
                new ObjectParameter("FollowUpID", typeof(int));
    
            var saveChangesParameter = saveChanges.HasValue ?
                new ObjectParameter("SaveChanges", saveChanges) :
                new ObjectParameter("SaveChanges", typeof(bool));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_AssignAppointments", followUpIDParameter, saveChangesParameter, patientIDParameter, aptIDOUT);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_AssignAppts(Nullable<int> patientId, Nullable<int> followUp_ID)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var followUp_IDParameter = followUp_ID.HasValue ?
                new ObjectParameter("FollowUp_ID", followUp_ID) :
                new ObjectParameter("FollowUp_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_AssignAppts", patientIdParameter, followUp_IDParameter);
        }
    
        public virtual ObjectResult<ssp_BindRangeListBox_Result> ssp_BindRangeListBox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_BindRangeListBox_Result>("ssp_BindRangeListBox");
        }
    
        public virtual ObjectResult<string> ssp_CheckExistDictation_Plan(string category, string planName, Nullable<int> planId)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var planNameParameter = planName != null ?
                new ObjectParameter("PlanName", planName) :
                new ObjectParameter("PlanName", typeof(string));
    
            var planIdParameter = planId.HasValue ?
                new ObjectParameter("PlanId", planId) :
                new ObjectParameter("PlanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ssp_CheckExistDictation_Plan", categoryParameter, planNameParameter, planIdParameter);
        }
    
        public virtual int ssp_CheckMatch(Nullable<int> patientId, Nullable<int> staffId, ObjectParameter matchOUT)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CheckMatch", patientIdParameter, staffIdParameter, matchOUT);
        }
    
        public virtual int ssp_CleanDuplicateLabNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CleanDuplicateLabNames");
        }
    
        public virtual int ssp_CloseAppointments(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID, Nullable<int> apt_ID, Nullable<bool> cboAutoShip, Nullable<System.DateTime> dateEntered)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var apt_IDParameter = apt_ID.HasValue ?
                new ObjectParameter("Apt_ID", apt_ID) :
                new ObjectParameter("Apt_ID", typeof(int));
    
            var cboAutoShipParameter = cboAutoShip.HasValue ?
                new ObjectParameter("CboAutoShip", cboAutoShip) :
                new ObjectParameter("CboAutoShip", typeof(bool));
    
            var dateEnteredParameter = dateEntered.HasValue ?
                new ObjectParameter("DateEntered", dateEntered) :
                new ObjectParameter("DateEntered", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CloseAppointments", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter, apt_IDParameter, cboAutoShipParameter, dateEnteredParameter);
        }
    
        public virtual int ssp_CloseContacttblFollowup(Nullable<int> followUpID)
        {
            var followUpIDParameter = followUpID.HasValue ?
                new ObjectParameter("FollowUpID", followUpID) :
                new ObjectParameter("FollowUpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CloseContacttblFollowup", followUpIDParameter);
        }
    
        public virtual int ssp_ClosePrescription(Nullable<int> prescriptionID)
        {
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ClosePrescription", prescriptionIDParameter);
        }
    
        public virtual int ssp_ClosePresscriptionSupp(Nullable<int> prescriptionID)
        {
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ClosePresscriptionSupp", prescriptionIDParameter);
        }
    
        public virtual int ssp_contact_tbl_AS_Insert(Nullable<int> aptType, Nullable<int> patientID, string messageBody, Nullable<int> employeeID)
        {
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_contact_tbl_AS_Insert", aptTypeParameter, patientIDParameter, messageBodyParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<ssp_CriticalTask_Result> ssp_CriticalTask(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_CriticalTask_Result>("ssp_CriticalTask", patientIdParameter);
        }
    
        public virtual int ssp_CRMDashBoardStatistic_New(Nullable<int> campaign)
        {
            var campaignParameter = campaign.HasValue ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CRMDashBoardStatistic_New", campaignParameter);
        }
    
        public virtual int ssp_CrmInterfaceMatchData(Nullable<int> prospectID, Nullable<int> chkEventTrue, Nullable<System.DateTime> eventDate, string eventName, Nullable<int> eventID, Nullable<int> chkMarketSource, string marketSourceName, Nullable<int> marketSourceID, string email, ObjectParameter outputParam)
        {
            var prospectIDParameter = prospectID.HasValue ?
                new ObjectParameter("ProspectID", prospectID) :
                new ObjectParameter("ProspectID", typeof(int));
    
            var chkEventTrueParameter = chkEventTrue.HasValue ?
                new ObjectParameter("ChkEventTrue", chkEventTrue) :
                new ObjectParameter("ChkEventTrue", typeof(int));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var chkMarketSourceParameter = chkMarketSource.HasValue ?
                new ObjectParameter("chkMarketSource", chkMarketSource) :
                new ObjectParameter("chkMarketSource", typeof(int));
    
            var marketSourceNameParameter = marketSourceName != null ?
                new ObjectParameter("MarketSourceName", marketSourceName) :
                new ObjectParameter("MarketSourceName", typeof(string));
    
            var marketSourceIDParameter = marketSourceID.HasValue ?
                new ObjectParameter("MarketSourceID", marketSourceID) :
                new ObjectParameter("MarketSourceID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CrmInterfaceMatchData", prospectIDParameter, chkEventTrueParameter, eventDateParameter, eventNameParameter, eventIDParameter, chkMarketSourceParameter, marketSourceNameParameter, marketSourceIDParameter, emailParameter, outputParam);
        }
    
        public virtual int ssp_CRMMarketSourseInsert(Nullable<int> prospectID, string marketSources, Nullable<bool> updateFlag, Nullable<int> isProspect)
        {
            var prospectIDParameter = prospectID.HasValue ?
                new ObjectParameter("ProspectID", prospectID) :
                new ObjectParameter("ProspectID", typeof(int));
    
            var marketSourcesParameter = marketSources != null ?
                new ObjectParameter("marketSources", marketSources) :
                new ObjectParameter("marketSources", typeof(string));
    
            var updateFlagParameter = updateFlag.HasValue ?
                new ObjectParameter("UpdateFlag", updateFlag) :
                new ObjectParameter("UpdateFlag", typeof(bool));
    
            var isProspectParameter = isProspect.HasValue ?
                new ObjectParameter("IsProspect", isProspect) :
                new ObjectParameter("IsProspect", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_CRMMarketSourseInsert", prospectIDParameter, marketSourcesParameter, updateFlagParameter, isProspectParameter);
        }
    
        public virtual int ssp_Delete_Prospect(Nullable<int> prospectId)
        {
            var prospectIdParameter = prospectId.HasValue ?
                new ObjectParameter("ProspectId", prospectId) :
                new ObjectParameter("ProspectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Delete_Prospect", prospectIdParameter);
        }
    
        public virtual int ssp_DeleteAll_Prospect(string prospectIds)
        {
            var prospectIdsParameter = prospectIds != null ?
                new ObjectParameter("ProspectIds", prospectIds) :
                new ObjectParameter("ProspectIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteAll_Prospect", prospectIdsParameter);
        }
    
        public virtual int ssp_DeleteAptFollowUptypes(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteAptFollowUptypes", iDParameter);
        }
    
        public virtual int ssp_DeleteAutoshipCancelReasons(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteAutoshipCancelReasons", iDParameter);
        }
    
        public virtual int ssp_DeleteDepartments(Nullable<int> departmentStaffID)
        {
            var departmentStaffIDParameter = departmentStaffID.HasValue ?
                new ObjectParameter("DepartmentStaffID", departmentStaffID) :
                new ObjectParameter("DepartmentStaffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteDepartments", departmentStaffIDParameter);
        }
    
        public virtual int ssp_DeleteDiagnosisSupplements(Nullable<int> diagnosis_ID)
        {
            var diagnosis_IDParameter = diagnosis_ID.HasValue ?
                new ObjectParameter("Diagnosis_ID", diagnosis_ID) :
                new ObjectParameter("Diagnosis_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteDiagnosisSupplements", diagnosis_IDParameter);
        }
    
        public virtual int ssp_DeleteDictationDiagnosis(Nullable<int> diagnosisID)
        {
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteDictationDiagnosis", diagnosisIDParameter);
        }
    
        public virtual ObjectResult<ssp_DeleteDictationPlan_Result> ssp_DeleteDictationPlan(Nullable<int> diagnosisID, Nullable<int> planID, Nullable<bool> isDiagnosis)
        {
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(int));
    
            var isDiagnosisParameter = isDiagnosis.HasValue ?
                new ObjectParameter("IsDiagnosis", isDiagnosis) :
                new ObjectParameter("IsDiagnosis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_DeleteDictationPlan_Result>("ssp_DeleteDictationPlan", diagnosisIDParameter, planIDParameter, isDiagnosisParameter);
        }
    
        public virtual int ssp_DeleteDrug(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteDrug", iDParameter);
        }
    
        public virtual int ssp_DeleteEventManagement(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteEventManagement", iDParameter);
        }
    
        public virtual int ssp_DeleteExcepProfileItemsByPatient(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteExcepProfileItemsByPatient", patientIdParameter);
        }
    
        public virtual int ssp_DeleteException()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteException");
        }
    
        public virtual int ssp_DeleteExceptionsByOrderID(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteExceptionsByOrderID", orderIdParameter);
        }
    
        public virtual int ssp_DeleteGroupRangeSupplement(Nullable<int> groupRangeID)
        {
            var groupRangeIDParameter = groupRangeID.HasValue ?
                new ObjectParameter("GroupRangeID", groupRangeID) :
                new ObjectParameter("GroupRangeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteGroupRangeSupplement", groupRangeIDParameter);
        }
    
        public virtual int ssp_DeleteLabManageData(Nullable<int> iD, string name)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteLabManageData", iDParameter, nameParameter);
        }
    
        public virtual int ssp_DeleteLabRequestPanels(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteLabRequestPanels", iDParameter);
        }
    
        public virtual int ssp_DeleteLabRequestTests(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteLabRequestTests", iDParameter);
        }
    
        public virtual int ssp_DeleteLabScehduleGroups(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteLabScehduleGroups", iDParameter);
        }
    
        public virtual int ssp_DeleteLabScheduleTests(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteLabScheduleTests", iDParameter);
        }
    
        public virtual int ssp_DeleteMarketingSourceManagement(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteMarketingSourceManagement", iDParameter);
        }
    
        public virtual int ssp_DeleteMarketingSourceMgmt(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteMarketingSourceMgmt", iDParameter);
        }
    
        public virtual int ssp_DeleteMatch(string qBid)
        {
            var qBidParameter = qBid != null ?
                new ObjectParameter("QBid", qBid) :
                new ObjectParameter("QBid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteMatch", qBidParameter);
        }
    
        public virtual int ssp_DeleteOneTimeSaleData(Nullable<int> oneTimeSaleID)
        {
            var oneTimeSaleIDParameter = oneTimeSaleID.HasValue ?
                new ObjectParameter("OneTimeSaleID", oneTimeSaleID) :
                new ObjectParameter("OneTimeSaleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOneTimeSaleData", oneTimeSaleIDParameter);
        }
    
        public virtual int ssp_DeleteOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrder", orderIdParameter);
        }
    
        public virtual int ssp_DeleteOrderItem(Nullable<int> orderItemId)
        {
            var orderItemIdParameter = orderItemId.HasValue ?
                new ObjectParameter("OrderItemId", orderItemId) :
                new ObjectParameter("OrderItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrderItem", orderItemIdParameter);
        }
    
        public virtual int ssp_DeleteOrderWithReason(Nullable<int> orderId, Nullable<bool> xeroDelete, string deleteReason)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var xeroDeleteParameter = xeroDelete.HasValue ?
                new ObjectParameter("XeroDelete", xeroDelete) :
                new ObjectParameter("XeroDelete", typeof(bool));
    
            var deleteReasonParameter = deleteReason != null ?
                new ObjectParameter("DeleteReason", deleteReason) :
                new ObjectParameter("DeleteReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteOrderWithReason", orderIdParameter, xeroDeleteParameter, deleteReasonParameter);
        }
    
        public virtual int ssp_DeletePrescription(Nullable<int> prescriptionID)
        {
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeletePrescription", prescriptionIDParameter);
        }
    
        public virtual int ssp_DeletePrescriptionSupp(Nullable<int> prescriptionID)
        {
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeletePrescriptionSupp", prescriptionIDParameter);
        }
    
        public virtual int ssp_DeleteProblem_Appointment(Nullable<int> patientID, Nullable<int> diagnosisID, Nullable<int> appointmentID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteProblem_Appointment", patientIDParameter, diagnosisIDParameter, appointmentIDParameter);
        }
    
        public virtual int ssp_DeleteProtocol(Nullable<int> protocolID)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("ProtocolID", protocolID) :
                new ObjectParameter("ProtocolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteProtocol", protocolIDParameter);
        }
    
        public virtual int ssp_DeleteProtocolDiagnosis(Nullable<int> protocolId, Nullable<int> diagnosisId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            var diagnosisIdParameter = diagnosisId.HasValue ?
                new ObjectParameter("DiagnosisId", diagnosisId) :
                new ObjectParameter("DiagnosisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteProtocolDiagnosis", protocolIdParameter, diagnosisIdParameter);
        }
    
        public virtual int ssp_DeleteProtocolSymptoms(Nullable<int> protocolId, Nullable<int> symptomId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            var symptomIdParameter = symptomId.HasValue ?
                new ObjectParameter("SymptomId", symptomId) :
                new ObjectParameter("SymptomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteProtocolSymptoms", protocolIdParameter, symptomIdParameter);
        }
    
        public virtual int ssp_DeleteStatusManagement(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteStatusManagement", iDParameter);
        }
    
        public virtual int ssp_DeleteStatusMgmt(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteStatusMgmt", iDParameter);
        }
    
        public virtual int ssp_DeleteSupplimentList(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteSupplimentList", iDParameter);
        }
    
        public virtual int ssp_DeleteSymptomSupplement(Nullable<int> symptomID)
        {
            var symptomIDParameter = symptomID.HasValue ?
                new ObjectParameter("SymptomID", symptomID) :
                new ObjectParameter("SymptomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteSymptomSupplement", symptomIDParameter);
        }
    
        public virtual int ssp_DeleteUpload(Nullable<int> uploadID)
        {
            var uploadIDParameter = uploadID.HasValue ?
                new ObjectParameter("UploadID", uploadID) :
                new ObjectParameter("UploadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteUpload", uploadIDParameter);
        }
    
        public virtual ObjectResult<ssp_Get_Attendent_Result> ssp_Get_Attendent(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Get_Attendent_Result>("ssp_Get_Attendent", eventIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetAdminLabReport_Result> ssp_GetAdminLabReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAdminLabReport_Result>("ssp_GetAdminLabReport");
        }
    
        public virtual ObjectResult<ssp_GetAdminResellersData_Result> ssp_GetAdminResellersData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAdminResellersData_Result>("ssp_GetAdminResellersData");
        }
    
        public virtual ObjectResult<ssp_GetAllProspect_Result> ssp_GetAllProspect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAllProspect_Result>("ssp_GetAllProspect");
        }
    
        public virtual ObjectResult<ssp_GetAnestheticFollowup_Result> ssp_GetAnestheticFollowup(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAnestheticFollowup_Result>("ssp_GetAnestheticFollowup", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetAppointments_Result> ssp_GetAppointments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAppointments_Result>("ssp_GetAppointments");
        }
    
        public virtual ObjectResult<ssp_Getapt_Followups_Type_Result> ssp_Getapt_Followups_Type(Nullable<int> staffID, Nullable<int> emp)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var empParameter = emp.HasValue ?
                new ObjectParameter("Emp", emp) :
                new ObjectParameter("Emp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Getapt_Followups_Type_Result>("ssp_Getapt_Followups_Type", staffIDParameter, empParameter);
        }
    
        public virtual ObjectResult<ssp_GetAptdatesList_Result> ssp_GetAptdatesList(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAptdatesList_Result>("ssp_GetAptdatesList", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetAptWithAptIDforDoctorConsole_Result> ssp_GetAptWithAptIDforDoctorConsole(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAptWithAptIDforDoctorConsole_Result>("ssp_GetAptWithAptIDforDoctorConsole", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetAutoshipOneTimeOrderDetails_Result> ssp_GetAutoshipOneTimeOrderDetails(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAutoshipOneTimeOrderDetails_Result>("ssp_GetAutoshipOneTimeOrderDetails", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetAutoShipPrescription_Result> ssp_GetAutoShipPrescription(Nullable<int> patientID, string prescriptionIDs)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var prescriptionIDsParameter = prescriptionIDs != null ?
                new ObjectParameter("PrescriptionIDs", prescriptionIDs) :
                new ObjectParameter("PrescriptionIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetAutoShipPrescription_Result>("ssp_GetAutoShipPrescription", patientIDParameter, prescriptionIDsParameter);
        }
    
        public virtual ObjectResult<ssp_GetBundleProducts_Result> ssp_GetBundleProducts(Nullable<int> bundleId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetBundleProducts_Result>("ssp_GetBundleProducts", bundleIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetClosedSupplementsDetails_Result> ssp_GetClosedSupplementsDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetClosedSupplementsDetails_Result>("ssp_GetClosedSupplementsDetails", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetClosePrescriptionDetails_Result> ssp_GetClosePrescriptionDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetClosePrescriptionDetails_Result>("ssp_GetClosePrescriptionDetails", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetConditionBytriggerID_Result> ssp_GetConditionBytriggerID(Nullable<int> triggerID)
        {
            var triggerIDParameter = triggerID.HasValue ?
                new ObjectParameter("triggerID", triggerID) :
                new ObjectParameter("triggerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetConditionBytriggerID_Result>("ssp_GetConditionBytriggerID", triggerIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetContactDetailsFromMultipleTable_Result> ssp_GetContactDetailsFromMultipleTable(Nullable<int> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetContactDetailsFromMultipleTable_Result>("ssp_GetContactDetailsFromMultipleTable", contactIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetContactList_Result> ssp_GetContactList(Nullable<int> followupID)
        {
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetContactList_Result>("ssp_GetContactList", followupIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetContactPrints_Result> ssp_GetContactPrints(Nullable<int> contactId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetContactPrints_Result>("ssp_GetContactPrints", contactIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetContactTblByFollowupId_Result> ssp_GetContactTblByFollowupId(Nullable<int> followupId)
        {
            var followupIdParameter = followupId.HasValue ?
                new ObjectParameter("FollowupId", followupId) :
                new ObjectParameter("FollowupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetContactTblByFollowupId_Result>("ssp_GetContactTblByFollowupId", followupIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetContactTblDetails_Result> ssp_GetContactTblDetails(Nullable<int> contactId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetContactTblDetails_Result>("ssp_GetContactTblDetails", contactIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetCreatedClosed_Result> ssp_GetCreatedClosed(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCreatedClosed_Result>("ssp_GetCreatedClosed", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_GetCreatedClosedCal_Result> ssp_GetCreatedClosedCal(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCreatedClosedCal_Result>("ssp_GetCreatedClosedCal", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_GetCriticalTask_Result> ssp_GetCriticalTask(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCriticalTask_Result>("ssp_GetCriticalTask", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetCrm_Campaign_Result> ssp_GetCrm_Campaign()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCrm_Campaign_Result>("ssp_GetCrm_Campaign");
        }
    
        public virtual ObjectResult<ssp_GetCurrentAptFordoctorConsole_Result> ssp_GetCurrentAptFordoctorConsole(Nullable<int> staffID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCurrentAptFordoctorConsole_Result>("ssp_GetCurrentAptFordoctorConsole", staffIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetDepartments_Result> ssp_GetDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDepartments_Result>("ssp_GetDepartments");
        }
    
        public virtual ObjectResult<ssp_GetDepartmentStaff_Result> ssp_GetDepartmentStaff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDepartmentStaff_Result>("ssp_GetDepartmentStaff");
        }
    
        public virtual ObjectResult<ssp_GetDepartmentStaffDetailsByDeptId_Result> ssp_GetDepartmentStaffDetailsByDeptId(Nullable<int> departmentID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDepartmentStaffDetailsByDeptId_Result>("ssp_GetDepartmentStaffDetailsByDeptId", departmentIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetDiagnosisByProtocolId_Result> ssp_GetDiagnosisByProtocolId(Nullable<int> protocolId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDiagnosisByProtocolId_Result>("ssp_GetDiagnosisByProtocolId", protocolIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetDiagnosisDetails_Result> ssp_GetDiagnosisDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDiagnosisDetails_Result>("ssp_GetDiagnosisDetails");
        }
    
        public virtual ObjectResult<ssp_GetDiagnosisList_Result> ssp_GetDiagnosisList(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDiagnosisList_Result>("ssp_GetDiagnosisList", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetDictationPlanByID_Result> ssp_GetDictationPlanByID(Nullable<int> planID)
        {
            var planIDParameter = planID.HasValue ?
                new ObjectParameter("PlanID", planID) :
                new ObjectParameter("PlanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDictationPlanByID_Result>("ssp_GetDictationPlanByID", planIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetEndMedicalList_Result> ssp_GetEndMedicalList(string clinicName)
        {
            var clinicNameParameter = clinicName != null ?
                new ObjectParameter("ClinicName", clinicName) :
                new ObjectParameter("ClinicName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetEndMedicalList_Result>("ssp_GetEndMedicalList", clinicNameParameter);
        }
    
        public virtual ObjectResult<ssp_GetFollowupTypesList_Result> ssp_GetFollowupTypesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetFollowupTypesList_Result>("ssp_GetFollowupTypesList");
        }
    
        public virtual ObjectResult<ssp_GetGroupsByPanelID_Result> ssp_GetGroupsByPanelID(Nullable<int> panelID)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("panelID", panelID) :
                new ObjectParameter("panelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetGroupsByPanelID_Result>("ssp_GetGroupsByPanelID", panelIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetGroupsTriggerByPanelID_Result> ssp_GetGroupsTriggerByPanelID(Nullable<int> panelID)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("panelID", panelID) :
                new ObjectParameter("panelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetGroupsTriggerByPanelID_Result>("ssp_GetGroupsTriggerByPanelID", panelIDParameter);
        }
    
        public virtual ObjectResult<ssp_Getintakeprescription_Result> ssp_Getintakeprescription(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Getintakeprescription_Result>("ssp_Getintakeprescription", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetInvoiceDetails_Result> ssp_GetInvoiceDetails(string ids, Nullable<int> patientId)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetInvoiceDetails_Result>("ssp_GetInvoiceDetails", idsParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabAddress_Result> ssp_GetLabAddress(Nullable<int> ordersegmentID, string labCodes)
        {
            var ordersegmentIDParameter = ordersegmentID.HasValue ?
                new ObjectParameter("OrdersegmentID", ordersegmentID) :
                new ObjectParameter("OrdersegmentID", typeof(int));
    
            var labCodesParameter = labCodes != null ?
                new ObjectParameter("LabCodes", labCodes) :
                new ObjectParameter("LabCodes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabAddress_Result>("ssp_GetLabAddress", ordersegmentIDParameter, labCodesParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabDetails_Result> ssp_GetLabDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabDetails_Result>("ssp_GetLabDetails", patientIdParameter);
        }
    
        public virtual int ssp_GetLabOldTableData(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_GetLabOldTableData", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabReminderDiagnosis_Result> ssp_GetLabReminderDiagnosis(Nullable<int> diagnosisID)
        {
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabReminderDiagnosis_Result>("ssp_GetLabReminderDiagnosis", diagnosisIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabReminderSymptoms_Result> ssp_GetLabReminderSymptoms(Nullable<int> symptomID)
        {
            var symptomIDParameter = symptomID.HasValue ?
                new ObjectParameter("SymptomID", symptomID) :
                new ObjectParameter("SymptomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabReminderSymptoms_Result>("ssp_GetLabReminderSymptoms", symptomIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabReport_PanelsGroupsTests_Result> ssp_GetLabReport_PanelsGroupsTests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabReport_PanelsGroupsTests_Result>("ssp_GetLabReport_PanelsGroupsTests");
        }
    
        public virtual ObjectResult<ssp_GetLabReportPanel_Result> ssp_GetLabReportPanel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabReportPanel_Result>("ssp_GetLabReportPanel");
        }
    
        public virtual ObjectResult<ssp_GetMailChimpCampaign_Result> ssp_GetMailChimpCampaign()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMailChimpCampaign_Result>("ssp_GetMailChimpCampaign");
        }
    
        public virtual ObjectResult<ssp_GetManagementPrograms_Result> ssp_GetManagementPrograms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetManagementPrograms_Result>("ssp_GetManagementPrograms");
        }
    
        public virtual int ssp_GetMarketSourceID(Nullable<int> prospectID, Nullable<int> tabID, ObjectParameter retunSrc)
        {
            var prospectIDParameter = prospectID.HasValue ?
                new ObjectParameter("ProspectID", prospectID) :
                new ObjectParameter("ProspectID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_GetMarketSourceID", prospectIDParameter, tabIDParameter, retunSrc);
        }
    
        public virtual ObjectResult<ssp_GetMatchLab_Result> ssp_GetMatchLab()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMatchLab_Result>("ssp_GetMatchLab");
        }
    
        public virtual ObjectResult<ssp_GetMedNotes_Result> ssp_GetMedNotes(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMedNotes_Result>("ssp_GetMedNotes", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetMedNotesDetails_Result> ssp_GetMedNotesDetails(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMedNotesDetails_Result>("ssp_GetMedNotesDetails", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetModifiedPrescribedAutoshipList_Result> ssp_GetModifiedPrescribedAutoshipList(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetModifiedPrescribedAutoshipList_Result>("ssp_GetModifiedPrescribedAutoshipList", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetMyActive_Result> ssp_GetMyActive(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMyActive_Result>("ssp_GetMyActive", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_GetMyActiveCalendar_Result> ssp_GetMyActiveCalendar(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetMyActiveCalendar_Result>("ssp_GetMyActiveCalendar", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_GetNewSupplementDetails_Result> ssp_GetNewSupplementDetails(string productId)
        {
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetNewSupplementDetails_Result>("ssp_GetNewSupplementDetails", productIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetOfficeVistitDetails_Result> ssp_GetOfficeVistitDetails(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOfficeVistitDetails_Result>("ssp_GetOfficeVistitDetails", aptIDParameter);
        }
    
        public virtual int ssp_GetOpenAptPageWise(Nullable<int> pageIndex, Nullable<int> pageSize, string clinic)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_GetOpenAptPageWise", pageIndexParameter, pageSizeParameter, clinicParameter);
        }
    
        public virtual ObjectResult<ssp_GetOrderById_Result> ssp_GetOrderById(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOrderById_Result>("ssp_GetOrderById", orderIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetOrderSuppDatePrescibed_Result> ssp_GetOrderSuppDatePrescibed(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("patientId", patientId) :
                new ObjectParameter("patientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOrderSuppDatePrescibed_Result>("ssp_GetOrderSuppDatePrescibed", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetOVUList_Result> ssp_GetOVUList(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOVUList_Result>("ssp_GetOVUList", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetOVUoldList_Result> ssp_GetOVUoldList(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetOVUoldList_Result>("ssp_GetOVUoldList", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatient_MiscDiag_Result> ssp_GetPatient_MiscDiag(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatient_MiscDiag_Result>("ssp_GetPatient_MiscDiag", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatient_ProblemSymptoms_Result> ssp_GetPatient_ProblemSymptoms(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatient_ProblemSymptoms_Result>("ssp_GetPatient_ProblemSymptoms", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientDetailById_Result> ssp_GetPatientDetailById(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientDetailById_Result>("ssp_GetPatientDetailById", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientDetails_Result> ssp_GetPatientDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientDetails_Result>("ssp_GetPatientDetails");
        }
    
        public virtual ObjectResult<string> ssp_GetPatientForSearch(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ssp_GetPatientForSearch", searchTextParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientListForAppointmentDate_Result> ssp_GetPatientListForAppointmentDate(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddata, Nullable<int> apttype, string clinic, Nullable<int> provider)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddataParameter = enddata.HasValue ?
                new ObjectParameter("enddata", enddata) :
                new ObjectParameter("enddata", typeof(System.DateTime));
    
            var apttypeParameter = apttype.HasValue ?
                new ObjectParameter("apttype", apttype) :
                new ObjectParameter("apttype", typeof(int));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("clinic", clinic) :
                new ObjectParameter("clinic", typeof(string));
    
            var providerParameter = provider.HasValue ?
                new ObjectParameter("provider", provider) :
                new ObjectParameter("provider", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientListForAppointmentDate_Result>("ssp_GetPatientListForAppointmentDate", startdateParameter, enddataParameter, apttypeParameter, clinicParameter, providerParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientManagementProgramById_Result> ssp_GetPatientManagementProgramById(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientManagementProgramById_Result>("ssp_GetPatientManagementProgramById", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientMiscDiag_Result> ssp_GetPatientMiscDiag(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientMiscDiag_Result>("ssp_GetPatientMiscDiag", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientQuickBookList_Result> ssp_GetPatientQuickBookList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientQuickBookList_Result>("ssp_GetPatientQuickBookList");
        }
    
        public virtual ObjectResult<ssp_GetPatientSymptDetails_Result> ssp_GetPatientSymptDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientSymptDetails_Result>("ssp_GetPatientSymptDetails", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientvitals_Result> ssp_GetPatientvitals(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientvitals_Result>("ssp_GetPatientvitals", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingBloodDrawsList_Result> ssp_GetPendingBloodDrawsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingBloodDrawsList_Result>("ssp_GetPendingBloodDrawsList");
        }
    
        public virtual ObjectResult<ssp_GetPendingBloodDrawsListByClinic_Result> ssp_GetPendingBloodDrawsListByClinic(string clinic)
        {
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingBloodDrawsListByClinic_Result>("ssp_GetPendingBloodDrawsListByClinic", clinicParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingConsultList_Result> ssp_GetPendingConsultList(string clinic)
        {
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingConsultList_Result>("ssp_GetPendingConsultList", clinicParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingConsults_Result> ssp_GetPendingConsults(string clinic)
        {
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingConsults_Result>("ssp_GetPendingConsults", clinicParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingFollowUpList_Result> ssp_GetPendingFollowUpList(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingFollowUpList_Result>("ssp_GetPendingFollowUpList", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingFollowUpListByPatient_Result> ssp_GetPendingFollowUpListByPatient(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingFollowUpListByPatient_Result>("ssp_GetPendingFollowUpListByPatient", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingMedRecords_Result> ssp_GetPendingMedRecords(string clinicData)
        {
            var clinicDataParameter = clinicData != null ?
                new ObjectParameter("ClinicData", clinicData) :
                new ObjectParameter("ClinicData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingMedRecords_Result>("ssp_GetPendingMedRecords", clinicDataParameter);
        }
    
        public virtual ObjectResult<ssp_GetPendingPrescriptionList_Result> ssp_GetPendingPrescriptionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingPrescriptionList_Result>("ssp_GetPendingPrescriptionList");
        }
    
        public virtual ObjectResult<ssp_GetPendingSupplementList_Result> ssp_GetPendingSupplementList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPendingSupplementList_Result>("ssp_GetPendingSupplementList");
        }
    
        public virtual ObjectResult<ssp_GetPrescription_Result> ssp_GetPrescription(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPrescription_Result>("ssp_GetPrescription", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetPrescriptionAprove_Result> ssp_GetPrescriptionAprove(Nullable<int> staffID, Nullable<int> prescriptionID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPrescriptionAprove_Result>("ssp_GetPrescriptionAprove", staffIDParameter, prescriptionIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetPrescriptionDrugsDetails_Result> ssp_GetPrescriptionDrugsDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPrescriptionDrugsDetails_Result>("ssp_GetPrescriptionDrugsDetails", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPrescriptionSuppAprove_Result> ssp_GetPrescriptionSuppAprove(Nullable<int> staffID, Nullable<int> prescriptionSuppID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var prescriptionSuppIDParameter = prescriptionSuppID.HasValue ?
                new ObjectParameter("PrescriptionSuppID", prescriptionSuppID) :
                new ObjectParameter("PrescriptionSuppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPrescriptionSuppAprove_Result>("ssp_GetPrescriptionSuppAprove", staffIDParameter, prescriptionSuppIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProblem_Appointment_Diagnosis_Result> ssp_GetProblem_Appointment_Diagnosis(Nullable<int> patientID, Nullable<int> appointmentID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProblem_Appointment_Diagnosis_Result>("ssp_GetProblem_Appointment_Diagnosis", patientIDParameter, appointmentIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProblemDiagByID_Result> ssp_GetProblemDiagByID(Nullable<int> probDiagID)
        {
            var probDiagIDParameter = probDiagID.HasValue ?
                new ObjectParameter("ProbDiagID", probDiagID) :
                new ObjectParameter("ProbDiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProblemDiagByID_Result>("ssp_GetProblemDiagByID", probDiagIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProblemDiagnosis_Result> ssp_GetProblemDiagnosis(Nullable<int> patientID, Nullable<int> appointmentID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProblemDiagnosis_Result>("ssp_GetProblemDiagnosis", patientIDParameter, appointmentIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProblemMiscDiagByID_Result> ssp_GetProblemMiscDiagByID(Nullable<int> probDiagID)
        {
            var probDiagIDParameter = probDiagID.HasValue ?
                new ObjectParameter("ProbDiagID", probDiagID) :
                new ObjectParameter("ProbDiagID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProblemMiscDiagByID_Result>("ssp_GetProblemMiscDiagByID", probDiagIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProblemSymtoms_Result> ssp_GetProblemSymtoms(Nullable<int> probSymptID)
        {
            var probSymptIDParameter = probSymptID.HasValue ?
                new ObjectParameter("ProbSymptID", probSymptID) :
                new ObjectParameter("ProbSymptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProblemSymtoms_Result>("ssp_GetProblemSymtoms", probSymptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetProductDetailsForOrderitems_Result> ssp_GetProductDetailsForOrderitems(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetProductDetailsForOrderitems_Result>("ssp_GetProductDetailsForOrderitems", productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_GetProductID(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_GetProductID", productNameParameter);
        }
    
        public virtual ObjectResult<ssp_GetQBMatch_Result> ssp_GetQBMatch(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetQBMatch_Result>("ssp_GetQBMatch", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetQBMatchByPatientId_Result> ssp_GetQBMatchByPatientId(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetQBMatchByPatientId_Result>("ssp_GetQBMatchByPatientId", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetQuickBookList_Result> ssp_GetQuickBookList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetQuickBookList_Result>("ssp_GetQuickBookList");
        }
    
        public virtual ObjectResult<ssp_GetRellersList_Result> ssp_GetRellersList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetRellersList_Result>("ssp_GetRellersList");
        }
    
        public virtual ObjectResult<ssp_GetResellerDataForDropDown_Result> ssp_GetResellerDataForDropDown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetResellerDataForDropDown_Result>("ssp_GetResellerDataForDropDown");
        }
    
        public virtual ObjectResult<ssp_GetSaleRep_Result> ssp_GetSaleRep()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSaleRep_Result>("ssp_GetSaleRep");
        }
    
        public virtual ObjectResult<ssp_GetSalesAccountCode_Result> ssp_GetSalesAccountCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSalesAccountCode_Result>("ssp_GetSalesAccountCode");
        }
    
        public virtual ObjectResult<ssp_GetScheduleBloodDraw_Result> ssp_GetScheduleBloodDraw(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetScheduleBloodDraw_Result>("ssp_GetScheduleBloodDraw", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetScheduleConsult_Result> ssp_GetScheduleConsult(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetScheduleConsult_Result>("ssp_GetScheduleConsult", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetScheduleFollowUp_Result> ssp_GetScheduleFollowUp(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetScheduleFollowUp_Result>("ssp_GetScheduleFollowUp", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetSellerContacts_Result> ssp_GetSellerContacts(Nullable<int> resellerID)
        {
            var resellerIDParameter = resellerID.HasValue ?
                new ObjectParameter("ResellerID", resellerID) :
                new ObjectParameter("ResellerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSellerContacts_Result>("ssp_GetSellerContacts", resellerIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetSpecial99Apt_Result> ssp_GetSpecial99Apt(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSpecial99Apt_Result>("ssp_GetSpecial99Apt", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_GetstaffForDepartments_Result> ssp_GetstaffForDepartments(Nullable<int> departmentID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetstaffForDepartments_Result>("ssp_GetstaffForDepartments", departmentIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetSupplementsDetails_Result> ssp_GetSupplementsDetails(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSupplementsDetails_Result>("ssp_GetSupplementsDetails", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetSymptomsByProtocolId_Result> ssp_GetSymptomsByProtocolId(Nullable<int> protocolId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSymptomsByProtocolId_Result>("ssp_GetSymptomsByProtocolId", protocolIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetTestByGroupID_Result> ssp_GetTestByGroupID(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetTestByGroupID_Result>("ssp_GetTestByGroupID", groupIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetTestLabDetails_Result> ssp_GetTestLabDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetTestLabDetails_Result>("ssp_GetTestLabDetails");
        }
    
        public virtual ObjectResult<ssp_GetTriggersByPanelID_Result> ssp_GetTriggersByPanelID(Nullable<int> panelID)
        {
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("panelID", panelID) :
                new ObjectParameter("panelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetTriggersByPanelID_Result>("ssp_GetTriggersByPanelID", panelIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetUploadDetails_Result> ssp_GetUploadDetails(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetUploadDetails_Result>("ssp_GetUploadDetails", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetUploadDocs_Result> ssp_GetUploadDocs(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetUploadDocs_Result>("ssp_GetUploadDocs", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetVindex_Result> ssp_GetVindex(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetVindex_Result>("ssp_GetVindex", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetVitalDetails_Result> ssp_GetVitalDetails(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetVitalDetails_Result>("ssp_GetVitalDetails", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetXeroaccounts_Result> ssp_GetXeroaccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetXeroaccounts_Result>("ssp_GetXeroaccounts");
        }
    
        public virtual ObjectResult<ssp_grdMyTicketsData_Result> ssp_grdMyTicketsData(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_grdMyTicketsData_Result>("ssp_grdMyTicketsData", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_grdMyTicketsDataCal_Result> ssp_grdMyTicketsDataCal(Nullable<int> staffID, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_grdMyTicketsDataCal_Result>("ssp_grdMyTicketsDataCal", staffIDParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual int ssp_Insert_Update_CancelReason(string reason, Nullable<bool> active, Nullable<int> iD)
        {
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Insert_Update_CancelReason", reasonParameter, activeParameter, iDParameter);
        }
    
        public virtual int ssp_InsertCRmContactDetails(Nullable<int> staffID, Nullable<int> followUpID, string messageBody, Nullable<int> patientID, Nullable<int> followupCategory, Nullable<int> aptID, Nullable<int> aptType, Nullable<int> cRM_InsertID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var followUpIDParameter = followUpID.HasValue ?
                new ObjectParameter("FollowUpID", followUpID) :
                new ObjectParameter("FollowUpID", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var followupCategoryParameter = followupCategory.HasValue ?
                new ObjectParameter("FollowupCategory", followupCategory) :
                new ObjectParameter("FollowupCategory", typeof(int));
    
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            var aptTypeParameter = aptType.HasValue ?
                new ObjectParameter("AptType", aptType) :
                new ObjectParameter("AptType", typeof(int));
    
            var cRM_InsertIDParameter = cRM_InsertID.HasValue ?
                new ObjectParameter("CRM_InsertID", cRM_InsertID) :
                new ObjectParameter("CRM_InsertID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertCRmContactDetails", staffIDParameter, followUpIDParameter, messageBodyParameter, patientIDParameter, followupCategoryParameter, aptIDParameter, aptTypeParameter, cRM_InsertIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_InsertDiagnosis(string diagnosisText, Nullable<bool> viewable, string iCDCode)
        {
            var diagnosisTextParameter = diagnosisText != null ?
                new ObjectParameter("DiagnosisText", diagnosisText) :
                new ObjectParameter("DiagnosisText", typeof(string));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("Viewable", viewable) :
                new ObjectParameter("Viewable", typeof(bool));
    
            var iCDCodeParameter = iCDCode != null ?
                new ObjectParameter("ICDCode", iCDCode) :
                new ObjectParameter("ICDCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_InsertDiagnosis", diagnosisTextParameter, viewableParameter, iCDCodeParameter);
        }
    
        public virtual ObjectResult<string> ssp_InsertDictation_Diagnosis(string diagnosisDescrip, string diagnosisName, string iCDCode, string keyWords, Nullable<bool> viewable_YN)
        {
            var diagnosisDescripParameter = diagnosisDescrip != null ?
                new ObjectParameter("DiagnosisDescrip", diagnosisDescrip) :
                new ObjectParameter("DiagnosisDescrip", typeof(string));
    
            var diagnosisNameParameter = diagnosisName != null ?
                new ObjectParameter("DiagnosisName", diagnosisName) :
                new ObjectParameter("DiagnosisName", typeof(string));
    
            var iCDCodeParameter = iCDCode != null ?
                new ObjectParameter("ICDCode", iCDCode) :
                new ObjectParameter("ICDCode", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var viewable_YNParameter = viewable_YN.HasValue ?
                new ObjectParameter("Viewable_YN", viewable_YN) :
                new ObjectParameter("Viewable_YN", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ssp_InsertDictation_Diagnosis", diagnosisDescripParameter, diagnosisNameParameter, iCDCodeParameter, keyWordsParameter, viewable_YNParameter);
        }
    
        public virtual ObjectResult<string> ssp_InsertDictation_Plan(string category, string planDescrip, string planName, string keyWords, Nullable<bool> viewable_YN)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var planDescripParameter = planDescrip != null ?
                new ObjectParameter("PlanDescrip", planDescrip) :
                new ObjectParameter("PlanDescrip", typeof(string));
    
            var planNameParameter = planName != null ?
                new ObjectParameter("PlanName", planName) :
                new ObjectParameter("PlanName", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var viewable_YNParameter = viewable_YN.HasValue ?
                new ObjectParameter("Viewable_YN", viewable_YN) :
                new ObjectParameter("Viewable_YN", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ssp_InsertDictation_Plan", categoryParameter, planDescripParameter, planNameParameter, keyWordsParameter, viewable_YNParameter);
        }
    
        public virtual int ssp_InsertIntakeGoals(Nullable<int> patientId, Nullable<int> masterFormID, string chkList, string lessPain, string otherSymptoms)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var masterFormIDParameter = masterFormID.HasValue ?
                new ObjectParameter("MasterFormID", masterFormID) :
                new ObjectParameter("MasterFormID", typeof(int));
    
            var chkListParameter = chkList != null ?
                new ObjectParameter("ChkList", chkList) :
                new ObjectParameter("ChkList", typeof(string));
    
            var lessPainParameter = lessPain != null ?
                new ObjectParameter("LessPain", lessPain) :
                new ObjectParameter("LessPain", typeof(string));
    
            var otherSymptomsParameter = otherSymptoms != null ?
                new ObjectParameter("OtherSymptoms", otherSymptoms) :
                new ObjectParameter("OtherSymptoms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertIntakeGoals", patientIdParameter, masterFormIDParameter, chkListParameter, lessPainParameter, otherSymptomsParameter);
        }
    
        public virtual int ssp_InsertIntakeSuppliements(Nullable<int> patientId, Nullable<int> masterFormID, string chkList, string other)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var masterFormIDParameter = masterFormID.HasValue ?
                new ObjectParameter("MasterFormID", masterFormID) :
                new ObjectParameter("MasterFormID", typeof(int));
    
            var chkListParameter = chkList != null ?
                new ObjectParameter("ChkList", chkList) :
                new ObjectParameter("ChkList", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertIntakeSuppliements", patientIdParameter, masterFormIDParameter, chkListParameter, otherParameter);
        }
    
        public virtual int ssp_InsertIntakeSymptoms(Nullable<int> patientId, Nullable<int> masterFormID, string chkList, string otherSymptoms)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var masterFormIDParameter = masterFormID.HasValue ?
                new ObjectParameter("MasterFormID", masterFormID) :
                new ObjectParameter("MasterFormID", typeof(int));
    
            var chkListParameter = chkList != null ?
                new ObjectParameter("ChkList", chkList) :
                new ObjectParameter("ChkList", typeof(string));
    
            var otherSymptomsParameter = otherSymptoms != null ?
                new ObjectParameter("OtherSymptoms", otherSymptoms) :
                new ObjectParameter("OtherSymptoms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertIntakeSymptoms", patientIdParameter, masterFormIDParameter, chkListParameter, otherSymptomsParameter);
        }
    
        public virtual int ssp_InsertLabReportCondition(string conditionName, string conditionDescrip, string sex, Nullable<int> triggerID, ObjectParameter resultOut)
        {
            var conditionNameParameter = conditionName != null ?
                new ObjectParameter("ConditionName", conditionName) :
                new ObjectParameter("ConditionName", typeof(string));
    
            var conditionDescripParameter = conditionDescrip != null ?
                new ObjectParameter("ConditionDescrip", conditionDescrip) :
                new ObjectParameter("ConditionDescrip", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var triggerIDParameter = triggerID.HasValue ?
                new ObjectParameter("TriggerID", triggerID) :
                new ObjectParameter("TriggerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertLabReportCondition", conditionNameParameter, conditionDescripParameter, sexParameter, triggerIDParameter, resultOut);
        }
    
        public virtual int ssp_InsertLabReportGroups(string groupName, string groupTitle, Nullable<int> sortOrder, Nullable<bool> showGraph, Nullable<decimal> chartBottom, Nullable<decimal> maleLongevityHigh, Nullable<decimal> maleLongevityLow, Nullable<decimal> femaleLongevityHigh, Nullable<decimal> femaleLongevityLow, Nullable<decimal> maleAcceptableHigh, Nullable<decimal> maleAcceptableLow, Nullable<decimal> femaleAcceptableHigh, Nullable<decimal> femaleAcceptableLow, string description, string maleHighTxt, string maleLowTxt, string maleNormalTxt, string femHighTxt, string femLowTxt, string femNormalTxt, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            var groupTitleParameter = groupTitle != null ?
                new ObjectParameter("groupTitle", groupTitle) :
                new ObjectParameter("groupTitle", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("sortOrder", sortOrder) :
                new ObjectParameter("sortOrder", typeof(int));
    
            var showGraphParameter = showGraph.HasValue ?
                new ObjectParameter("showGraph", showGraph) :
                new ObjectParameter("showGraph", typeof(bool));
    
            var chartBottomParameter = chartBottom.HasValue ?
                new ObjectParameter("chartBottom", chartBottom) :
                new ObjectParameter("chartBottom", typeof(decimal));
    
            var maleLongevityHighParameter = maleLongevityHigh.HasValue ?
                new ObjectParameter("maleLongevityHigh", maleLongevityHigh) :
                new ObjectParameter("maleLongevityHigh", typeof(decimal));
    
            var maleLongevityLowParameter = maleLongevityLow.HasValue ?
                new ObjectParameter("maleLongevityLow", maleLongevityLow) :
                new ObjectParameter("maleLongevityLow", typeof(decimal));
    
            var femaleLongevityHighParameter = femaleLongevityHigh.HasValue ?
                new ObjectParameter("femaleLongevityHigh", femaleLongevityHigh) :
                new ObjectParameter("femaleLongevityHigh", typeof(decimal));
    
            var femaleLongevityLowParameter = femaleLongevityLow.HasValue ?
                new ObjectParameter("femaleLongevityLow", femaleLongevityLow) :
                new ObjectParameter("femaleLongevityLow", typeof(decimal));
    
            var maleAcceptableHighParameter = maleAcceptableHigh.HasValue ?
                new ObjectParameter("maleAcceptableHigh", maleAcceptableHigh) :
                new ObjectParameter("maleAcceptableHigh", typeof(decimal));
    
            var maleAcceptableLowParameter = maleAcceptableLow.HasValue ?
                new ObjectParameter("maleAcceptableLow", maleAcceptableLow) :
                new ObjectParameter("maleAcceptableLow", typeof(decimal));
    
            var femaleAcceptableHighParameter = femaleAcceptableHigh.HasValue ?
                new ObjectParameter("femaleAcceptableHigh", femaleAcceptableHigh) :
                new ObjectParameter("femaleAcceptableHigh", typeof(decimal));
    
            var femaleAcceptableLowParameter = femaleAcceptableLow.HasValue ?
                new ObjectParameter("femaleAcceptableLow", femaleAcceptableLow) :
                new ObjectParameter("femaleAcceptableLow", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var maleHighTxtParameter = maleHighTxt != null ?
                new ObjectParameter("maleHighTxt", maleHighTxt) :
                new ObjectParameter("maleHighTxt", typeof(string));
    
            var maleLowTxtParameter = maleLowTxt != null ?
                new ObjectParameter("maleLowTxt", maleLowTxt) :
                new ObjectParameter("maleLowTxt", typeof(string));
    
            var maleNormalTxtParameter = maleNormalTxt != null ?
                new ObjectParameter("maleNormalTxt", maleNormalTxt) :
                new ObjectParameter("maleNormalTxt", typeof(string));
    
            var femHighTxtParameter = femHighTxt != null ?
                new ObjectParameter("femHighTxt", femHighTxt) :
                new ObjectParameter("femHighTxt", typeof(string));
    
            var femLowTxtParameter = femLowTxt != null ?
                new ObjectParameter("femLowTxt", femLowTxt) :
                new ObjectParameter("femLowTxt", typeof(string));
    
            var femNormalTxtParameter = femNormalTxt != null ?
                new ObjectParameter("femNormalTxt", femNormalTxt) :
                new ObjectParameter("femNormalTxt", typeof(string));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertLabReportGroups", groupNameParameter, groupTitleParameter, sortOrderParameter, showGraphParameter, chartBottomParameter, maleLongevityHighParameter, maleLongevityLowParameter, femaleLongevityHighParameter, femaleLongevityLowParameter, maleAcceptableHighParameter, maleAcceptableLowParameter, femaleAcceptableHighParameter, femaleAcceptableLowParameter, descriptionParameter, maleHighTxtParameter, maleLowTxtParameter, maleNormalTxtParameter, femHighTxtParameter, femLowTxtParameter, femNormalTxtParameter, panelIDParameter, resultOut);
        }
    
        public virtual int ssp_InsertLabReportPanels(string panelName, string panelDescrip, Nullable<int> sortOrder, ObjectParameter resultOut)
        {
            var panelNameParameter = panelName != null ?
                new ObjectParameter("PanelName", panelName) :
                new ObjectParameter("PanelName", typeof(string));
    
            var panelDescripParameter = panelDescrip != null ?
                new ObjectParameter("PanelDescrip", panelDescrip) :
                new ObjectParameter("PanelDescrip", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertLabReportPanels", panelNameParameter, panelDescripParameter, sortOrderParameter, resultOut);
        }
    
        public virtual int ssp_InsertLabReportTrigger(string triggerName, string triggerDesc, Nullable<int> pnlID, ObjectParameter resultOut)
        {
            var triggerNameParameter = triggerName != null ?
                new ObjectParameter("triggerName", triggerName) :
                new ObjectParameter("triggerName", typeof(string));
    
            var triggerDescParameter = triggerDesc != null ?
                new ObjectParameter("triggerDesc", triggerDesc) :
                new ObjectParameter("triggerDesc", typeof(string));
    
            var pnlIDParameter = pnlID.HasValue ?
                new ObjectParameter("pnlID", pnlID) :
                new ObjectParameter("pnlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertLabReportTrigger", triggerNameParameter, triggerDescParameter, pnlIDParameter, resultOut);
        }
    
        public virtual int ssp_InsertMedicalNoteDetails(Nullable<int> patientID, Nullable<int> enteredBy, string messageBody)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var enteredByParameter = enteredBy.HasValue ?
                new ObjectParameter("EnteredBy", enteredBy) :
                new ObjectParameter("EnteredBy", typeof(int));
    
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertMedicalNoteDetails", patientIDParameter, enteredByParameter, messageBodyParameter);
        }
    
        public virtual int ssp_InsertPrescriptionDrugs(string drugName, Nullable<bool> chkThirdPartyAdd, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> patientID, string notes, Nullable<int> staffID, string dose, string refills, string dispense, Nullable<int> aptID, ObjectParameter result)
        {
            var drugNameParameter = drugName != null ?
                new ObjectParameter("DrugName", drugName) :
                new ObjectParameter("DrugName", typeof(string));
    
            var chkThirdPartyAddParameter = chkThirdPartyAdd.HasValue ?
                new ObjectParameter("chkThirdPartyAdd", chkThirdPartyAdd) :
                new ObjectParameter("chkThirdPartyAdd", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var doseParameter = dose != null ?
                new ObjectParameter("Dose", dose) :
                new ObjectParameter("Dose", typeof(string));
    
            var refillsParameter = refills != null ?
                new ObjectParameter("Refills", refills) :
                new ObjectParameter("Refills", typeof(string));
    
            var dispenseParameter = dispense != null ?
                new ObjectParameter("Dispense", dispense) :
                new ObjectParameter("Dispense", typeof(string));
    
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertPrescriptionDrugs", drugNameParameter, chkThirdPartyAddParameter, startDateParameter, endDateParameter, patientIDParameter, notesParameter, staffIDParameter, doseParameter, refillsParameter, dispenseParameter, aptIDParameter, result);
        }
    
        public virtual int ssp_InsertPrescriptionRefill(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> patientID, string notes, Nullable<int> staffID, string dose, string refills, string dispense, Nullable<int> aptID, Nullable<int> drugID, Nullable<int> prescriptionID, ObjectParameter result)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var doseParameter = dose != null ?
                new ObjectParameter("Dose", dose) :
                new ObjectParameter("Dose", typeof(string));
    
            var refillsParameter = refills != null ?
                new ObjectParameter("Refills", refills) :
                new ObjectParameter("Refills", typeof(string));
    
            var dispenseParameter = dispense != null ?
                new ObjectParameter("Dispense", dispense) :
                new ObjectParameter("Dispense", typeof(string));
    
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            var drugIDParameter = drugID.HasValue ?
                new ObjectParameter("DrugID", drugID) :
                new ObjectParameter("DrugID", typeof(int));
    
            var prescriptionIDParameter = prescriptionID.HasValue ?
                new ObjectParameter("PrescriptionID", prescriptionID) :
                new ObjectParameter("PrescriptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertPrescriptionRefill", startDateParameter, endDateParameter, patientIDParameter, notesParameter, staffIDParameter, doseParameter, refillsParameter, dispenseParameter, aptIDParameter, drugIDParameter, prescriptionIDParameter, result);
        }
    
        public virtual int ssp_InsertPrescriptionSupp(string drugName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> patientID, string notes, Nullable<int> staffID, string dose, string refills, string dispense, Nullable<int> aptID, ObjectParameter result)
        {
            var drugNameParameter = drugName != null ?
                new ObjectParameter("DrugName", drugName) :
                new ObjectParameter("DrugName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var doseParameter = dose != null ?
                new ObjectParameter("Dose", dose) :
                new ObjectParameter("Dose", typeof(string));
    
            var refillsParameter = refills != null ?
                new ObjectParameter("Refills", refills) :
                new ObjectParameter("Refills", typeof(string));
    
            var dispenseParameter = dispense != null ?
                new ObjectParameter("Dispense", dispense) :
                new ObjectParameter("Dispense", typeof(string));
    
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertPrescriptionSupp", drugNameParameter, startDateParameter, endDateParameter, patientIDParameter, notesParameter, staffIDParameter, doseParameter, refillsParameter, dispenseParameter, aptIDParameter, result);
        }
    
        public virtual int ssp_InsertPrescriptionSuppRefill(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> patientID, string notes, Nullable<int> staffID, string dose, string refills, string dispense, Nullable<int> aptID, Nullable<int> productID, Nullable<int> prescriptionSuppID, ObjectParameter result)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var doseParameter = dose != null ?
                new ObjectParameter("Dose", dose) :
                new ObjectParameter("Dose", typeof(string));
    
            var refillsParameter = refills != null ?
                new ObjectParameter("Refills", refills) :
                new ObjectParameter("Refills", typeof(string));
    
            var dispenseParameter = dispense != null ?
                new ObjectParameter("Dispense", dispense) :
                new ObjectParameter("Dispense", typeof(string));
    
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var prescriptionSuppIDParameter = prescriptionSuppID.HasValue ?
                new ObjectParameter("PrescriptionSuppID", prescriptionSuppID) :
                new ObjectParameter("PrescriptionSuppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertPrescriptionSuppRefill", startDateParameter, endDateParameter, patientIDParameter, notesParameter, staffIDParameter, doseParameter, refillsParameter, dispenseParameter, aptIDParameter, productIDParameter, prescriptionSuppIDParameter, result);
        }
    
        public virtual int ssp_InsertProblem_Appointment(Nullable<int> patientID, Nullable<int> diagnosisID, Nullable<int> appointmentID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertProblem_Appointment", patientIDParameter, diagnosisIDParameter, appointmentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_InsertProtocolDiagnosis(Nullable<int> protocolId, Nullable<int> diagnosisId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            var diagnosisIdParameter = diagnosisId.HasValue ?
                new ObjectParameter("DiagnosisId", diagnosisId) :
                new ObjectParameter("DiagnosisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_InsertProtocolDiagnosis", protocolIdParameter, diagnosisIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_InsertProtocolSymptom(Nullable<int> protocolId, Nullable<int> symptomId)
        {
            var protocolIdParameter = protocolId.HasValue ?
                new ObjectParameter("ProtocolId", protocolId) :
                new ObjectParameter("ProtocolId", typeof(int));
    
            var symptomIdParameter = symptomId.HasValue ?
                new ObjectParameter("SymptomId", symptomId) :
                new ObjectParameter("SymptomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_InsertProtocolSymptom", protocolIdParameter, symptomIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> fn_InsertStaffLogins(string userName, string password, string employeeName, string access_level, Nullable<bool> canWritePrescript, Nullable<bool> hAREp)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var access_levelParameter = access_level != null ?
                new ObjectParameter("access_level", access_level) :
                new ObjectParameter("access_level", typeof(string));
    
            var canWritePrescriptParameter = canWritePrescript.HasValue ?
                new ObjectParameter("CanWritePrescript", canWritePrescript) :
                new ObjectParameter("CanWritePrescript", typeof(bool));
    
            var hAREpParameter = hAREp.HasValue ?
                new ObjectParameter("HAREp", hAREp) :
                new ObjectParameter("HAREp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("fn_InsertStaffLogins", userNameParameter, passwordParameter, employeeNameParameter, access_levelParameter, canWritePrescriptParameter, hAREpParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_InsertSymptom(string symptomText)
        {
            var symptomTextParameter = symptomText != null ?
                new ObjectParameter("SymptomText", symptomText) :
                new ObjectParameter("SymptomText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_InsertSymptom", symptomTextParameter);
        }
    
        public virtual int ssp_InsertUpdateTicketClose(Nullable<int> activeId, Nullable<int> assignId, Nullable<int> rdoSeverityId, string rdoSeverityText, string rdoDeptValue, string userName, Nullable<int> staffId, Nullable<bool> cboClose, string content, string assignText)
        {
            var activeIdParameter = activeId.HasValue ?
                new ObjectParameter("ActiveId", activeId) :
                new ObjectParameter("ActiveId", typeof(int));
    
            var assignIdParameter = assignId.HasValue ?
                new ObjectParameter("AssignId", assignId) :
                new ObjectParameter("AssignId", typeof(int));
    
            var rdoSeverityIdParameter = rdoSeverityId.HasValue ?
                new ObjectParameter("rdoSeverityId", rdoSeverityId) :
                new ObjectParameter("rdoSeverityId", typeof(int));
    
            var rdoSeverityTextParameter = rdoSeverityText != null ?
                new ObjectParameter("rdoSeverityText", rdoSeverityText) :
                new ObjectParameter("rdoSeverityText", typeof(string));
    
            var rdoDeptValueParameter = rdoDeptValue != null ?
                new ObjectParameter("rdoDeptValue", rdoDeptValue) :
                new ObjectParameter("rdoDeptValue", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            var cboCloseParameter = cboClose.HasValue ?
                new ObjectParameter("cboClose", cboClose) :
                new ObjectParameter("cboClose", typeof(bool));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var assignTextParameter = assignText != null ?
                new ObjectParameter("AssignText", assignText) :
                new ObjectParameter("AssignText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertUpdateTicketClose", activeIdParameter, assignIdParameter, rdoSeverityIdParameter, rdoSeverityTextParameter, rdoDeptValueParameter, userNameParameter, staffIdParameter, cboCloseParameter, contentParameter, assignTextParameter);
        }
    
        public virtual int ssp_InsertXeroAccounts(string code, string name)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertXeroAccounts", codeParameter, nameParameter);
        }
    
        public virtual int ssp_LabReportMainData(Nullable<int> patientID, Nullable<int> panelID, Nullable<bool> showHistory)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            var showHistoryParameter = showHistory.HasValue ?
                new ObjectParameter("ShowHistory", showHistory) :
                new ObjectParameter("ShowHistory", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_LabReportMainData", patientIDParameter, panelIDParameter, showHistoryParameter);
        }
    
        public virtual int ssp_LabReportTesthistory(Nullable<int> patientID, Nullable<int> groupID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_LabReportTesthistory", patientIDParameter, groupIDParameter);
        }
    
        public virtual int ssp_LabReportTesthistoryfinal(Nullable<int> patientID, Nullable<int> groupID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_LabReportTesthistoryfinal", patientIDParameter, groupIDParameter);
        }
    
        public virtual int ssp_LabSchedule_GetSchedule(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_LabSchedule_GetSchedule", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_lstApt_Goals_Result> ssp_lstApt_Goals(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_lstApt_Goals_Result>("ssp_lstApt_Goals", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_lstApt_Symptoms_Result> ssp_lstApt_Symptoms(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_lstApt_Symptoms_Result>("ssp_lstApt_Symptoms", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_lstGoals_Result> ssp_lstGoals(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_lstGoals_Result>("ssp_lstGoals", aptIDParameter);
        }
    
        public virtual ObjectResult<ssp_lstSymptoms_Result> ssp_lstSymptoms(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_lstSymptoms_Result>("ssp_lstSymptoms", aptIDParameter);
        }
    
        public virtual int ssp_Orders_UpdateStatus(Nullable<int> orderid, string status)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Orders_UpdateStatus", orderidParameter, statusParameter);
        }
    
        public virtual int ssp_Orders_UpdateStatusToggle(Nullable<int> orderid, string status)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Orders_UpdateStatusToggle", orderidParameter, statusParameter);
        }
    
        public virtual int ssp_Panels(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Panels", patientIDParameter);
        }
    
        public virtual int ssp_Panels_BySelectPatients(string patientID)
        {
            var patientIDParameter = patientID != null ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Panels_BySelectPatients", patientIDParameter);
        }
    
        public virtual int ssp_PanelsNew(Nullable<int> patientID, string appointmentTypeId)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var appointmentTypeIdParameter = appointmentTypeId != null ?
                new ObjectParameter("AppointmentTypeId", appointmentTypeId) :
                new ObjectParameter("AppointmentTypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_PanelsNew", patientIDParameter, appointmentTypeIdParameter);
        }
    
        public virtual int ssp_Patient_Apt_Gap(string searchType, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Patient_Apt_Gap", searchTypeParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_PatientInfoByPatientId_Result> ssp_PatientInfoByPatientId(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PatientInfoByPatientId_Result>("ssp_PatientInfoByPatientId", patientIDParameter);
        }
    
        public virtual int ssp_Patients_Sat_SurveyResults(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Patients_Sat_SurveyResults", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int ssp_PatientswithContactEntriesToday(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_PatientswithContactEntriesToday", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_PatientTicketByID_Result> ssp_PatientTicketByID(Nullable<int> ticketId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PatientTicketByID_Result>("ssp_PatientTicketByID", ticketIdParameter);
        }
    
        public virtual ObjectResult<ssp_PopulateDiagList_Result> ssp_PopulateDiagList(Nullable<int> diagnosisID)
        {
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PopulateDiagList_Result>("ssp_PopulateDiagList", diagnosisIDParameter);
        }
    
        public virtual ObjectResult<ssp_PopulateLabsList_Result> ssp_PopulateLabsList(Nullable<int> groupRangeID)
        {
            var groupRangeIDParameter = groupRangeID.HasValue ?
                new ObjectParameter("GroupRangeID", groupRangeID) :
                new ObjectParameter("GroupRangeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PopulateLabsList_Result>("ssp_PopulateLabsList", groupRangeIDParameter);
        }
    
        public virtual ObjectResult<ssp_PopulateSymptomList_Result> ssp_PopulateSymptomList(Nullable<int> symptomID)
        {
            var symptomIDParameter = symptomID.HasValue ?
                new ObjectParameter("SymptomID", symptomID) :
                new ObjectParameter("SymptomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PopulateSymptomList_Result>("ssp_PopulateSymptomList", symptomIDParameter);
        }
    
        public virtual ObjectResult<ssp_PrescriptionHistory_Result> ssp_PrescriptionHistory(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PrescriptionHistory_Result>("ssp_PrescriptionHistory", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_PreviewRecurringAppointment_Result> ssp_PreviewRecurringAppointment(Nullable<int> providerID, Nullable<int> appointmentTypeID, Nullable<System.DateTime> apptStart, Nullable<System.DateTime> apptEND, string apptStartH, string apptEndH, string apptStartM, string apptEndM)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var appointmentTypeIDParameter = appointmentTypeID.HasValue ?
                new ObjectParameter("AppointmentTypeID", appointmentTypeID) :
                new ObjectParameter("AppointmentTypeID", typeof(int));
    
            var apptStartParameter = apptStart.HasValue ?
                new ObjectParameter("ApptStart", apptStart) :
                new ObjectParameter("ApptStart", typeof(System.DateTime));
    
            var apptENDParameter = apptEND.HasValue ?
                new ObjectParameter("ApptEND", apptEND) :
                new ObjectParameter("ApptEND", typeof(System.DateTime));
    
            var apptStartHParameter = apptStartH != null ?
                new ObjectParameter("ApptStartH", apptStartH) :
                new ObjectParameter("ApptStartH", typeof(string));
    
            var apptEndHParameter = apptEndH != null ?
                new ObjectParameter("ApptEndH", apptEndH) :
                new ObjectParameter("ApptEndH", typeof(string));
    
            var apptStartMParameter = apptStartM != null ?
                new ObjectParameter("ApptStartM", apptStartM) :
                new ObjectParameter("ApptStartM", typeof(string));
    
            var apptEndMParameter = apptEndM != null ?
                new ObjectParameter("ApptEndM", apptEndM) :
                new ObjectParameter("ApptEndM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PreviewRecurringAppointment_Result>("ssp_PreviewRecurringAppointment", providerIDParameter, appointmentTypeIDParameter, apptStartParameter, apptENDParameter, apptStartHParameter, apptEndHParameter, apptStartMParameter, apptEndMParameter);
        }
    
        public virtual int ssp_productDemand(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_productDemand", dateParameter);
        }
    
        public virtual ObjectResult<ssp_ProfileItems_GetTree_Result> ssp_ProfileItems_GetTree(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ProfileItems_GetTree_Result>("ssp_ProfileItems_GetTree", patientIDParameter);
        }
    
        public virtual int ssp_RecordAttendee(Nullable<int> eventId, Nullable<int> prospectId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var prospectIdParameter = prospectId.HasValue ?
                new ObjectParameter("ProspectId", prospectId) :
                new ObjectParameter("ProspectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_RecordAttendee", eventIdParameter, prospectIdParameter);
        }
    
        public virtual int ssp_Report_EndMedicalPatients(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Report_EndMedicalPatients", startDateParameter);
        }
    
        public virtual ObjectResult<ssp_Report_GetOVUForm_Result> ssp_Report_GetOVUForm(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Report_GetOVUForm_Result>("ssp_Report_GetOVUForm", patientIDParameter);
        }
    
        public virtual int ssp_Report_GetOVUGoalsOther(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Report_GetOVUGoalsOther", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_Report_GetOVUSymptomForm_Result> ssp_Report_GetOVUSymptomForm(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Report_GetOVUSymptomForm_Result>("ssp_Report_GetOVUSymptomForm", patientIDParameter);
        }
    
        public virtual int ssp_Report_GetOVUSymptomOtherForm(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Report_GetOVUSymptomOtherForm", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_Report_OpenInvoice_Result> ssp_Report_OpenInvoice(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Report_OpenInvoice_Result>("ssp_Report_OpenInvoice", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_Report_PatientAll_Result> ssp_Report_PatientAll(Nullable<System.DateTime> start, Nullable<int> clinic)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.DateTime));
    
            var clinicParameter = clinic.HasValue ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Report_PatientAll_Result>("ssp_Report_PatientAll", startParameter, clinicParameter);
        }
    
        public virtual ObjectResult<ssp_Report_PatientInfo_Result> ssp_Report_PatientInfo(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_Report_PatientInfo_Result>("ssp_Report_PatientInfo", patientIDParameter);
        }
    
        public virtual int ssp_Report_PrescriptionPharma(string prescriptionIDs, Nullable<int> patientID)
        {
            var prescriptionIDsParameter = prescriptionIDs != null ?
                new ObjectParameter("PrescriptionIDs", prescriptionIDs) :
                new ObjectParameter("PrescriptionIDs", typeof(string));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Report_PrescriptionPharma", prescriptionIDsParameter, patientIDParameter);
        }
    
        public virtual int ssp_Report_PrescriptionSupp(string prescriptionIDs, Nullable<int> patientID)
        {
            var prescriptionIDsParameter = prescriptionIDs != null ?
                new ObjectParameter("PrescriptionIDs", prescriptionIDs) :
                new ObjectParameter("PrescriptionIDs", typeof(string));
    
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_Report_PrescriptionSupp", prescriptionIDsParameter, patientIDParameter);
        }
    
        public virtual int ssp_ReportClosedRate(string provider, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ReportClosedRate", providerParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ssp_ReportDailyShipment_Result> ssp_ReportDailyShipment(Nullable<System.DateTime> shipDate)
        {
            var shipDateParameter = shipDate.HasValue ?
                new ObjectParameter("ShipDate", shipDate) :
                new ObjectParameter("ShipDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportDailyShipment_Result>("ssp_ReportDailyShipment", shipDateParameter);
        }
    
        public virtual int ssp_ReportGetOneWeek(Nullable<System.DateTime> weekstart, Nullable<System.DateTime> weekend, Nullable<int> providerID, Nullable<int> weekNumber)
        {
            var weekstartParameter = weekstart.HasValue ?
                new ObjectParameter("weekstart", weekstart) :
                new ObjectParameter("weekstart", typeof(System.DateTime));
    
            var weekendParameter = weekend.HasValue ?
                new ObjectParameter("weekend", weekend) :
                new ObjectParameter("weekend", typeof(System.DateTime));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var weekNumberParameter = weekNumber.HasValue ?
                new ObjectParameter("weekNumber", weekNumber) :
                new ObjectParameter("weekNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ReportGetOneWeek", weekstartParameter, weekendParameter, providerIDParameter, weekNumberParameter);
        }
    
        public virtual ObjectResult<ssp_ReportGraphCRmProspectPatient_Result> ssp_ReportGraphCRmProspectPatient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportGraphCRmProspectPatient_Result>("ssp_ReportGraphCRmProspectPatient");
        }
    
        public virtual ObjectResult<ssp_ReportProspect_Result> ssp_ReportProspect(Nullable<int> rptID)
        {
            var rptIDParameter = rptID.HasValue ?
                new ObjectParameter("rptID", rptID) :
                new ObjectParameter("rptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportProspect_Result>("ssp_ReportProspect", rptIDParameter);
        }
    
        public virtual ObjectResult<ssp_ReportProspectFollowup_Result> ssp_ReportProspectFollowup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportProspectFollowup_Result>("ssp_ReportProspectFollowup");
        }
    
        public virtual int ssp_ReportProviderUtil(Nullable<System.DateTime> startDate, string provider)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ReportProviderUtil", startDateParameter, providerParameter);
        }
    
        public virtual int ssp_ReportProviderWeek(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_ReportProviderWeek", startDateParameter);
        }
    
        public virtual int ssp_SaveMailChimpCampaign(string mailChimpCampaignId, string mailChimpCampaignName, string mailChimpCampaignListId)
        {
            var mailChimpCampaignIdParameter = mailChimpCampaignId != null ?
                new ObjectParameter("MailChimpCampaignId", mailChimpCampaignId) :
                new ObjectParameter("MailChimpCampaignId", typeof(string));
    
            var mailChimpCampaignNameParameter = mailChimpCampaignName != null ?
                new ObjectParameter("MailChimpCampaignName", mailChimpCampaignName) :
                new ObjectParameter("MailChimpCampaignName", typeof(string));
    
            var mailChimpCampaignListIdParameter = mailChimpCampaignListId != null ?
                new ObjectParameter("MailChimpCampaignListId", mailChimpCampaignListId) :
                new ObjectParameter("MailChimpCampaignListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveMailChimpCampaign", mailChimpCampaignIdParameter, mailChimpCampaignNameParameter, mailChimpCampaignListIdParameter);
        }
    
        public virtual int ssp_SavePatientManagementPrograms(Nullable<int> patientId, Nullable<int> programId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var programIdParameter = programId.HasValue ?
                new ObjectParameter("ProgramId", programId) :
                new ObjectParameter("ProgramId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SavePatientManagementPrograms", patientIdParameter, programIdParameter);
        }
    
        public virtual int ssp_SaveSalesAccountCode(Nullable<int> salesAccountCode)
        {
            var salesAccountCodeParameter = salesAccountCode.HasValue ?
                new ObjectParameter("SalesAccountCode", salesAccountCode) :
                new ObjectParameter("SalesAccountCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveSalesAccountCode", salesAccountCodeParameter);
        }
    
        public virtual ObjectResult<ssp_SearchPatientDetails_Result> ssp_SearchPatientDetails(string firstName, string lastName, string middleName, string phone)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_SearchPatientDetails_Result>("ssp_SearchPatientDetails", firstNameParameter, lastNameParameter, middleNameParameter, phoneParameter);
        }
    
        public virtual int ssp_SetPanelIdForExternalList(Nullable<int> panelId, string externalListIds)
        {
            var panelIdParameter = panelId.HasValue ?
                new ObjectParameter("PanelId", panelId) :
                new ObjectParameter("PanelId", typeof(int));
    
            var externalListIdsParameter = externalListIds != null ?
                new ObjectParameter("ExternalListIds", externalListIds) :
                new ObjectParameter("ExternalListIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SetPanelIdForExternalList", panelIdParameter, externalListIdsParameter);
        }
    
        public virtual ObjectResult<ssp_ShortReportPage_Result> ssp_ShortReportPage(Nullable<int> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ShortReportPage_Result>("ssp_ShortReportPage", messageIdParameter);
        }
    
        public virtual ObjectResult<ssp_ShowGoalDetails_Result> ssp_ShowGoalDetails(Nullable<int> aptId)
        {
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ShowGoalDetails_Result>("ssp_ShowGoalDetails", aptIdParameter);
        }
    
        public virtual ObjectResult<ssp_ShowQBInvoiceDetails_Result> ssp_ShowQBInvoiceDetails(string ids, Nullable<int> patientId)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(string));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ShowQBInvoiceDetails_Result>("ssp_ShowQBInvoiceDetails", idsParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_ShowSymtomDetails_Result> ssp_ShowSymtomDetails(Nullable<int> aptId)
        {
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ShowSymtomDetails_Result>("ssp_ShowSymtomDetails", aptIdParameter);
        }
    
        public virtual ObjectResult<ssp_SupplementHistory_Result> ssp_SupplementHistory(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_SupplementHistory_Result>("ssp_SupplementHistory", patientIDParameter);
        }
    
        public virtual int ssp_UpdateAffliliateInProfileItems(Nullable<int> profileItemId, Nullable<bool> affliliate)
        {
            var profileItemIdParameter = profileItemId.HasValue ?
                new ObjectParameter("ProfileItemId", profileItemId) :
                new ObjectParameter("ProfileItemId", typeof(int));
    
            var affliliateParameter = affliliate.HasValue ?
                new ObjectParameter("Affliliate", affliliate) :
                new ObjectParameter("Affliliate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateAffliliateInProfileItems", profileItemIdParameter, affliliateParameter);
        }
    
        public virtual int ssp_UpdateCalAppointments(Nullable<int> patientID, Nullable<int> providerId, string lMCPhys, string patientApt, Nullable<int> apptTypeID, ObjectParameter providerIdOUT)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var lMCPhysParameter = lMCPhys != null ?
                new ObjectParameter("LMCPhys", lMCPhys) :
                new ObjectParameter("LMCPhys", typeof(string));
    
            var patientAptParameter = patientApt != null ?
                new ObjectParameter("PatientApt", patientApt) :
                new ObjectParameter("PatientApt", typeof(string));
    
            var apptTypeIDParameter = apptTypeID.HasValue ?
                new ObjectParameter("ApptTypeID", apptTypeID) :
                new ObjectParameter("ApptTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateCalAppointments", patientIDParameter, providerIdParameter, lMCPhysParameter, patientAptParameter, apptTypeIDParameter, providerIdOUT);
        }
    
        public virtual int ssp_UpdateConditions(Nullable<int> iD, string conditionName, string conditionDesc, string sex, Nullable<int> triggerID, ObjectParameter resultOut)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var conditionNameParameter = conditionName != null ?
                new ObjectParameter("conditionName", conditionName) :
                new ObjectParameter("conditionName", typeof(string));
    
            var conditionDescParameter = conditionDesc != null ?
                new ObjectParameter("conditionDesc", conditionDesc) :
                new ObjectParameter("conditionDesc", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var triggerIDParameter = triggerID.HasValue ?
                new ObjectParameter("triggerID", triggerID) :
                new ObjectParameter("triggerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateConditions", iDParameter, conditionNameParameter, conditionDescParameter, sexParameter, triggerIDParameter, resultOut);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_UpdateDiagnosis(string diagnosisText, Nullable<bool> viewable, string iCDCode, Nullable<int> diagnosisId)
        {
            var diagnosisTextParameter = diagnosisText != null ?
                new ObjectParameter("DiagnosisText", diagnosisText) :
                new ObjectParameter("DiagnosisText", typeof(string));
    
            var viewableParameter = viewable.HasValue ?
                new ObjectParameter("Viewable", viewable) :
                new ObjectParameter("Viewable", typeof(bool));
    
            var iCDCodeParameter = iCDCode != null ?
                new ObjectParameter("ICDCode", iCDCode) :
                new ObjectParameter("ICDCode", typeof(string));
    
            var diagnosisIdParameter = diagnosisId.HasValue ?
                new ObjectParameter("DiagnosisId", diagnosisId) :
                new ObjectParameter("DiagnosisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_UpdateDiagnosis", diagnosisTextParameter, viewableParameter, iCDCodeParameter, diagnosisIdParameter);
        }
    
        public virtual int ssp_UpdateFollowUpTypeDetails(string followUp_Type_Desc, Nullable<bool> viewable_YN, Nullable<bool> consultType_YN, Nullable<bool> followUpType_YN, Nullable<bool> ticketType_YN, Nullable<bool> staffTicketType_YN, Nullable<bool> appointment, Nullable<int> departmentID, Nullable<int> followUp_Type_ID)
        {
            var followUp_Type_DescParameter = followUp_Type_Desc != null ?
                new ObjectParameter("FollowUp_Type_Desc", followUp_Type_Desc) :
                new ObjectParameter("FollowUp_Type_Desc", typeof(string));
    
            var viewable_YNParameter = viewable_YN.HasValue ?
                new ObjectParameter("Viewable_YN", viewable_YN) :
                new ObjectParameter("Viewable_YN", typeof(bool));
    
            var consultType_YNParameter = consultType_YN.HasValue ?
                new ObjectParameter("ConsultType_YN", consultType_YN) :
                new ObjectParameter("ConsultType_YN", typeof(bool));
    
            var followUpType_YNParameter = followUpType_YN.HasValue ?
                new ObjectParameter("FollowUpType_YN", followUpType_YN) :
                new ObjectParameter("FollowUpType_YN", typeof(bool));
    
            var ticketType_YNParameter = ticketType_YN.HasValue ?
                new ObjectParameter("TicketType_YN", ticketType_YN) :
                new ObjectParameter("TicketType_YN", typeof(bool));
    
            var staffTicketType_YNParameter = staffTicketType_YN.HasValue ?
                new ObjectParameter("StaffTicketType_YN", staffTicketType_YN) :
                new ObjectParameter("StaffTicketType_YN", typeof(bool));
    
            var appointmentParameter = appointment.HasValue ?
                new ObjectParameter("Appointment", appointment) :
                new ObjectParameter("Appointment", typeof(bool));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var followUp_Type_IDParameter = followUp_Type_ID.HasValue ?
                new ObjectParameter("FollowUp_Type_ID", followUp_Type_ID) :
                new ObjectParameter("FollowUp_Type_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateFollowUpTypeDetails", followUp_Type_DescParameter, viewable_YNParameter, consultType_YNParameter, followUpType_YNParameter, ticketType_YNParameter, staffTicketType_YNParameter, appointmentParameter, departmentIDParameter, followUp_Type_IDParameter);
        }
    
        public virtual int ssp_UpdateFreeShipping(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateFreeShipping", orderIDParameter);
        }
    
        public virtual int ssp_UpdateGroups(Nullable<int> iD, string groupName, string groupTitle, Nullable<int> sortOrder, Nullable<bool> showGraph, Nullable<decimal> chartBottom, Nullable<decimal> maleLongevityHigh, Nullable<decimal> maleLongevityLow, Nullable<decimal> femaleLongevityHigh, Nullable<decimal> femaleLongevityLow, Nullable<decimal> maleAcceptableHigh, Nullable<decimal> maleAcceptableLow, Nullable<decimal> femaleAcceptableHigh, Nullable<decimal> femaleAcceptableLow, string description, string maleHighTxt, string maleLowTxt, string maleNormalTxt, string femHighTxt, string femLowTxt, string femNormalTxt, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var groupTitleParameter = groupTitle != null ?
                new ObjectParameter("GroupTitle", groupTitle) :
                new ObjectParameter("GroupTitle", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var showGraphParameter = showGraph.HasValue ?
                new ObjectParameter("ShowGraph", showGraph) :
                new ObjectParameter("ShowGraph", typeof(bool));
    
            var chartBottomParameter = chartBottom.HasValue ?
                new ObjectParameter("ChartBottom", chartBottom) :
                new ObjectParameter("ChartBottom", typeof(decimal));
    
            var maleLongevityHighParameter = maleLongevityHigh.HasValue ?
                new ObjectParameter("MaleLongevityHigh", maleLongevityHigh) :
                new ObjectParameter("MaleLongevityHigh", typeof(decimal));
    
            var maleLongevityLowParameter = maleLongevityLow.HasValue ?
                new ObjectParameter("MaleLongevityLow", maleLongevityLow) :
                new ObjectParameter("MaleLongevityLow", typeof(decimal));
    
            var femaleLongevityHighParameter = femaleLongevityHigh.HasValue ?
                new ObjectParameter("FemaleLongevityHigh", femaleLongevityHigh) :
                new ObjectParameter("FemaleLongevityHigh", typeof(decimal));
    
            var femaleLongevityLowParameter = femaleLongevityLow.HasValue ?
                new ObjectParameter("FemaleLongevityLow", femaleLongevityLow) :
                new ObjectParameter("FemaleLongevityLow", typeof(decimal));
    
            var maleAcceptableHighParameter = maleAcceptableHigh.HasValue ?
                new ObjectParameter("MaleAcceptableHigh", maleAcceptableHigh) :
                new ObjectParameter("MaleAcceptableHigh", typeof(decimal));
    
            var maleAcceptableLowParameter = maleAcceptableLow.HasValue ?
                new ObjectParameter("MaleAcceptableLow", maleAcceptableLow) :
                new ObjectParameter("MaleAcceptableLow", typeof(decimal));
    
            var femaleAcceptableHighParameter = femaleAcceptableHigh.HasValue ?
                new ObjectParameter("FemaleAcceptableHigh", femaleAcceptableHigh) :
                new ObjectParameter("FemaleAcceptableHigh", typeof(decimal));
    
            var femaleAcceptableLowParameter = femaleAcceptableLow.HasValue ?
                new ObjectParameter("FemaleAcceptableLow", femaleAcceptableLow) :
                new ObjectParameter("FemaleAcceptableLow", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var maleHighTxtParameter = maleHighTxt != null ?
                new ObjectParameter("MaleHighTxt", maleHighTxt) :
                new ObjectParameter("MaleHighTxt", typeof(string));
    
            var maleLowTxtParameter = maleLowTxt != null ?
                new ObjectParameter("MaleLowTxt", maleLowTxt) :
                new ObjectParameter("MaleLowTxt", typeof(string));
    
            var maleNormalTxtParameter = maleNormalTxt != null ?
                new ObjectParameter("MaleNormalTxt", maleNormalTxt) :
                new ObjectParameter("MaleNormalTxt", typeof(string));
    
            var femHighTxtParameter = femHighTxt != null ?
                new ObjectParameter("FemHighTxt", femHighTxt) :
                new ObjectParameter("FemHighTxt", typeof(string));
    
            var femLowTxtParameter = femLowTxt != null ?
                new ObjectParameter("FemLowTxt", femLowTxt) :
                new ObjectParameter("FemLowTxt", typeof(string));
    
            var femNormalTxtParameter = femNormalTxt != null ?
                new ObjectParameter("FemNormalTxt", femNormalTxt) :
                new ObjectParameter("FemNormalTxt", typeof(string));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateGroups", iDParameter, groupNameParameter, groupTitleParameter, sortOrderParameter, showGraphParameter, chartBottomParameter, maleLongevityHighParameter, maleLongevityLowParameter, femaleLongevityHighParameter, femaleLongevityLowParameter, maleAcceptableHighParameter, maleAcceptableLowParameter, femaleAcceptableHighParameter, femaleAcceptableLowParameter, descriptionParameter, maleHighTxtParameter, maleLowTxtParameter, maleNormalTxtParameter, femHighTxtParameter, femLowTxtParameter, femNormalTxtParameter, panelIDParameter, resultOut);
        }
    
        public virtual int ssp_UpdateLabAdd(Nullable<int> followupID, Nullable<System.DateTime> rangeStart, Nullable<System.DateTime> rangeEnd, Nullable<int> staffID, string content)
        {
            var followupIDParameter = followupID.HasValue ?
                new ObjectParameter("FollowupID", followupID) :
                new ObjectParameter("FollowupID", typeof(int));
    
            var rangeStartParameter = rangeStart.HasValue ?
                new ObjectParameter("RangeStart", rangeStart) :
                new ObjectParameter("RangeStart", typeof(System.DateTime));
    
            var rangeEndParameter = rangeEnd.HasValue ?
                new ObjectParameter("RangeEnd", rangeEnd) :
                new ObjectParameter("RangeEnd", typeof(System.DateTime));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateLabAdd", followupIDParameter, rangeStartParameter, rangeEndParameter, staffIDParameter, contentParameter);
        }
    
        public virtual int ssp_UpdateMatchLab(Nullable<int> followUpID, Nullable<int> appointmentID)
        {
            var followUpIDParameter = followUpID.HasValue ?
                new ObjectParameter("FollowUpID", followUpID) :
                new ObjectParameter("FollowUpID", typeof(int));
    
            var appointmentIDParameter = appointmentID.HasValue ?
                new ObjectParameter("AppointmentID", appointmentID) :
                new ObjectParameter("AppointmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateMatchLab", followUpIDParameter, appointmentIDParameter);
        }
    
        public virtual int ssp_UpdateMedicalNote(string messageBody, Nullable<int> contactID)
        {
            var messageBodyParameter = messageBody != null ?
                new ObjectParameter("MessageBody", messageBody) :
                new ObjectParameter("MessageBody", typeof(string));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateMedicalNote", messageBodyParameter, contactIDParameter);
        }
    
        public virtual int ssp_UpdatePanel(string panelName, string panelDescrip, Nullable<int> sortOrder, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var panelNameParameter = panelName != null ?
                new ObjectParameter("PanelName", panelName) :
                new ObjectParameter("PanelName", typeof(string));
    
            var panelDescripParameter = panelDescrip != null ?
                new ObjectParameter("PanelDescrip", panelDescrip) :
                new ObjectParameter("PanelDescrip", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("PanelID", panelID) :
                new ObjectParameter("PanelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdatePanel", panelNameParameter, panelDescripParameter, sortOrderParameter, panelIDParameter, resultOut);
        }
    
        public virtual int ssp_UpdatePatientChinapatient(Nullable<int> patientId, Nullable<int> chinaPatientId, string billingCountry, string shippingCountry)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var chinaPatientIdParameter = chinaPatientId.HasValue ?
                new ObjectParameter("ChinaPatientId", chinaPatientId) :
                new ObjectParameter("ChinaPatientId", typeof(int));
    
            var billingCountryParameter = billingCountry != null ?
                new ObjectParameter("BillingCountry", billingCountry) :
                new ObjectParameter("BillingCountry", typeof(string));
    
            var shippingCountryParameter = shippingCountry != null ?
                new ObjectParameter("ShippingCountry", shippingCountry) :
                new ObjectParameter("ShippingCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdatePatientChinapatient", patientIdParameter, chinaPatientIdParameter, billingCountryParameter, shippingCountryParameter);
        }
    
        public virtual int ssp_UpdateProblemListAddress(Nullable<int> problemID, Nullable<int> iD)
        {
            var problemIDParameter = problemID.HasValue ?
                new ObjectParameter("ProblemID", problemID) :
                new ObjectParameter("ProblemID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateProblemListAddress", problemIDParameter, iDParameter);
        }
    
        public virtual int ssp_UpdateProblemListStatus(Nullable<int> problemID, Nullable<int> isActive, Nullable<int> iD)
        {
            var problemIDParameter = problemID.HasValue ?
                new ObjectParameter("ProblemID", problemID) :
                new ObjectParameter("ProblemID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateProblemListStatus", problemIDParameter, isActiveParameter, iDParameter);
        }
    
        public virtual int ssp_UpdateProtocolDetails(Nullable<int> protocolID, string title, string content)
        {
            var protocolIDParameter = protocolID.HasValue ?
                new ObjectParameter("ProtocolID", protocolID) :
                new ObjectParameter("ProtocolID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateProtocolDetails", protocolIDParameter, titleParameter, contentParameter);
        }
    
        public virtual int ssp_UpdateProvider(Nullable<int> patientID, Nullable<int> providerID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateProvider", patientIDParameter, providerIDParameter);
        }
    
        public virtual int ssp_UpdateQty(Nullable<int> orderItemId, Nullable<decimal> qty)
        {
            var orderItemIdParameter = orderItemId.HasValue ?
                new ObjectParameter("OrderItemId", orderItemId) :
                new ObjectParameter("OrderItemId", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateQty", orderItemIdParameter, qtyParameter);
        }
    
        public virtual int ssp_UpdateTriggers(Nullable<int> iD, string triggerName, string triggerDesc, Nullable<int> panelID, ObjectParameter resultOut)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var triggerNameParameter = triggerName != null ?
                new ObjectParameter("triggerName", triggerName) :
                new ObjectParameter("triggerName", typeof(string));
    
            var triggerDescParameter = triggerDesc != null ?
                new ObjectParameter("triggerDesc", triggerDesc) :
                new ObjectParameter("triggerDesc", typeof(string));
    
            var panelIDParameter = panelID.HasValue ?
                new ObjectParameter("panelID", panelID) :
                new ObjectParameter("panelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateTriggers", iDParameter, triggerNameParameter, triggerDescParameter, panelIDParameter, resultOut);
        }
    
        public virtual int ssp_UpdateUploadFileDetails(Nullable<int> uploadID, string title, string category)
        {
            var uploadIDParameter = uploadID.HasValue ?
                new ObjectParameter("UploadID", uploadID) :
                new ObjectParameter("UploadID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateUploadFileDetails", uploadIDParameter, titleParameter, categoryParameter);
        }
    
        public virtual ObjectResult<string> ssp_ValidateAndUpdateDictation_Diagnosis(Nullable<int> diagnosisID, string diagnosisName, string iCDCode)
        {
            var diagnosisIDParameter = diagnosisID.HasValue ?
                new ObjectParameter("DiagnosisID", diagnosisID) :
                new ObjectParameter("DiagnosisID", typeof(int));
    
            var diagnosisNameParameter = diagnosisName != null ?
                new ObjectParameter("DiagnosisName", diagnosisName) :
                new ObjectParameter("DiagnosisName", typeof(string));
    
            var iCDCodeParameter = iCDCode != null ?
                new ObjectParameter("ICDCode", iCDCode) :
                new ObjectParameter("ICDCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ssp_ValidateAndUpdateDictation_Diagnosis", diagnosisIDParameter, diagnosisNameParameter, iCDCodeParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetOrderItemsbyOrderID_Result> ssp_XEROGetOrderItemsbyOrderID(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetOrderItemsbyOrderID_Result>("ssp_XEROGetOrderItemsbyOrderID", orderIDParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetOrdersbyOrderIDnew_Result> ssp_XEROGetOrdersbyOrderIDnew(string orderIDs)
        {
            var orderIDsParameter = orderIDs != null ?
                new ObjectParameter("OrderIDs", orderIDs) :
                new ObjectParameter("OrderIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetOrdersbyOrderIDnew_Result>("ssp_XEROGetOrdersbyOrderIDnew", orderIDsParameter);
        }
    
        public virtual ObjectResult<ssp_XEROGetpatientsnotMatch_Result> ssp_XEROGetpatientsnotMatch(Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROGetpatientsnotMatch_Result>("ssp_XEROGetpatientsnotMatch", pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_XEROpatientsMatchedSearch_Result> ssp_XEROpatientsMatchedSearch(Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder, string firstName, string lastName)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_XEROpatientsMatchedSearch_Result>("ssp_XEROpatientsMatchedSearch", pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter, firstNameParameter, lastNameParameter);
        }
    
        public virtual int ssp_XEROUpdateInvoice(Nullable<int> orderID, Nullable<System.Guid> xeroInvId)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var xeroInvIdParameter = xeroInvId.HasValue ?
                new ObjectParameter("XeroInvId", xeroInvId) :
                new ObjectParameter("XeroInvId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_XEROUpdateInvoice", orderIDParameter, xeroInvIdParameter);
        }
    
        public virtual int ssp_XEROUpdateInvoicePaid(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_XEROUpdateInvoicePaid", orderIDParameter);
        }
    
        public virtual ObjectResult<Staff_Get_Result> Staff_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_Get_Result>("Staff_Get");
        }
    
        public virtual ObjectResult<Staff_GetByID_Result> Staff_GetByID(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_GetByID_Result>("Staff_GetByID", employeeIDParameter);
        }
    
        public virtual int Staff_UpdateAutoship(Nullable<int> employeeID, string autoshipAccess)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var autoshipAccessParameter = autoshipAccess != null ?
                new ObjectParameter("AutoshipAccess", autoshipAccess) :
                new ObjectParameter("AutoshipAccess", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Staff_UpdateAutoship", employeeIDParameter, autoshipAccessParameter);
        }
    
        public virtual ObjectResult<Status_Get_Result> Status_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Status_Get_Result>("Status_Get");
        }
    
        public virtual ObjectResult<string> Status_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Status_GetById", idParameter);
        }
    
        public virtual ObjectResult<string> Status_GetByuId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Status_GetByuId", idParameter);
        }
    
        public virtual int Status_Insert(string statusName)
        {
            var statusNameParameter = statusName != null ?
                new ObjectParameter("StatusName", statusName) :
                new ObjectParameter("StatusName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Status_Insert", statusNameParameter);
        }
    
        public virtual int Status_Update(Nullable<int> statusID, string statusName, Nullable<bool> active)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var statusNameParameter = statusName != null ?
                new ObjectParameter("StatusName", statusName) :
                new ObjectParameter("StatusName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Status_Update", statusIDParameter, statusNameParameter, activeParameter);
        }
    
        public virtual ObjectResult<Supplement_Patient_RX_Result> Supplement_Patient_RX(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplement_Patient_RX_Result>("Supplement_Patient_RX", patientIDParameter);
        }
    
        public virtual ObjectResult<Supplement_Patient_RX_todays_Result> Supplement_Patient_RX_todays(Nullable<int> aptID)
        {
            var aptIDParameter = aptID.HasValue ?
                new ObjectParameter("AptID", aptID) :
                new ObjectParameter("AptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplement_Patient_RX_todays_Result>("Supplement_Patient_RX_todays", aptIDParameter);
        }
    
        public virtual int Testhistory(Nullable<int> patientID, Nullable<int> groupID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Testhistory", patientIDParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<TestSP_Result> TestSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TestSP_Result>("TestSP");
        }
    
        public virtual ObjectResult<Nullable<int>> Tickets_GetCount(Nullable<int> staffID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Tickets_GetCount", staffIDParameter);
        }
    
        public virtual ObjectResult<Tickets_GetDepartmentAssigned_Result> Tickets_GetDepartmentAssigned(Nullable<int> staffID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tickets_GetDepartmentAssigned_Result>("Tickets_GetDepartmentAssigned", staffIDParameter);
        }
    
        public virtual ObjectResult<Tickets_MyTickets_Result> Tickets_MyTickets(Nullable<int> staffID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tickets_MyTickets_Result>("Tickets_MyTickets", staffIDParameter);
        }
    
        public virtual int UpdatePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePassword", usernameParameter, passwordParameter);
        }
    
        public virtual int UpdateProblemListStatus(Nullable<int> problemID, Nullable<int> isActive, Nullable<int> iD)
        {
            var problemIDParameter = problemID.HasValue ?
                new ObjectParameter("ProblemID", problemID) :
                new ObjectParameter("ProblemID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProblemListStatus", problemIDParameter, isActiveParameter, iDParameter);
        }
    
        public virtual ObjectResult<ssp_GetStaffProtocolList_Result> ssp_GetStaffProtocolList(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetStaffProtocolList_Result>("ssp_GetStaffProtocolList", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_GetSymptomsDetails_Result> ssp_GetSymptomsDetails(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSymptomsDetails_Result>("ssp_GetSymptomsDetails", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_GetDiagnosisDetailsList_Result> ssp_GetDiagnosisDetailsList(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDiagnosisDetailsList_Result>("ssp_GetDiagnosisDetailsList", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_GetStaffLogins_Result> ssp_GetStaffLogins(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetStaffLogins_Result>("ssp_GetStaffLogins", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_InsertLabReportTestForGroup_Result> ssp_InsertLabReportTestForGroup(Nullable<int> groupID, string testID, Nullable<int> hide)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var testIDParameter = testID != null ?
                new ObjectParameter("TestID", testID) :
                new ObjectParameter("TestID", typeof(string));
    
            var hideParameter = hide.HasValue ?
                new ObjectParameter("Hide", hide) :
                new ObjectParameter("Hide", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_InsertLabReportTestForGroup_Result>("ssp_InsertLabReportTestForGroup", groupIDParameter, testIDParameter, hideParameter);
        }
    
        public virtual ObjectResult<ssp_SouthPatientList_Result> ssp_SouthPatientList(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_SouthPatientList_Result>("ssp_SouthPatientList", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_CRMDashBoardStatistic_Result> ssp_CRMDashBoardStatistic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_CRMDashBoardStatistic_Result>("ssp_CRMDashBoardStatistic");
        }
    
        public virtual ObjectResult<ssp_ReportGraphCRmEventProspect_Result> ssp_ReportGraphCRmEventProspect(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportGraphCRmEventProspect_Result>("ssp_ReportGraphCRmEventProspect", eventIDParameter);
        }
    
        public virtual ObjectResult<ssp_ReportGraphCRmProspect_Result> ssp_ReportGraphCRmProspect(Nullable<int> campaign)
        {
            var campaignParameter = campaign.HasValue ?
                new ObjectParameter("Campaign", campaign) :
                new ObjectParameter("Campaign", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ReportGraphCRmProspect_Result>("ssp_ReportGraphCRmProspect", campaignParameter);
        }
    
        public virtual ObjectResult<ssp_GetLast5DaysPrescriptions_Result> ssp_GetLast5DaysPrescriptions(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLast5DaysPrescriptions_Result>("ssp_GetLast5DaysPrescriptions", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_PendingFollowup_ByClinic_Result> ssp_PendingFollowup_ByClinic(string orderBY, string clinic, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var orderBYParameter = orderBY != null ?
                new ObjectParameter("OrderBY", orderBY) :
                new ObjectParameter("OrderBY", typeof(string));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_PendingFollowup_ByClinic_Result>("ssp_PendingFollowup_ByClinic", orderBYParameter, clinicParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int ssp_DeleteRecordAttendee(Nullable<int> eventId, Nullable<int> prospectId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var prospectIdParameter = prospectId.HasValue ?
                new ObjectParameter("ProspectId", prospectId) :
                new ObjectParameter("ProspectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_DeleteRecordAttendee", eventIdParameter, prospectIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetGroupTickets_Result> ssp_GetGroupTickets(Nullable<int> staffID, Nullable<int> groupFuture, Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var groupFutureParameter = groupFuture.HasValue ?
                new ObjectParameter("GroupFuture", groupFuture) :
                new ObjectParameter("GroupFuture", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetGroupTickets_Result>("ssp_GetGroupTickets", staffIDParameter, groupFutureParameter, pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientSearchResult_Result> ssp_GetPatientSearchResult(string firstName, string lastName, string middleName, string phone, string clinic, Nullable<bool> inactive, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var inactiveParameter = inactive.HasValue ?
                new ObjectParameter("Inactive", inactive) :
                new ObjectParameter("Inactive", typeof(bool));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientSearchResult_Result>("ssp_GetPatientSearchResult", firstNameParameter, lastNameParameter, middleNameParameter, phoneParameter, clinicParameter, inactiveParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<ssp_GetLabScheduleDetails_Result> ssp_GetLabScheduleDetails(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetLabScheduleDetails_Result>("ssp_GetLabScheduleDetails", patientIDParameter);
        }
    
        public virtual ObjectResult<sp_GetDrugList_Result> sp_GetDrugList(Nullable<bool> reviewed, string filterExpression, string sortingParam)
        {
            var reviewedParameter = reviewed.HasValue ?
                new ObjectParameter("Reviewed", reviewed) :
                new ObjectParameter("Reviewed", typeof(bool));
    
            var filterExpressionParameter = filterExpression != null ?
                new ObjectParameter("filterExpression", filterExpression) :
                new ObjectParameter("filterExpression", typeof(string));
    
            var sortingParamParameter = sortingParam != null ?
                new ObjectParameter("sortingParam", sortingParam) :
                new ObjectParameter("sortingParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDrugList_Result>("sp_GetDrugList", reviewedParameter, filterExpressionParameter, sortingParamParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetDrugListCount(Nullable<bool> reviewed, string filterExpression)
        {
            var reviewedParameter = reviewed.HasValue ?
                new ObjectParameter("Reviewed", reviewed) :
                new ObjectParameter("Reviewed", typeof(bool));
    
            var filterExpressionParameter = filterExpression != null ?
                new ObjectParameter("filterExpression", filterExpression) :
                new ObjectParameter("filterExpression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetDrugListCount", reviewedParameter, filterExpressionParameter);
        }
    
        public virtual ObjectResult<ssp_GetDruglist_Result1> ssp_GetDruglist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetDruglist_Result1>("ssp_GetDruglist");
        }
    
        public virtual ObjectResult<ssp_GetReportList_Result> ssp_GetReportList(Nullable<int> reportTypeId)
        {
            var reportTypeIdParameter = reportTypeId.HasValue ?
                new ObjectParameter("ReportTypeId", reportTypeId) :
                new ObjectParameter("ReportTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetReportList_Result>("ssp_GetReportList", reportTypeIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetReportType_Result> ssp_GetReportType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetReportType_Result>("ssp_GetReportType");
        }
    
        public virtual ObjectResult<ssp_GetPostSeminarAppointments_Result> ssp_GetPostSeminarAppointments(Nullable<System.DateTime> startDate, string clinic)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPostSeminarAppointments_Result>("ssp_GetPostSeminarAppointments", startDateParameter, clinicParameter);
        }
    
        public virtual int ssp_InsertDepartmentStaff(Nullable<int> staffId, string departmentId)
        {
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            var departmentIdParameter = departmentId != null ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertDepartmentStaff", staffIdParameter, departmentIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetEmployeebyDepartmentID_Result> ssp_GetEmployeebyDepartmentID(Nullable<int> pageIndex, Nullable<int> pageSize, string sort, string sortOrder, Nullable<int> isSearch, string searchColumn, string searchText, Nullable<int> departmentID)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var isSearchParameter = isSearch.HasValue ?
                new ObjectParameter("IsSearch", isSearch) :
                new ObjectParameter("IsSearch", typeof(int));
    
            var searchColumnParameter = searchColumn != null ?
                new ObjectParameter("SearchColumn", searchColumn) :
                new ObjectParameter("SearchColumn", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetEmployeebyDepartmentID_Result>("ssp_GetEmployeebyDepartmentID", pageIndexParameter, pageSizeParameter, sortParameter, sortOrderParameter, isSearchParameter, searchColumnParameter, searchTextParameter, departmentIDParameter);
        }
    
        public virtual int Patients_SaveAutoshipHotNotes(Nullable<int> patientID, string note)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Patients_SaveAutoshipHotNotes", patientIDParameter, noteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ssp_InsertStaffLogins(string userName, string password, string employeeName, string access_level, Nullable<bool> canWritePrescript, Nullable<bool> hAREp)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var access_levelParameter = access_level != null ?
                new ObjectParameter("access_level", access_level) :
                new ObjectParameter("access_level", typeof(string));
    
            var canWritePrescriptParameter = canWritePrescript.HasValue ?
                new ObjectParameter("CanWritePrescript", canWritePrescript) :
                new ObjectParameter("CanWritePrescript", typeof(bool));
    
            var hAREpParameter = hAREp.HasValue ?
                new ObjectParameter("HAREp", hAREp) :
                new ObjectParameter("HAREp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ssp_InsertStaffLogins", userNameParameter, passwordParameter, employeeNameParameter, access_levelParameter, canWritePrescriptParameter, hAREpParameter);
        }
    
        public virtual ObjectResult<ssp_GetSharePointPatientsById_Result> ssp_GetSharePointPatientsById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSharePointPatientsById_Result>("ssp_GetSharePointPatientsById", idParameter);
        }
    
        public virtual ObjectResult<ssp_ListSharePointPatients_Result> ssp_ListSharePointPatients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_ListSharePointPatients_Result>("ssp_ListSharePointPatients");
        }
    
        public virtual int ssp_SaveUpdateSharePointPatients(Nullable<int> id, Nullable<int> clinicId, Nullable<int> providerId, Nullable<System.DateTime> startRange, Nullable<System.DateTime> endRange, string firstName, string lastName, Nullable<int> apptDuration, string phone, string notes)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var clinicIdParameter = clinicId.HasValue ?
                new ObjectParameter("ClinicId", clinicId) :
                new ObjectParameter("ClinicId", typeof(int));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("ProviderId", providerId) :
                new ObjectParameter("ProviderId", typeof(int));
    
            var startRangeParameter = startRange.HasValue ?
                new ObjectParameter("StartRange", startRange) :
                new ObjectParameter("StartRange", typeof(System.DateTime));
    
            var endRangeParameter = endRange.HasValue ?
                new ObjectParameter("EndRange", endRange) :
                new ObjectParameter("EndRange", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var apptDurationParameter = apptDuration.HasValue ?
                new ObjectParameter("ApptDuration", apptDuration) :
                new ObjectParameter("ApptDuration", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveUpdateSharePointPatients", idParameter, clinicIdParameter, providerIdParameter, startRangeParameter, endRangeParameter, firstNameParameter, lastNameParameter, apptDurationParameter, phoneParameter, notesParameter);
        }
    
        public virtual ObjectResult<ssp_GetSpecialAttentionByPatientId_Result> ssp_GetSpecialAttentionByPatientId(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetSpecialAttentionByPatientId_Result>("ssp_GetSpecialAttentionByPatientId", patientIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetCalStatusList_Result> ssp_GetCalStatusList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCalStatusList_Result>("ssp_GetCalStatusList");
        }
    
        public virtual int ssp_insertPatientLog(Nullable<int> patientID, Nullable<int> statusLogId, Nullable<int> statusId, Nullable<bool> isTicketSet, Nullable<int> staffId)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var statusLogIdParameter = statusLogId.HasValue ?
                new ObjectParameter("StatusLogId", statusLogId) :
                new ObjectParameter("StatusLogId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var isTicketSetParameter = isTicketSet.HasValue ?
                new ObjectParameter("IsTicketSet", isTicketSet) :
                new ObjectParameter("IsTicketSet", typeof(bool));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_insertPatientLog", patientIDParameter, statusLogIdParameter, statusIdParameter, isTicketSetParameter, staffIdParameter);
        }
    
        public virtual int ssp_RemovePatientLog(Nullable<int> patientID, Nullable<int> statusLogId, Nullable<int> statusId, Nullable<bool> isTicketSet, Nullable<int> staffId)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var statusLogIdParameter = statusLogId.HasValue ?
                new ObjectParameter("StatusLogId", statusLogId) :
                new ObjectParameter("StatusLogId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var isTicketSetParameter = isTicketSet.HasValue ?
                new ObjectParameter("IsTicketSet", isTicketSet) :
                new ObjectParameter("IsTicketSet", typeof(bool));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_RemovePatientLog", patientIDParameter, statusLogIdParameter, statusIdParameter, isTicketSetParameter, staffIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Appointment_Insert(Nullable<int> patientID, Nullable<System.DateTime> apptStart, Nullable<System.DateTime> apptEnd, Nullable<int> providerID, Nullable<int> appointmentTypeID, Nullable<int> statusID, Nullable<bool> allDay, Nullable<bool> emailOnChange, Nullable<int> results, string notes, string email, Nullable<bool> labsCheckedIn, string clinic, Nullable<int> hARep, Nullable<int> staffId)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            var apptStartParameter = apptStart.HasValue ?
                new ObjectParameter("ApptStart", apptStart) :
                new ObjectParameter("ApptStart", typeof(System.DateTime));
    
            var apptEndParameter = apptEnd.HasValue ?
                new ObjectParameter("ApptEnd", apptEnd) :
                new ObjectParameter("ApptEnd", typeof(System.DateTime));
    
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(int));
    
            var appointmentTypeIDParameter = appointmentTypeID.HasValue ?
                new ObjectParameter("AppointmentTypeID", appointmentTypeID) :
                new ObjectParameter("AppointmentTypeID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var allDayParameter = allDay.HasValue ?
                new ObjectParameter("AllDay", allDay) :
                new ObjectParameter("AllDay", typeof(bool));
    
            var emailOnChangeParameter = emailOnChange.HasValue ?
                new ObjectParameter("EmailOnChange", emailOnChange) :
                new ObjectParameter("EmailOnChange", typeof(bool));
    
            var resultsParameter = results.HasValue ?
                new ObjectParameter("Results", results) :
                new ObjectParameter("Results", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var labsCheckedInParameter = labsCheckedIn.HasValue ?
                new ObjectParameter("LabsCheckedIn", labsCheckedIn) :
                new ObjectParameter("LabsCheckedIn", typeof(bool));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var hARepParameter = hARep.HasValue ?
                new ObjectParameter("HARep", hARep) :
                new ObjectParameter("HARep", typeof(int));
    
            var staffIdParameter = staffId.HasValue ?
                new ObjectParameter("StaffId", staffId) :
                new ObjectParameter("StaffId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Appointment_Insert", patientIDParameter, apptStartParameter, apptEndParameter, providerIDParameter, appointmentTypeIDParameter, statusIDParameter, allDayParameter, emailOnChangeParameter, resultsParameter, notesParameter, emailParameter, labsCheckedInParameter, clinicParameter, hARepParameter, staffIdParameter);
        }
    
        public virtual ObjectResult<AppointmentType_Get_Result> AppointmentType_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentType_Get_Result>("AppointmentType_Get");
        }
    
        public virtual ObjectResult<AppointmentType_GetByID_Result> AppointmentType_GetByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentType_GetByID_Result>("AppointmentType_GetByID", idParameter);
        }
    
        public virtual int AppointmentType_Update(Nullable<int> id, string typeName, string color, Nullable<bool> active, string category, Nullable<bool> confirmationEmail, string confirmationText, string attachment, string subject, string emailFromAddress, string emailFromName, Nullable<bool> oVU, string wufooFormKey, string mailChimpCampaignId, string mailChimpCampaignName, Nullable<int> resultStatusId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var confirmationEmailParameter = confirmationEmail.HasValue ?
                new ObjectParameter("ConfirmationEmail", confirmationEmail) :
                new ObjectParameter("ConfirmationEmail", typeof(bool));
    
            var confirmationTextParameter = confirmationText != null ?
                new ObjectParameter("ConfirmationText", confirmationText) :
                new ObjectParameter("ConfirmationText", typeof(string));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var emailFromAddressParameter = emailFromAddress != null ?
                new ObjectParameter("EmailFromAddress", emailFromAddress) :
                new ObjectParameter("EmailFromAddress", typeof(string));
    
            var emailFromNameParameter = emailFromName != null ?
                new ObjectParameter("EmailFromName", emailFromName) :
                new ObjectParameter("EmailFromName", typeof(string));
    
            var oVUParameter = oVU.HasValue ?
                new ObjectParameter("OVU", oVU) :
                new ObjectParameter("OVU", typeof(bool));
    
            var wufooFormKeyParameter = wufooFormKey != null ?
                new ObjectParameter("WufooFormKey", wufooFormKey) :
                new ObjectParameter("WufooFormKey", typeof(string));
    
            var mailChimpCampaignIdParameter = mailChimpCampaignId != null ?
                new ObjectParameter("MailChimpCampaignId", mailChimpCampaignId) :
                new ObjectParameter("MailChimpCampaignId", typeof(string));
    
            var mailChimpCampaignNameParameter = mailChimpCampaignName != null ?
                new ObjectParameter("MailChimpCampaignName", mailChimpCampaignName) :
                new ObjectParameter("MailChimpCampaignName", typeof(string));
    
            var resultStatusIdParameter = resultStatusId.HasValue ?
                new ObjectParameter("ResultStatusId", resultStatusId) :
                new ObjectParameter("ResultStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppointmentType_Update", idParameter, typeNameParameter, colorParameter, activeParameter, categoryParameter, confirmationEmailParameter, confirmationTextParameter, attachmentParameter, subjectParameter, emailFromAddressParameter, emailFromNameParameter, oVUParameter, wufooFormKeyParameter, mailChimpCampaignIdParameter, mailChimpCampaignNameParameter, resultStatusIdParameter);
        }
    
        public virtual ObjectResult<Results_Get_Result> Results_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Results_Get_Result>("Results_Get");
        }
    
        public virtual int Results_Update(Nullable<int> resultID, string resultName, Nullable<bool> active, Nullable<bool> isActionRequired, Nullable<int> resultStatusId)
        {
            var resultIDParameter = resultID.HasValue ?
                new ObjectParameter("ResultID", resultID) :
                new ObjectParameter("ResultID", typeof(int));
    
            var resultNameParameter = resultName != null ?
                new ObjectParameter("ResultName", resultName) :
                new ObjectParameter("ResultName", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isActionRequiredParameter = isActionRequired.HasValue ?
                new ObjectParameter("IsActionRequired", isActionRequired) :
                new ObjectParameter("IsActionRequired", typeof(bool));
    
            var resultStatusIdParameter = resultStatusId.HasValue ?
                new ObjectParameter("ResultStatusId", resultStatusId) :
                new ObjectParameter("ResultStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Results_Update", resultIDParameter, resultNameParameter, activeParameter, isActionRequiredParameter, resultStatusIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetCalStatusLogByPatient_Result> ssp_GetCalStatusLogByPatient(Nullable<int> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetCalStatusLogByPatient_Result>("ssp_GetCalStatusLogByPatient", patientIdParameter);
        }
    
        public virtual ObjectResult<Patient_Details_Result> Patient_Details(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patient_Details_Result>("Patient_Details", patientIDParameter);
        }
    
        public virtual ObjectResult<ssp_GetICDCodes_Result> ssp_GetICDCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetICDCodes_Result>("ssp_GetICDCodes");
        }
    
        public virtual ObjectResult<ssp_GetPatientIcdCodes_Result> ssp_GetPatientIcdCodes(Nullable<int> patientId, Nullable<int> aptId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientIcdCodes_Result>("ssp_GetPatientIcdCodes", patientIdParameter, aptIdParameter);
        }
    
        public virtual int ssp_InsertIcdCodes(Nullable<int> id, string icD10Code, string description, string gender, Nullable<bool> isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var icD10CodeParameter = icD10Code != null ?
                new ObjectParameter("IcD10Code", icD10Code) :
                new ObjectParameter("IcD10Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertIcdCodes", idParameter, icD10CodeParameter, descriptionParameter, genderParameter, isActiveParameter);
        }
    
        public virtual int ssp_InsertPatientIcdCode(Nullable<int> patientId, string icdCodes, Nullable<int> aptId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var icdCodesParameter = icdCodes != null ?
                new ObjectParameter("IcdCodes", icdCodes) :
                new ObjectParameter("IcdCodes", typeof(string));
    
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_InsertPatientIcdCode", patientIdParameter, icdCodesParameter, aptIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientAssIcdCodes_Result> ssp_GetPatientAssIcdCodes(Nullable<int> patientId, Nullable<int> aptId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientAssIcdCodes_Result>("ssp_GetPatientAssIcdCodes", patientIdParameter, aptIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetICDCodesWithSuppliments_Result> ssp_GetICDCodesWithSuppliments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetICDCodesWithSuppliments_Result>("ssp_GetICDCodesWithSuppliments");
        }
    
        public virtual int ssp_SaveProplemSuppliment(Nullable<int> icdCodeId, Nullable<int> productId)
        {
            var icdCodeIdParameter = icdCodeId.HasValue ?
                new ObjectParameter("IcdCodeId", icdCodeId) :
                new ObjectParameter("IcdCodeId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_SaveProplemSuppliment", icdCodeIdParameter, productIdParameter);
        }
    
        public virtual ObjectResult<ssp_GetPatientIcdCodesSuppliments_Result> ssp_GetPatientIcdCodesSuppliments(Nullable<int> patientId, Nullable<int> aptId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(int));
    
            var aptIdParameter = aptId.HasValue ?
                new ObjectParameter("AptId", aptId) :
                new ObjectParameter("AptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ssp_GetPatientIcdCodesSuppliments_Result>("ssp_GetPatientIcdCodesSuppliments", patientIdParameter, aptIdParameter);
        }
    
        public virtual int ssp_UpdateStaffLogins(string employeeName, string access_level, string password, Nullable<int> employeeId, Nullable<bool> canWritePrescript, Nullable<bool> hAREp, Nullable<bool> isActive)
        {
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var access_levelParameter = access_level != null ?
                new ObjectParameter("access_level", access_level) :
                new ObjectParameter("access_level", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var canWritePrescriptParameter = canWritePrescript.HasValue ?
                new ObjectParameter("CanWritePrescript", canWritePrescript) :
                new ObjectParameter("CanWritePrescript", typeof(bool));
    
            var hAREpParameter = hAREp.HasValue ?
                new ObjectParameter("HAREp", hAREp) :
                new ObjectParameter("HAREp", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateStaffLogins", employeeNameParameter, access_levelParameter, passwordParameter, employeeIdParameter, canWritePrescriptParameter, hAREpParameter, isActiveParameter);
        }
    
        public virtual int ssp_UpdateAutoShipNote(Nullable<int> orderId, string autoShipNote, Nullable<int> userId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var autoShipNoteParameter = autoShipNote != null ?
                new ObjectParameter("AutoShipNote", autoShipNote) :
                new ObjectParameter("AutoShipNote", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateAutoShipNote", orderIdParameter, autoShipNoteParameter, userIdParameter);
        }
    
        public virtual int ssp_UpdateOrderNote(Nullable<int> orderId, string note, string shipAddress, string shipCity, string shipState, string shipZip, Nullable<int> userId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var shipAddressParameter = shipAddress != null ?
                new ObjectParameter("ShipAddress", shipAddress) :
                new ObjectParameter("ShipAddress", typeof(string));
    
            var shipCityParameter = shipCity != null ?
                new ObjectParameter("ShipCity", shipCity) :
                new ObjectParameter("ShipCity", typeof(string));
    
            var shipStateParameter = shipState != null ?
                new ObjectParameter("ShipState", shipState) :
                new ObjectParameter("ShipState", typeof(string));
    
            var shipZipParameter = shipZip != null ?
                new ObjectParameter("ShipZip", shipZip) :
                new ObjectParameter("ShipZip", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ssp_UpdateOrderNote", orderIdParameter, noteParameter, shipAddressParameter, shipCityParameter, shipStateParameter, shipZipParameter, userIdParameter);
        }
    }
}
