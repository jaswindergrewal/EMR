#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="emr_dev")]
public partial class CRMDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCRM_Attendee(CRM_Attendee instance);
  partial void UpdateCRM_Attendee(CRM_Attendee instance);
  partial void DeleteCRM_Attendee(CRM_Attendee instance);
  partial void InsertCRM_Status(CRM_Status instance);
  partial void UpdateCRM_Status(CRM_Status instance);
  partial void DeleteCRM_Status(CRM_Status instance);
  partial void InsertCRM_MarketingSource_Campaign(CRM_MarketingSource_Campaign instance);
  partial void UpdateCRM_MarketingSource_Campaign(CRM_MarketingSource_Campaign instance);
  partial void DeleteCRM_MarketingSource_Campaign(CRM_MarketingSource_Campaign instance);
  partial void InsertCRM_MarketingSource_Prospect(CRM_MarketingSource_Prospect instance);
  partial void UpdateCRM_MarketingSource_Prospect(CRM_MarketingSource_Prospect instance);
  partial void DeleteCRM_MarketingSource_Prospect(CRM_MarketingSource_Prospect instance);
  partial void InsertCRM_MarketingSource(CRM_MarketingSource instance);
  partial void UpdateCRM_MarketingSource(CRM_MarketingSource instance);
  partial void DeleteCRM_MarketingSource(CRM_MarketingSource instance);
  partial void InsertCRM_Registrant(CRM_Registrant instance);
  partial void UpdateCRM_Registrant(CRM_Registrant instance);
  partial void DeleteCRM_Registrant(CRM_Registrant instance);
  partial void InsertCRM_Log(CRM_Log instance);
  partial void UpdateCRM_Log(CRM_Log instance);
  partial void DeleteCRM_Log(CRM_Log instance);
  partial void InsertCRM_MarketingActivity(CRM_MarketingActivity instance);
  partial void UpdateCRM_MarketingActivity(CRM_MarketingActivity instance);
  partial void DeleteCRM_MarketingActivity(CRM_MarketingActivity instance);
  partial void InsertCRM_Campaign(CRM_Campaign instance);
  partial void UpdateCRM_Campaign(CRM_Campaign instance);
  partial void DeleteCRM_Campaign(CRM_Campaign instance);
  partial void InsertCRM_Event(CRM_Event instance);
  partial void UpdateCRM_Event(CRM_Event instance);
  partial void DeleteCRM_Event(CRM_Event instance);
  partial void InsertCRM_Prospect(CRM_Prospect instance);
  partial void UpdateCRM_Prospect(CRM_Prospect instance);
  partial void DeleteCRM_Prospect(CRM_Prospect instance);
  #endregion
	
	public CRMDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["emr_devConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CRMDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CRMDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CRMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CRMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CRM_Attendee> CRM_Attendees
	{
		get
		{
			return this.GetTable<CRM_Attendee>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Status> CRM_Status
	{
		get
		{
			return this.GetTable<CRM_Status>();
		}
	}
	
	public System.Data.Linq.Table<CRM_MarketingSource_Campaign> CRM_MarketingSource_Campaigns
	{
		get
		{
			return this.GetTable<CRM_MarketingSource_Campaign>();
		}
	}
	
	public System.Data.Linq.Table<CRM_MarketingSource_Prospect> CRM_MarketingSource_Prospects
	{
		get
		{
			return this.GetTable<CRM_MarketingSource_Prospect>();
		}
	}
	
	public System.Data.Linq.Table<CRM_MarketingSource> CRM_MarketingSources
	{
		get
		{
			return this.GetTable<CRM_MarketingSource>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Registrant> CRM_Registrants
	{
		get
		{
			return this.GetTable<CRM_Registrant>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Log> CRM_Logs
	{
		get
		{
			return this.GetTable<CRM_Log>();
		}
	}
	
	public System.Data.Linq.Table<CRM_MarketingActivity> CRM_MarketingActivities
	{
		get
		{
			return this.GetTable<CRM_MarketingActivity>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Campaign> CRM_Campaigns
	{
		get
		{
			return this.GetTable<CRM_Campaign>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Event> CRM_Events
	{
		get
		{
			return this.GetTable<CRM_Event>();
		}
	}
	
	public System.Data.Linq.Table<CRM_Prospect> CRM_Prospects
	{
		get
		{
			return this.GetTable<CRM_Prospect>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Attendees")]
public partial class CRM_Attendee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AttendeeID;
	
	private int _EventID;
	
	private int _ProspectID;
	
	private EntityRef<CRM_Event> _CRM_Event;
	
	private EntityRef<CRM_Prospect> _CRM_Prospect;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttendeeIDChanging(int value);
    partial void OnAttendeeIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    #endregion
	
	public CRM_Attendee()
	{
		this._CRM_Event = default(EntityRef<CRM_Event>);
		this._CRM_Prospect = default(EntityRef<CRM_Prospect>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AttendeeID
	{
		get
		{
			return this._AttendeeID;
		}
		set
		{
			if ((this._AttendeeID != value))
			{
				this.OnAttendeeIDChanging(value);
				this.SendPropertyChanging();
				this._AttendeeID = value;
				this.SendPropertyChanged("AttendeeID");
				this.OnAttendeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
	public int EventID
	{
		get
		{
			return this._EventID;
		}
		set
		{
			if ((this._EventID != value))
			{
				if (this._CRM_Event.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEventIDChanging(value);
				this.SendPropertyChanging();
				this._EventID = value;
				this.SendPropertyChanged("EventID");
				this.OnEventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", DbType="Int NOT NULL")]
	public int ProspectID
	{
		get
		{
			return this._ProspectID;
		}
		set
		{
			if ((this._ProspectID != value))
			{
				if (this._CRM_Prospect.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProspectIDChanging(value);
				this.SendPropertyChanging();
				this._ProspectID = value;
				this.SendPropertyChanged("ProspectID");
				this.OnProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Event_CRM_Attendee", Storage="_CRM_Event", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
	public CRM_Event CRM_Event
	{
		get
		{
			return this._CRM_Event.Entity;
		}
		set
		{
			CRM_Event previousValue = this._CRM_Event.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Event.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Event.Entity = null;
					previousValue.CRM_Attendees.Remove(this);
				}
				this._CRM_Event.Entity = value;
				if ((value != null))
				{
					value.CRM_Attendees.Add(this);
					this._EventID = value.EventID;
				}
				else
				{
					this._EventID = default(int);
				}
				this.SendPropertyChanged("CRM_Event");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Attendee", Storage="_CRM_Prospect", ThisKey="ProspectID", OtherKey="ProspectID", IsForeignKey=true)]
	public CRM_Prospect CRM_Prospect
	{
		get
		{
			return this._CRM_Prospect.Entity;
		}
		set
		{
			CRM_Prospect previousValue = this._CRM_Prospect.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Prospect.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Prospect.Entity = null;
					previousValue.CRM_Attendees.Remove(this);
				}
				this._CRM_Prospect.Entity = value;
				if ((value != null))
				{
					value.CRM_Attendees.Add(this);
					this._ProspectID = value.ProspectID;
				}
				else
				{
					this._ProspectID = default(int);
				}
				this.SendPropertyChanged("CRM_Prospect");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Status")]
public partial class CRM_Status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StatusID;
	
	private string _StatusName;
	
	private bool _Active_YN;
	
	private EntitySet<CRM_Prospect> _CRM_Prospects;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnActive_YNChanging(bool value);
    partial void OnActive_YNChanged();
    #endregion
	
	public CRM_Status()
	{
		this._CRM_Prospects = new EntitySet<CRM_Prospect>(new Action<CRM_Prospect>(this.attach_CRM_Prospects), new Action<CRM_Prospect>(this.detach_CRM_Prospects));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StatusID
	{
		get
		{
			return this._StatusID;
		}
		set
		{
			if ((this._StatusID != value))
			{
				this.OnStatusIDChanging(value);
				this.SendPropertyChanging();
				this._StatusID = value;
				this.SendPropertyChanged("StatusID");
				this.OnStatusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string StatusName
	{
		get
		{
			return this._StatusName;
		}
		set
		{
			if ((this._StatusName != value))
			{
				this.OnStatusNameChanging(value);
				this.SendPropertyChanging();
				this._StatusName = value;
				this.SendPropertyChanged("StatusName");
				this.OnStatusNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_YN", DbType="Bit NOT NULL")]
	public bool Active_YN
	{
		get
		{
			return this._Active_YN;
		}
		set
		{
			if ((this._Active_YN != value))
			{
				this.OnActive_YNChanging(value);
				this.SendPropertyChanging();
				this._Active_YN = value;
				this.SendPropertyChanged("Active_YN");
				this.OnActive_YNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Status_CRM_Prospect", Storage="_CRM_Prospects", ThisKey="StatusID", OtherKey="StatusID")]
	public EntitySet<CRM_Prospect> CRM_Prospects
	{
		get
		{
			return this._CRM_Prospects;
		}
		set
		{
			this._CRM_Prospects.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CRM_Prospects(CRM_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Status = this;
	}
	
	private void detach_CRM_Prospects(CRM_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Status = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_MarketingSource_Campaigns")]
public partial class CRM_MarketingSource_Campaign : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MarketingSource_CampaignID;
	
	private int _MarketingSourceID;
	
	private int _CampaignID;
	
	private EntityRef<CRM_MarketingSource> _CRM_MarketingSource;
	
	private EntityRef<CRM_Campaign> _CRM_Campaign;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingSource_CampaignIDChanging(int value);
    partial void OnMarketingSource_CampaignIDChanged();
    partial void OnMarketingSourceIDChanging(int value);
    partial void OnMarketingSourceIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    #endregion
	
	public CRM_MarketingSource_Campaign()
	{
		this._CRM_MarketingSource = default(EntityRef<CRM_MarketingSource>);
		this._CRM_Campaign = default(EntityRef<CRM_Campaign>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSource_CampaignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MarketingSource_CampaignID
	{
		get
		{
			return this._MarketingSource_CampaignID;
		}
		set
		{
			if ((this._MarketingSource_CampaignID != value))
			{
				this.OnMarketingSource_CampaignIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingSource_CampaignID = value;
				this.SendPropertyChanged("MarketingSource_CampaignID");
				this.OnMarketingSource_CampaignIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSourceID", DbType="Int NOT NULL")]
	public int MarketingSourceID
	{
		get
		{
			return this._MarketingSourceID;
		}
		set
		{
			if ((this._MarketingSourceID != value))
			{
				if (this._CRM_MarketingSource.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMarketingSourceIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingSourceID = value;
				this.SendPropertyChanged("MarketingSourceID");
				this.OnMarketingSourceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
	public int CampaignID
	{
		get
		{
			return this._CampaignID;
		}
		set
		{
			if ((this._CampaignID != value))
			{
				if (this._CRM_Campaign.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCampaignIDChanging(value);
				this.SendPropertyChanging();
				this._CampaignID = value;
				this.SendPropertyChanged("CampaignID");
				this.OnCampaignIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingSource_Campaign", Storage="_CRM_MarketingSource", ThisKey="MarketingSourceID", OtherKey="MarketingSourceID", IsForeignKey=true)]
	public CRM_MarketingSource CRM_MarketingSource
	{
		get
		{
			return this._CRM_MarketingSource.Entity;
		}
		set
		{
			CRM_MarketingSource previousValue = this._CRM_MarketingSource.Entity;
			if (((previousValue != value) 
						|| (this._CRM_MarketingSource.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_MarketingSource.Entity = null;
					previousValue.CRM_MarketingSource_Campaigns.Remove(this);
				}
				this._CRM_MarketingSource.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingSource_Campaigns.Add(this);
					this._MarketingSourceID = value.MarketingSourceID;
				}
				else
				{
					this._MarketingSourceID = default(int);
				}
				this.SendPropertyChanged("CRM_MarketingSource");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_MarketingSource_Campaign", Storage="_CRM_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
	public CRM_Campaign CRM_Campaign
	{
		get
		{
			return this._CRM_Campaign.Entity;
		}
		set
		{
			CRM_Campaign previousValue = this._CRM_Campaign.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Campaign.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Campaign.Entity = null;
					previousValue.CRM_MarketingSource_Campaigns.Remove(this);
				}
				this._CRM_Campaign.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingSource_Campaigns.Add(this);
					this._CampaignID = value.CampaignID;
				}
				else
				{
					this._CampaignID = default(int);
				}
				this.SendPropertyChanged("CRM_Campaign");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_MarketingSource_Prospects")]
public partial class CRM_MarketingSource_Prospect : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MarketingSource_ProspectID;
	
	private int _ProspectID;
	
	private int _MarketingSourceID;
	
	private EntityRef<CRM_MarketingSource> _CRM_MarketingSource;
	
	private EntityRef<CRM_Prospect> _CRM_Prospect;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingSource_ProspectIDChanging(int value);
    partial void OnMarketingSource_ProspectIDChanged();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    partial void OnMarketingSourceIDChanging(int value);
    partial void OnMarketingSourceIDChanged();
    #endregion
	
	public CRM_MarketingSource_Prospect()
	{
		this._CRM_MarketingSource = default(EntityRef<CRM_MarketingSource>);
		this._CRM_Prospect = default(EntityRef<CRM_Prospect>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSource_ProspectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MarketingSource_ProspectID
	{
		get
		{
			return this._MarketingSource_ProspectID;
		}
		set
		{
			if ((this._MarketingSource_ProspectID != value))
			{
				this.OnMarketingSource_ProspectIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingSource_ProspectID = value;
				this.SendPropertyChanged("MarketingSource_ProspectID");
				this.OnMarketingSource_ProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", DbType="Int NOT NULL")]
	public int ProspectID
	{
		get
		{
			return this._ProspectID;
		}
		set
		{
			if ((this._ProspectID != value))
			{
				if (this._CRM_Prospect.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProspectIDChanging(value);
				this.SendPropertyChanging();
				this._ProspectID = value;
				this.SendPropertyChanged("ProspectID");
				this.OnProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSourceID", DbType="Int NOT NULL")]
	public int MarketingSourceID
	{
		get
		{
			return this._MarketingSourceID;
		}
		set
		{
			if ((this._MarketingSourceID != value))
			{
				if (this._CRM_MarketingSource.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMarketingSourceIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingSourceID = value;
				this.SendPropertyChanged("MarketingSourceID");
				this.OnMarketingSourceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingSource_Prospect", Storage="_CRM_MarketingSource", ThisKey="MarketingSourceID", OtherKey="MarketingSourceID", IsForeignKey=true)]
	public CRM_MarketingSource CRM_MarketingSource
	{
		get
		{
			return this._CRM_MarketingSource.Entity;
		}
		set
		{
			CRM_MarketingSource previousValue = this._CRM_MarketingSource.Entity;
			if (((previousValue != value) 
						|| (this._CRM_MarketingSource.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_MarketingSource.Entity = null;
					previousValue.CRM_MarketingSource_Prospects.Remove(this);
				}
				this._CRM_MarketingSource.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingSource_Prospects.Add(this);
					this._MarketingSourceID = value.MarketingSourceID;
				}
				else
				{
					this._MarketingSourceID = default(int);
				}
				this.SendPropertyChanged("CRM_MarketingSource");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_MarketingSource_Prospect", Storage="_CRM_Prospect", ThisKey="ProspectID", OtherKey="ProspectID", IsForeignKey=true)]
	public CRM_Prospect CRM_Prospect
	{
		get
		{
			return this._CRM_Prospect.Entity;
		}
		set
		{
			CRM_Prospect previousValue = this._CRM_Prospect.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Prospect.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Prospect.Entity = null;
					previousValue.CRM_MarketingSource_Prospects.Remove(this);
				}
				this._CRM_Prospect.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingSource_Prospects.Add(this);
					this._ProspectID = value.ProspectID;
				}
				else
				{
					this._ProspectID = default(int);
				}
				this.SendPropertyChanged("CRM_Prospect");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_MarketingSources")]
public partial class CRM_MarketingSource : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MarketingSourceID;
	
	private string _MarketingSourceName;
	
	private bool _Active_YN;
	
	private EntitySet<CRM_MarketingSource_Campaign> _CRM_MarketingSource_Campaigns;
	
	private EntitySet<CRM_MarketingSource_Prospect> _CRM_MarketingSource_Prospects;
	
	private EntitySet<CRM_MarketingActivity> _CRM_MarketingActivities;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingSourceIDChanging(int value);
    partial void OnMarketingSourceIDChanged();
    partial void OnMarketingSourceNameChanging(string value);
    partial void OnMarketingSourceNameChanged();
    partial void OnActive_YNChanging(bool value);
    partial void OnActive_YNChanged();
    #endregion
	
	public CRM_MarketingSource()
	{
		this._CRM_MarketingSource_Campaigns = new EntitySet<CRM_MarketingSource_Campaign>(new Action<CRM_MarketingSource_Campaign>(this.attach_CRM_MarketingSource_Campaigns), new Action<CRM_MarketingSource_Campaign>(this.detach_CRM_MarketingSource_Campaigns));
		this._CRM_MarketingSource_Prospects = new EntitySet<CRM_MarketingSource_Prospect>(new Action<CRM_MarketingSource_Prospect>(this.attach_CRM_MarketingSource_Prospects), new Action<CRM_MarketingSource_Prospect>(this.detach_CRM_MarketingSource_Prospects));
		this._CRM_MarketingActivities = new EntitySet<CRM_MarketingActivity>(new Action<CRM_MarketingActivity>(this.attach_CRM_MarketingActivities), new Action<CRM_MarketingActivity>(this.detach_CRM_MarketingActivities));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MarketingSourceID
	{
		get
		{
			return this._MarketingSourceID;
		}
		set
		{
			if ((this._MarketingSourceID != value))
			{
				this.OnMarketingSourceIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingSourceID = value;
				this.SendPropertyChanged("MarketingSourceID");
				this.OnMarketingSourceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSourceName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string MarketingSourceName
	{
		get
		{
			return this._MarketingSourceName;
		}
		set
		{
			if ((this._MarketingSourceName != value))
			{
				this.OnMarketingSourceNameChanging(value);
				this.SendPropertyChanging();
				this._MarketingSourceName = value;
				this.SendPropertyChanged("MarketingSourceName");
				this.OnMarketingSourceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_YN", DbType="Bit NOT NULL")]
	public bool Active_YN
	{
		get
		{
			return this._Active_YN;
		}
		set
		{
			if ((this._Active_YN != value))
			{
				this.OnActive_YNChanging(value);
				this.SendPropertyChanging();
				this._Active_YN = value;
				this.SendPropertyChanged("Active_YN");
				this.OnActive_YNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingSource_Campaign", Storage="_CRM_MarketingSource_Campaigns", ThisKey="MarketingSourceID", OtherKey="MarketingSourceID")]
	public EntitySet<CRM_MarketingSource_Campaign> CRM_MarketingSource_Campaigns
	{
		get
		{
			return this._CRM_MarketingSource_Campaigns;
		}
		set
		{
			this._CRM_MarketingSource_Campaigns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingSource_Prospect", Storage="_CRM_MarketingSource_Prospects", ThisKey="MarketingSourceID", OtherKey="MarketingSourceID")]
	public EntitySet<CRM_MarketingSource_Prospect> CRM_MarketingSource_Prospects
	{
		get
		{
			return this._CRM_MarketingSource_Prospects;
		}
		set
		{
			this._CRM_MarketingSource_Prospects.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingActivity", Storage="_CRM_MarketingActivities", ThisKey="MarketingSourceID", OtherKey="SourceID")]
	public EntitySet<CRM_MarketingActivity> CRM_MarketingActivities
	{
		get
		{
			return this._CRM_MarketingActivities;
		}
		set
		{
			this._CRM_MarketingActivities.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CRM_MarketingSource_Campaigns(CRM_MarketingSource_Campaign entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = this;
	}
	
	private void detach_CRM_MarketingSource_Campaigns(CRM_MarketingSource_Campaign entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = null;
	}
	
	private void attach_CRM_MarketingSource_Prospects(CRM_MarketingSource_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = this;
	}
	
	private void detach_CRM_MarketingSource_Prospects(CRM_MarketingSource_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = null;
	}
	
	private void attach_CRM_MarketingActivities(CRM_MarketingActivity entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = this;
	}
	
	private void detach_CRM_MarketingActivities(CRM_MarketingActivity entity)
	{
		this.SendPropertyChanging();
		entity.CRM_MarketingSource = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Registrants")]
public partial class CRM_Registrant : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RegistrantID;
	
	private int _EventID;
	
	private int _ProspectID;
	
	private EntityRef<CRM_Event> _CRM_Event;
	
	private EntityRef<CRM_Prospect> _CRM_Prospect;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistrantIDChanging(int value);
    partial void OnRegistrantIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    #endregion
	
	public CRM_Registrant()
	{
		this._CRM_Event = default(EntityRef<CRM_Event>);
		this._CRM_Prospect = default(EntityRef<CRM_Prospect>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RegistrantID
	{
		get
		{
			return this._RegistrantID;
		}
		set
		{
			if ((this._RegistrantID != value))
			{
				this.OnRegistrantIDChanging(value);
				this.SendPropertyChanging();
				this._RegistrantID = value;
				this.SendPropertyChanged("RegistrantID");
				this.OnRegistrantIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
	public int EventID
	{
		get
		{
			return this._EventID;
		}
		set
		{
			if ((this._EventID != value))
			{
				if (this._CRM_Event.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEventIDChanging(value);
				this.SendPropertyChanging();
				this._EventID = value;
				this.SendPropertyChanged("EventID");
				this.OnEventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", DbType="Int NOT NULL")]
	public int ProspectID
	{
		get
		{
			return this._ProspectID;
		}
		set
		{
			if ((this._ProspectID != value))
			{
				if (this._CRM_Prospect.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProspectIDChanging(value);
				this.SendPropertyChanging();
				this._ProspectID = value;
				this.SendPropertyChanged("ProspectID");
				this.OnProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Event_CRM_Registrant", Storage="_CRM_Event", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
	public CRM_Event CRM_Event
	{
		get
		{
			return this._CRM_Event.Entity;
		}
		set
		{
			CRM_Event previousValue = this._CRM_Event.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Event.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Event.Entity = null;
					previousValue.CRM_Registrants.Remove(this);
				}
				this._CRM_Event.Entity = value;
				if ((value != null))
				{
					value.CRM_Registrants.Add(this);
					this._EventID = value.EventID;
				}
				else
				{
					this._EventID = default(int);
				}
				this.SendPropertyChanged("CRM_Event");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Registrant", Storage="_CRM_Prospect", ThisKey="ProspectID", OtherKey="ProspectID", IsForeignKey=true)]
	public CRM_Prospect CRM_Prospect
	{
		get
		{
			return this._CRM_Prospect.Entity;
		}
		set
		{
			CRM_Prospect previousValue = this._CRM_Prospect.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Prospect.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Prospect.Entity = null;
					previousValue.CRM_Registrants.Remove(this);
				}
				this._CRM_Prospect.Entity = value;
				if ((value != null))
				{
					value.CRM_Registrants.Add(this);
					this._ProspectID = value.ProspectID;
				}
				else
				{
					this._ProspectID = default(int);
				}
				this.SendPropertyChanged("CRM_Prospect");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Log")]
public partial class CRM_Log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LogID;
	
	private int _OldStatus;
	
	private int _NewStatus;
	
	private System.DateTime _DateEntered;
	
	private System.Nullable<int> _EnteredBy;
	
	private int _ProspectID;
	
	private EntityRef<CRM_Prospect> _CRM_Prospect;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnOldStatusChanging(int value);
    partial void OnOldStatusChanged();
    partial void OnNewStatusChanging(int value);
    partial void OnNewStatusChanged();
    partial void OnDateEnteredChanging(System.DateTime value);
    partial void OnDateEnteredChanged();
    partial void OnEnteredByChanging(System.Nullable<int> value);
    partial void OnEnteredByChanged();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    #endregion
	
	public CRM_Log()
	{
		this._CRM_Prospect = default(EntityRef<CRM_Prospect>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LogID
	{
		get
		{
			return this._LogID;
		}
		set
		{
			if ((this._LogID != value))
			{
				this.OnLogIDChanging(value);
				this.SendPropertyChanging();
				this._LogID = value;
				this.SendPropertyChanged("LogID");
				this.OnLogIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStatus", DbType="Int NOT NULL")]
	public int OldStatus
	{
		get
		{
			return this._OldStatus;
		}
		set
		{
			if ((this._OldStatus != value))
			{
				this.OnOldStatusChanging(value);
				this.SendPropertyChanging();
				this._OldStatus = value;
				this.SendPropertyChanged("OldStatus");
				this.OnOldStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewStatus", DbType="Int NOT NULL")]
	public int NewStatus
	{
		get
		{
			return this._NewStatus;
		}
		set
		{
			if ((this._NewStatus != value))
			{
				this.OnNewStatusChanging(value);
				this.SendPropertyChanging();
				this._NewStatus = value;
				this.SendPropertyChanged("NewStatus");
				this.OnNewStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEntered", DbType="DateTime NOT NULL")]
	public System.DateTime DateEntered
	{
		get
		{
			return this._DateEntered;
		}
		set
		{
			if ((this._DateEntered != value))
			{
				this.OnDateEnteredChanging(value);
				this.SendPropertyChanging();
				this._DateEntered = value;
				this.SendPropertyChanged("DateEntered");
				this.OnDateEnteredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnteredBy", DbType="Int")]
	public System.Nullable<int> EnteredBy
	{
		get
		{
			return this._EnteredBy;
		}
		set
		{
			if ((this._EnteredBy != value))
			{
				this.OnEnteredByChanging(value);
				this.SendPropertyChanging();
				this._EnteredBy = value;
				this.SendPropertyChanged("EnteredBy");
				this.OnEnteredByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", DbType="Int NOT NULL")]
	public int ProspectID
	{
		get
		{
			return this._ProspectID;
		}
		set
		{
			if ((this._ProspectID != value))
			{
				if (this._CRM_Prospect.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProspectIDChanging(value);
				this.SendPropertyChanging();
				this._ProspectID = value;
				this.SendPropertyChanged("ProspectID");
				this.OnProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Log", Storage="_CRM_Prospect", ThisKey="ProspectID", OtherKey="ProspectID", IsForeignKey=true)]
	public CRM_Prospect CRM_Prospect
	{
		get
		{
			return this._CRM_Prospect.Entity;
		}
		set
		{
			CRM_Prospect previousValue = this._CRM_Prospect.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Prospect.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Prospect.Entity = null;
					previousValue.CRM_Logs.Remove(this);
				}
				this._CRM_Prospect.Entity = value;
				if ((value != null))
				{
					value.CRM_Logs.Add(this);
					this._ProspectID = value.ProspectID;
				}
				else
				{
					this._ProspectID = default(int);
				}
				this.SendPropertyChanged("CRM_Prospect");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_MarketingActivity")]
public partial class CRM_MarketingActivity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MarketingActivityID;
	
	private int _SourceID;
	
	private string _SourceType;
	
	private System.DateTime _StartDate;
	
	private System.DateTime _EndDate;
	
	private string _Notes;
	
	private int _CapmpaignID;
	
	private System.Nullable<decimal> _Money_Spent;
	
	private EntityRef<CRM_MarketingSource> _CRM_MarketingSource;
	
	private EntityRef<CRM_Campaign> _CRM_Campaign;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMarketingActivityIDChanging(int value);
    partial void OnMarketingActivityIDChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnSourceTypeChanging(string value);
    partial void OnSourceTypeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCapmpaignIDChanging(int value);
    partial void OnCapmpaignIDChanged();
    partial void OnMoney_SpentChanging(System.Nullable<decimal> value);
    partial void OnMoney_SpentChanged();
    #endregion
	
	public CRM_MarketingActivity()
	{
		this._CRM_MarketingSource = default(EntityRef<CRM_MarketingSource>);
		this._CRM_Campaign = default(EntityRef<CRM_Campaign>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MarketingActivityID
	{
		get
		{
			return this._MarketingActivityID;
		}
		set
		{
			if ((this._MarketingActivityID != value))
			{
				this.OnMarketingActivityIDChanging(value);
				this.SendPropertyChanging();
				this._MarketingActivityID = value;
				this.SendPropertyChanged("MarketingActivityID");
				this.OnMarketingActivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
	public int SourceID
	{
		get
		{
			return this._SourceID;
		}
		set
		{
			if ((this._SourceID != value))
			{
				if (this._CRM_MarketingSource.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSourceIDChanging(value);
				this.SendPropertyChanging();
				this._SourceID = value;
				this.SendPropertyChanged("SourceID");
				this.OnSourceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="VarChar(200)")]
	public string SourceType
	{
		get
		{
			return this._SourceType;
		}
		set
		{
			if ((this._SourceType != value))
			{
				this.OnSourceTypeChanging(value);
				this.SendPropertyChanging();
				this._SourceType = value;
				this.SendPropertyChanged("SourceType");
				this.OnSourceTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
	public System.DateTime EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapmpaignID", DbType="Int NOT NULL")]
	public int CapmpaignID
	{
		get
		{
			return this._CapmpaignID;
		}
		set
		{
			if ((this._CapmpaignID != value))
			{
				if (this._CRM_Campaign.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCapmpaignIDChanging(value);
				this.SendPropertyChanging();
				this._CapmpaignID = value;
				this.SendPropertyChanged("CapmpaignID");
				this.OnCapmpaignIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Money Spent]", Storage="_Money_Spent", DbType="Money")]
	public System.Nullable<decimal> Money_Spent
	{
		get
		{
			return this._Money_Spent;
		}
		set
		{
			if ((this._Money_Spent != value))
			{
				this.OnMoney_SpentChanging(value);
				this.SendPropertyChanging();
				this._Money_Spent = value;
				this.SendPropertyChanged("Money_Spent");
				this.OnMoney_SpentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_MarketingSource_CRM_MarketingActivity", Storage="_CRM_MarketingSource", ThisKey="SourceID", OtherKey="MarketingSourceID", IsForeignKey=true)]
	public CRM_MarketingSource CRM_MarketingSource
	{
		get
		{
			return this._CRM_MarketingSource.Entity;
		}
		set
		{
			CRM_MarketingSource previousValue = this._CRM_MarketingSource.Entity;
			if (((previousValue != value) 
						|| (this._CRM_MarketingSource.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_MarketingSource.Entity = null;
					previousValue.CRM_MarketingActivities.Remove(this);
				}
				this._CRM_MarketingSource.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingActivities.Add(this);
					this._SourceID = value.MarketingSourceID;
				}
				else
				{
					this._SourceID = default(int);
				}
				this.SendPropertyChanged("CRM_MarketingSource");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_MarketingActivity", Storage="_CRM_Campaign", ThisKey="CapmpaignID", OtherKey="CampaignID", IsForeignKey=true)]
	public CRM_Campaign CRM_Campaign
	{
		get
		{
			return this._CRM_Campaign.Entity;
		}
		set
		{
			CRM_Campaign previousValue = this._CRM_Campaign.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Campaign.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Campaign.Entity = null;
					previousValue.CRM_MarketingActivities.Remove(this);
				}
				this._CRM_Campaign.Entity = value;
				if ((value != null))
				{
					value.CRM_MarketingActivities.Add(this);
					this._CapmpaignID = value.CampaignID;
				}
				else
				{
					this._CapmpaignID = default(int);
				}
				this.SendPropertyChanged("CRM_Campaign");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Campaigns")]
public partial class CRM_Campaign : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CampaignID;
	
	private string _CampaignName;
	
	private System.Nullable<decimal> _MarketingBudget;
	
	private string _CampaignType;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _MarketingSources;
	
	private bool _Enabled;
	
	private EntitySet<CRM_MarketingSource_Campaign> _CRM_MarketingSource_Campaigns;
	
	private EntitySet<CRM_MarketingActivity> _CRM_MarketingActivities;
	
	private EntitySet<CRM_Event> _CRM_Events;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnMarketingBudgetChanging(System.Nullable<decimal> value);
    partial void OnMarketingBudgetChanged();
    partial void OnCampaignTypeChanging(string value);
    partial void OnCampaignTypeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnMarketingSourcesChanging(string value);
    partial void OnMarketingSourcesChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
	
	public CRM_Campaign()
	{
		this._CRM_MarketingSource_Campaigns = new EntitySet<CRM_MarketingSource_Campaign>(new Action<CRM_MarketingSource_Campaign>(this.attach_CRM_MarketingSource_Campaigns), new Action<CRM_MarketingSource_Campaign>(this.detach_CRM_MarketingSource_Campaigns));
		this._CRM_MarketingActivities = new EntitySet<CRM_MarketingActivity>(new Action<CRM_MarketingActivity>(this.attach_CRM_MarketingActivities), new Action<CRM_MarketingActivity>(this.detach_CRM_MarketingActivities));
		this._CRM_Events = new EntitySet<CRM_Event>(new Action<CRM_Event>(this.attach_CRM_Events), new Action<CRM_Event>(this.detach_CRM_Events));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CampaignID
	{
		get
		{
			return this._CampaignID;
		}
		set
		{
			if ((this._CampaignID != value))
			{
				this.OnCampaignIDChanging(value);
				this.SendPropertyChanging();
				this._CampaignID = value;
				this.SendPropertyChanged("CampaignID");
				this.OnCampaignIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string CampaignName
	{
		get
		{
			return this._CampaignName;
		}
		set
		{
			if ((this._CampaignName != value))
			{
				this.OnCampaignNameChanging(value);
				this.SendPropertyChanging();
				this._CampaignName = value;
				this.SendPropertyChanged("CampaignName");
				this.OnCampaignNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingBudget", DbType="Money")]
	public System.Nullable<decimal> MarketingBudget
	{
		get
		{
			return this._MarketingBudget;
		}
		set
		{
			if ((this._MarketingBudget != value))
			{
				this.OnMarketingBudgetChanging(value);
				this.SendPropertyChanging();
				this._MarketingBudget = value;
				this.SendPropertyChanged("MarketingBudget");
				this.OnMarketingBudgetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string CampaignType
	{
		get
		{
			return this._CampaignType;
		}
		set
		{
			if ((this._CampaignType != value))
			{
				this.OnCampaignTypeChanging(value);
				this.SendPropertyChanging();
				this._CampaignType = value;
				this.SendPropertyChanged("CampaignType");
				this.OnCampaignTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSources", DbType="VarChar(200)")]
	public string MarketingSources
	{
		get
		{
			return this._MarketingSources;
		}
		set
		{
			if ((this._MarketingSources != value))
			{
				this.OnMarketingSourcesChanging(value);
				this.SendPropertyChanging();
				this._MarketingSources = value;
				this.SendPropertyChanged("MarketingSources");
				this.OnMarketingSourcesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_MarketingSource_Campaign", Storage="_CRM_MarketingSource_Campaigns", ThisKey="CampaignID", OtherKey="CampaignID")]
	public EntitySet<CRM_MarketingSource_Campaign> CRM_MarketingSource_Campaigns
	{
		get
		{
			return this._CRM_MarketingSource_Campaigns;
		}
		set
		{
			this._CRM_MarketingSource_Campaigns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_MarketingActivity", Storage="_CRM_MarketingActivities", ThisKey="CampaignID", OtherKey="CapmpaignID")]
	public EntitySet<CRM_MarketingActivity> CRM_MarketingActivities
	{
		get
		{
			return this._CRM_MarketingActivities;
		}
		set
		{
			this._CRM_MarketingActivities.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_Event", Storage="_CRM_Events", ThisKey="CampaignID", OtherKey="CampaignID")]
	public EntitySet<CRM_Event> CRM_Events
	{
		get
		{
			return this._CRM_Events;
		}
		set
		{
			this._CRM_Events.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CRM_MarketingSource_Campaigns(CRM_MarketingSource_Campaign entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = this;
	}
	
	private void detach_CRM_MarketingSource_Campaigns(CRM_MarketingSource_Campaign entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = null;
	}
	
	private void attach_CRM_MarketingActivities(CRM_MarketingActivity entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = this;
	}
	
	private void detach_CRM_MarketingActivities(CRM_MarketingActivity entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = null;
	}
	
	private void attach_CRM_Events(CRM_Event entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = this;
	}
	
	private void detach_CRM_Events(CRM_Event entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Campaign = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Events")]
public partial class CRM_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EventID;
	
	private string _EventName;
	
	private System.DateTime _EventDate;
	
	private string _Venue;
	
	private string _Notes;
	
	private int _CampaignID;
	
	private string _Location;
	
	private string _EventLength;
	
	private string _Walkins;
	
	private System.Nullable<int> _Appointments;
	
	private System.Nullable<int> _Callbacks;
	
	private System.Nullable<int> _OverallPerformance;
	
	private System.Nullable<int> _FacilityInteriorExterior;
	
	private System.Nullable<int> _VenueQuality;
	
	private System.Nullable<int> _Parking;
	
	private System.Nullable<int> _AudienceReaction;
	
	private System.Nullable<int> _AudienceQuality;
	
	private bool _Enabled;
	
	private EntitySet<CRM_Attendee> _CRM_Attendees;
	
	private EntitySet<CRM_Registrant> _CRM_Registrants;
	
	private EntityRef<CRM_Campaign> _CRM_Campaign;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnVenueChanging(string value);
    partial void OnVenueChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnEventLengthChanging(string value);
    partial void OnEventLengthChanged();
    partial void OnWalkinsChanging(string value);
    partial void OnWalkinsChanged();
    partial void OnAppointmentsChanging(System.Nullable<int> value);
    partial void OnAppointmentsChanged();
    partial void OnCallbacksChanging(System.Nullable<int> value);
    partial void OnCallbacksChanged();
    partial void OnOverallPerformanceChanging(System.Nullable<int> value);
    partial void OnOverallPerformanceChanged();
    partial void OnFacilityInteriorExteriorChanging(System.Nullable<int> value);
    partial void OnFacilityInteriorExteriorChanged();
    partial void OnVenueQualityChanging(System.Nullable<int> value);
    partial void OnVenueQualityChanged();
    partial void OnParkingChanging(System.Nullable<int> value);
    partial void OnParkingChanged();
    partial void OnAudienceReactionChanging(System.Nullable<int> value);
    partial void OnAudienceReactionChanged();
    partial void OnAudienceQualityChanging(System.Nullable<int> value);
    partial void OnAudienceQualityChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
	
	public CRM_Event()
	{
		this._CRM_Attendees = new EntitySet<CRM_Attendee>(new Action<CRM_Attendee>(this.attach_CRM_Attendees), new Action<CRM_Attendee>(this.detach_CRM_Attendees));
		this._CRM_Registrants = new EntitySet<CRM_Registrant>(new Action<CRM_Registrant>(this.attach_CRM_Registrants), new Action<CRM_Registrant>(this.detach_CRM_Registrants));
		this._CRM_Campaign = default(EntityRef<CRM_Campaign>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EventID
	{
		get
		{
			return this._EventID;
		}
		set
		{
			if ((this._EventID != value))
			{
				this.OnEventIDChanging(value);
				this.SendPropertyChanging();
				this._EventID = value;
				this.SendPropertyChanged("EventID");
				this.OnEventIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string EventName
	{
		get
		{
			return this._EventName;
		}
		set
		{
			if ((this._EventName != value))
			{
				this.OnEventNameChanging(value);
				this.SendPropertyChanging();
				this._EventName = value;
				this.SendPropertyChanged("EventName");
				this.OnEventNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
	public System.DateTime EventDate
	{
		get
		{
			return this._EventDate;
		}
		set
		{
			if ((this._EventDate != value))
			{
				this.OnEventDateChanging(value);
				this.SendPropertyChanging();
				this._EventDate = value;
				this.SendPropertyChanged("EventDate");
				this.OnEventDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Venue
	{
		get
		{
			return this._Venue;
		}
		set
		{
			if ((this._Venue != value))
			{
				this.OnVenueChanging(value);
				this.SendPropertyChanging();
				this._Venue = value;
				this.SendPropertyChanged("Venue");
				this.OnVenueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
	public int CampaignID
	{
		get
		{
			return this._CampaignID;
		}
		set
		{
			if ((this._CampaignID != value))
			{
				if (this._CRM_Campaign.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCampaignIDChanging(value);
				this.SendPropertyChanging();
				this._CampaignID = value;
				this.SendPropertyChanged("CampaignID");
				this.OnCampaignIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLength", DbType="VarChar(50)")]
	public string EventLength
	{
		get
		{
			return this._EventLength;
		}
		set
		{
			if ((this._EventLength != value))
			{
				this.OnEventLengthChanging(value);
				this.SendPropertyChanging();
				this._EventLength = value;
				this.SendPropertyChanged("EventLength");
				this.OnEventLengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Walkins", DbType="VarChar(50)")]
	public string Walkins
	{
		get
		{
			return this._Walkins;
		}
		set
		{
			if ((this._Walkins != value))
			{
				this.OnWalkinsChanging(value);
				this.SendPropertyChanging();
				this._Walkins = value;
				this.SendPropertyChanged("Walkins");
				this.OnWalkinsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointments", DbType="Int")]
	public System.Nullable<int> Appointments
	{
		get
		{
			return this._Appointments;
		}
		set
		{
			if ((this._Appointments != value))
			{
				this.OnAppointmentsChanging(value);
				this.SendPropertyChanging();
				this._Appointments = value;
				this.SendPropertyChanged("Appointments");
				this.OnAppointmentsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Callbacks", DbType="Int")]
	public System.Nullable<int> Callbacks
	{
		get
		{
			return this._Callbacks;
		}
		set
		{
			if ((this._Callbacks != value))
			{
				this.OnCallbacksChanging(value);
				this.SendPropertyChanging();
				this._Callbacks = value;
				this.SendPropertyChanged("Callbacks");
				this.OnCallbacksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallPerformance", DbType="Int")]
	public System.Nullable<int> OverallPerformance
	{
		get
		{
			return this._OverallPerformance;
		}
		set
		{
			if ((this._OverallPerformance != value))
			{
				this.OnOverallPerformanceChanging(value);
				this.SendPropertyChanging();
				this._OverallPerformance = value;
				this.SendPropertyChanged("OverallPerformance");
				this.OnOverallPerformanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityInteriorExterior", DbType="Int")]
	public System.Nullable<int> FacilityInteriorExterior
	{
		get
		{
			return this._FacilityInteriorExterior;
		}
		set
		{
			if ((this._FacilityInteriorExterior != value))
			{
				this.OnFacilityInteriorExteriorChanging(value);
				this.SendPropertyChanging();
				this._FacilityInteriorExterior = value;
				this.SendPropertyChanged("FacilityInteriorExterior");
				this.OnFacilityInteriorExteriorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VenueQuality", DbType="Int")]
	public System.Nullable<int> VenueQuality
	{
		get
		{
			return this._VenueQuality;
		}
		set
		{
			if ((this._VenueQuality != value))
			{
				this.OnVenueQualityChanging(value);
				this.SendPropertyChanging();
				this._VenueQuality = value;
				this.SendPropertyChanged("VenueQuality");
				this.OnVenueQualityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parking", DbType="Int")]
	public System.Nullable<int> Parking
	{
		get
		{
			return this._Parking;
		}
		set
		{
			if ((this._Parking != value))
			{
				this.OnParkingChanging(value);
				this.SendPropertyChanging();
				this._Parking = value;
				this.SendPropertyChanged("Parking");
				this.OnParkingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudienceReaction", DbType="Int")]
	public System.Nullable<int> AudienceReaction
	{
		get
		{
			return this._AudienceReaction;
		}
		set
		{
			if ((this._AudienceReaction != value))
			{
				this.OnAudienceReactionChanging(value);
				this.SendPropertyChanging();
				this._AudienceReaction = value;
				this.SendPropertyChanged("AudienceReaction");
				this.OnAudienceReactionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudienceQuality", DbType="Int")]
	public System.Nullable<int> AudienceQuality
	{
		get
		{
			return this._AudienceQuality;
		}
		set
		{
			if ((this._AudienceQuality != value))
			{
				this.OnAudienceQualityChanging(value);
				this.SendPropertyChanging();
				this._AudienceQuality = value;
				this.SendPropertyChanged("AudienceQuality");
				this.OnAudienceQualityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Event_CRM_Attendee", Storage="_CRM_Attendees", ThisKey="EventID", OtherKey="EventID")]
	public EntitySet<CRM_Attendee> CRM_Attendees
	{
		get
		{
			return this._CRM_Attendees;
		}
		set
		{
			this._CRM_Attendees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Event_CRM_Registrant", Storage="_CRM_Registrants", ThisKey="EventID", OtherKey="EventID")]
	public EntitySet<CRM_Registrant> CRM_Registrants
	{
		get
		{
			return this._CRM_Registrants;
		}
		set
		{
			this._CRM_Registrants.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Campaign_CRM_Event", Storage="_CRM_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
	public CRM_Campaign CRM_Campaign
	{
		get
		{
			return this._CRM_Campaign.Entity;
		}
		set
		{
			CRM_Campaign previousValue = this._CRM_Campaign.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Campaign.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Campaign.Entity = null;
					previousValue.CRM_Events.Remove(this);
				}
				this._CRM_Campaign.Entity = value;
				if ((value != null))
				{
					value.CRM_Events.Add(this);
					this._CampaignID = value.CampaignID;
				}
				else
				{
					this._CampaignID = default(int);
				}
				this.SendPropertyChanged("CRM_Campaign");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CRM_Attendees(CRM_Attendee entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Event = this;
	}
	
	private void detach_CRM_Attendees(CRM_Attendee entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Event = null;
	}
	
	private void attach_CRM_Registrants(CRM_Registrant entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Event = this;
	}
	
	private void detach_CRM_Registrants(CRM_Registrant entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Event = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRM_Prospects")]
public partial class CRM_Prospect : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProspectID;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Address;
	
	private string _City;
	
	private string _State;
	
	private string _Zip;
	
	private string _MainPhone;
	
	private string _AltPhone;
	
	private string _Email;
	
	private string _ContactMethod;
	
	private int _StatusID;
	
	private string _Notes;
	
	private bool _Flagged;
	
	private string _CreatedBy;
	
	private System.Nullable<int> _PatientID;
	
	private string _MarketingSources;
	
	private int _AppointmentID;
	
	private bool _ActiveYN;
	
	private EntitySet<CRM_Attendee> _CRM_Attendees;
	
	private EntitySet<CRM_MarketingSource_Prospect> _CRM_MarketingSource_Prospects;
	
	private EntitySet<CRM_Registrant> _CRM_Registrants;
	
	private EntitySet<CRM_Log> _CRM_Logs;
	
	private EntityRef<CRM_Status> _CRM_Status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnMainPhoneChanging(string value);
    partial void OnMainPhoneChanged();
    partial void OnAltPhoneChanging(string value);
    partial void OnAltPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactMethodChanging(string value);
    partial void OnContactMethodChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnFlaggedChanging(bool value);
    partial void OnFlaggedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnMarketingSourcesChanging(string value);
    partial void OnMarketingSourcesChanged();
    partial void OnAppointmentIDChanging(int value);
    partial void OnAppointmentIDChanged();
    partial void OnActiveYNChanging(bool value);
    partial void OnActiveYNChanged();
    #endregion
	
	public CRM_Prospect()
	{
		this._CRM_Attendees = new EntitySet<CRM_Attendee>(new Action<CRM_Attendee>(this.attach_CRM_Attendees), new Action<CRM_Attendee>(this.detach_CRM_Attendees));
		this._CRM_MarketingSource_Prospects = new EntitySet<CRM_MarketingSource_Prospect>(new Action<CRM_MarketingSource_Prospect>(this.attach_CRM_MarketingSource_Prospects), new Action<CRM_MarketingSource_Prospect>(this.detach_CRM_MarketingSource_Prospects));
		this._CRM_Registrants = new EntitySet<CRM_Registrant>(new Action<CRM_Registrant>(this.attach_CRM_Registrants), new Action<CRM_Registrant>(this.detach_CRM_Registrants));
		this._CRM_Logs = new EntitySet<CRM_Log>(new Action<CRM_Log>(this.attach_CRM_Logs), new Action<CRM_Log>(this.detach_CRM_Logs));
		this._CRM_Status = default(EntityRef<CRM_Status>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProspectID
	{
		get
		{
			return this._ProspectID;
		}
		set
		{
			if ((this._ProspectID != value))
			{
				this.OnProspectIDChanging(value);
				this.SendPropertyChanging();
				this._ProspectID = value;
				this.SendPropertyChanged("ProspectID");
				this.OnProspectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(200)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(200)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainPhone", DbType="VarChar(100)")]
	public string MainPhone
	{
		get
		{
			return this._MainPhone;
		}
		set
		{
			if ((this._MainPhone != value))
			{
				this.OnMainPhoneChanging(value);
				this.SendPropertyChanging();
				this._MainPhone = value;
				this.SendPropertyChanged("MainPhone");
				this.OnMainPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltPhone", DbType="VarChar(100)")]
	public string AltPhone
	{
		get
		{
			return this._AltPhone;
		}
		set
		{
			if ((this._AltPhone != value))
			{
				this.OnAltPhoneChanging(value);
				this.SendPropertyChanging();
				this._AltPhone = value;
				this.SendPropertyChanged("AltPhone");
				this.OnAltPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(500)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMethod", DbType="VarChar(50)")]
	public string ContactMethod
	{
		get
		{
			return this._ContactMethod;
		}
		set
		{
			if ((this._ContactMethod != value))
			{
				this.OnContactMethodChanging(value);
				this.SendPropertyChanging();
				this._ContactMethod = value;
				this.SendPropertyChanged("ContactMethod");
				this.OnContactMethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
	public int StatusID
	{
		get
		{
			return this._StatusID;
		}
		set
		{
			if ((this._StatusID != value))
			{
				if (this._CRM_Status.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStatusIDChanging(value);
				this.SendPropertyChanging();
				this._StatusID = value;
				this.SendPropertyChanged("StatusID");
				this.OnStatusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flagged", DbType="Bit NOT NULL")]
	public bool Flagged
	{
		get
		{
			return this._Flagged;
		}
		set
		{
			if ((this._Flagged != value))
			{
				this.OnFlaggedChanging(value);
				this.SendPropertyChanging();
				this._Flagged = value;
				this.SendPropertyChanged("Flagged");
				this.OnFlaggedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
	public System.Nullable<int> PatientID
	{
		get
		{
			return this._PatientID;
		}
		set
		{
			if ((this._PatientID != value))
			{
				this.OnPatientIDChanging(value);
				this.SendPropertyChanging();
				this._PatientID = value;
				this.SendPropertyChanged("PatientID");
				this.OnPatientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketingSources", DbType="VarChar(200)")]
	public string MarketingSources
	{
		get
		{
			return this._MarketingSources;
		}
		set
		{
			if ((this._MarketingSources != value))
			{
				this.OnMarketingSourcesChanging(value);
				this.SendPropertyChanging();
				this._MarketingSources = value;
				this.SendPropertyChanged("MarketingSources");
				this.OnMarketingSourcesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentID", DbType="Int NOT NULL")]
	public int AppointmentID
	{
		get
		{
			return this._AppointmentID;
		}
		set
		{
			if ((this._AppointmentID != value))
			{
				this.OnAppointmentIDChanging(value);
				this.SendPropertyChanging();
				this._AppointmentID = value;
				this.SendPropertyChanged("AppointmentID");
				this.OnAppointmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveYN", DbType="Bit NOT NULL")]
	public bool ActiveYN
	{
		get
		{
			return this._ActiveYN;
		}
		set
		{
			if ((this._ActiveYN != value))
			{
				this.OnActiveYNChanging(value);
				this.SendPropertyChanging();
				this._ActiveYN = value;
				this.SendPropertyChanged("ActiveYN");
				this.OnActiveYNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Attendee", Storage="_CRM_Attendees", ThisKey="ProspectID", OtherKey="ProspectID")]
	public EntitySet<CRM_Attendee> CRM_Attendees
	{
		get
		{
			return this._CRM_Attendees;
		}
		set
		{
			this._CRM_Attendees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_MarketingSource_Prospect", Storage="_CRM_MarketingSource_Prospects", ThisKey="ProspectID", OtherKey="ProspectID")]
	public EntitySet<CRM_MarketingSource_Prospect> CRM_MarketingSource_Prospects
	{
		get
		{
			return this._CRM_MarketingSource_Prospects;
		}
		set
		{
			this._CRM_MarketingSource_Prospects.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Registrant", Storage="_CRM_Registrants", ThisKey="ProspectID", OtherKey="ProspectID")]
	public EntitySet<CRM_Registrant> CRM_Registrants
	{
		get
		{
			return this._CRM_Registrants;
		}
		set
		{
			this._CRM_Registrants.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Prospect_CRM_Log", Storage="_CRM_Logs", ThisKey="ProspectID", OtherKey="ProspectID")]
	public EntitySet<CRM_Log> CRM_Logs
	{
		get
		{
			return this._CRM_Logs;
		}
		set
		{
			this._CRM_Logs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRM_Status_CRM_Prospect", Storage="_CRM_Status", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
	public CRM_Status CRM_Status
	{
		get
		{
			return this._CRM_Status.Entity;
		}
		set
		{
			CRM_Status previousValue = this._CRM_Status.Entity;
			if (((previousValue != value) 
						|| (this._CRM_Status.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CRM_Status.Entity = null;
					previousValue.CRM_Prospects.Remove(this);
				}
				this._CRM_Status.Entity = value;
				if ((value != null))
				{
					value.CRM_Prospects.Add(this);
					this._StatusID = value.StatusID;
				}
				else
				{
					this._StatusID = default(int);
				}
				this.SendPropertyChanged("CRM_Status");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CRM_Attendees(CRM_Attendee entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = this;
	}
	
	private void detach_CRM_Attendees(CRM_Attendee entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = null;
	}
	
	private void attach_CRM_MarketingSource_Prospects(CRM_MarketingSource_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = this;
	}
	
	private void detach_CRM_MarketingSource_Prospects(CRM_MarketingSource_Prospect entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = null;
	}
	
	private void attach_CRM_Registrants(CRM_Registrant entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = this;
	}
	
	private void detach_CRM_Registrants(CRM_Registrant entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = null;
	}
	
	private void attach_CRM_Logs(CRM_Log entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = this;
	}
	
	private void detach_CRM_Logs(CRM_Log entity)
	{
		this.SendPropertyChanging();
		entity.CRM_Prospect = null;
	}
}
#pragma warning restore 1591
